{"code": "df = pd.DataFrame(data, columns=cols)\n    df_numeric = df.select_dtypes(include=[np.number])\n    correlation_matrix = df_numeric.corr()\n    return correlation_matrix", "compilation_passed": true, "time": 0.001992940902709961, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data=data, columns=cols)\n    correlation_matrix = df.corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.001750946044921875, "tests_passed": true, "error": null}
{"code": "correlation_matrix = pd.DataFrame(data, columns=cols).corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.0016980171203613281, "tests_passed": true, "error": null}
{"code": "data = np.array(data)\n    df = pd.DataFrame(data, columns=cols)\n    correlation_matrix = df.corr()\n    return correlation_matrix", "compilation_passed": true, "time": 0.0016210079193115234, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data=data, columns=cols)\n    correlation_matrix = df.corr(numeric_only=True)\n    return correlation_matrix", "compilation_passed": true, "time": 0.0017592906951904297, "tests_passed": true, "error": null}
{"code": "# Create a pandas DataFrame from the provided data and column names.\n    df = pd.DataFrame(data, columns=cols)\n\n    # Select all numeric columns.\n    numeric_cols = df.select_dtypes(include=['float', 'int']).columns\n\n    # Create a correlation matrix between the numeric columns.\n    correlation_matrix = df[numeric_cols].corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.002785921096801758, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data, columns=cols)\n    corr_matrix = df.corr()\n    return corr_matrix", "compilation_passed": true, "time": 0.001744985580444336, "tests_passed": true, "error": null}
{"code": "# Your code here\n    pass", "compilation_passed": true, "time": 0.001795053482055664, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(data, columns=cols)\n    correlation_matrix = df.corr()\n    return correlation_matrix", "compilation_passed": true, "time": 0.0019221305847167969, "tests_passed": true, "error": null}
{"code": "# Convert the list of lists to a DataFrame\n    data = pd.DataFrame(data, columns=cols)\n    # Calculate correlation matrix\n    correlation_matrix = data.corr()\n    # Return the correlation matrix as a DataFrame\n    return correlation_matrix", "compilation_passed": true, "time": 0.0017771720886230469, "tests_passed": true, "error": null}
{"code": "# Convert the provided data into a DataFrame\n    df = pd.DataFrame(data, columns=cols)\n\n    # Calculate the correlation matrix of numeric columns\n    correlation_matrix = df.corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.0017299652099609375, "tests_passed": true, "error": null}
{"code": "# Your solution here\n    # Your solution here\n    data_dict = {col: [] for col in cols}\n    for i in range(len(data)):\n        for j in range(len(data[i])):\n            data_dict[cols[j]].append(data[i][j])\n    df = pd.DataFrame(data_dict)\n    correlation_matrix = df.corr()\n    return correlation_matrix", "compilation_passed": true, "time": 0.0018422603607177734, "tests_passed": true, "error": null}
{"code": "# Convert the provided data into a DataFrame\n    df = pd.DataFrame(data, columns=cols)\n\n    # Extract only numeric columns\n    numeric_df = df.select_dtypes(include=np.number)\n\n    # Calculate the correlation matrix\n    correlation_matrix = numeric_df.corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.0019168853759765625, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data, columns=cols)\n    return df.corr()", "compilation_passed": true, "time": 0.0017251968383789062, "tests_passed": true, "error": null}
{"code": "# turn the provided data into a DataFrame\n    df = pd.DataFrame(data=data, columns=cols)\n    # calculate the correlation matrix of numeric columns\n    correlation_matrix = df.corr()\n    return correlation_matrix", "compilation_passed": true, "time": 0.001706838607788086, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(np.array(data), columns=cols)\n    corr = df.corr()\n    return corr", "compilation_passed": true, "time": 0.001631021499633789, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data, columns=cols)\n    correlation_matrix = df.corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.0018460750579833984, "tests_passed": true, "error": null}
{"code": "# Create a DataFrame from the data and column names\n    df = pd.DataFrame(data, columns=cols)\n\n    # Calculate the correlation matrix of numeric columns\n    correlation_matrix = df.corr()\n\n    # Return the correlation matrix\n    return correlation_matrix", "compilation_passed": true, "time": 0.0019068717956542969, "tests_passed": true, "error": null}
{"code": "# Convert the provided data into a DataFrame\n    df = pd.DataFrame(data, columns=cols)\n\n    # Extract the numeric columns from the DataFrame\n    numeric_df = df.select_dtypes(include='number')\n\n    # Calculate the correlation matrix\n    correlation_matrix = numeric_df.corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.00201416015625, "tests_passed": true, "error": null}
{"code": "# create DataFrame from data\n    df = pd.DataFrame(np.array(data), columns=cols)\n    # calculate correlation matrix of numeric columns\n    correlation_matrix = df.corr()\n    return correlation_matrix", "compilation_passed": true, "time": 0.0015769004821777344, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data, columns=cols)\n\n    numeric_cols = df.select_dtypes(include=np.number).columns\n\n    correlation_matrix = df[numeric_cols].corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.002403736114501953, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(np.array(data), columns=cols)\n    correlation_matrix = df.corr()\n    return correlation_matrix", "compilation_passed": true, "time": 0.0016422271728515625, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data, columns=cols)\n\n    # Get the numeric columns\n    numeric_columns = df.select_dtypes(include=['float64', 'int64']).columns\n\n    # Get the correlation matrix\n    correlation_matrix = df[numeric_columns].corr()\n\n    return correlation_matrix", "compilation_passed": true, "time": 0.002488851547241211, "tests_passed": true, "error": null}
{"code": "# Turn the provided data into a DataFrame\n    df = pd.DataFrame(data, columns=cols)\n    # Calculate the correlation matrix of numeric columns\n    correlation_matrix = df.corr()\n    return correlation_matrix", "compilation_passed": true, "time": 0.0017418861389160156, "tests_passed": true, "error": null}
{"code": "# Convert the provided data to a DataFrame\n    df = pd.DataFrame(data, columns=cols)\n    # Calculate the correlation matrix\n    correlation_matrix = df.corr()\n    # Return the correlation matrix\n    return correlation_matrix", "compilation_passed": true, "time": 0.0017158985137939453, "tests_passed": true, "error": null}
