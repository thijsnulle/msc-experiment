{"code": "for filename in os.listdir(SOURCE_DIR):\n        match = FILE_PATTERN.match(filename)\n        if match:\n            prefix = match.group(1)\n            old_path = os.path.join(SOURCE_DIR, filename)\n            new_filename = prefix + '.json'\n            new_path = os.path.join(TARGET_DIR, new_filename)\n            shutil.move(old_path, new_path)", "compilation_passed": true, "time": 0.0020940303802490234, "tests_passed": true, "error": null}
{"code": "# Step 1: Get all files in the source directory\n    source_files = os.listdir(SOURCE_DIR)\n    # Step 2: Iterate over all source files\n    for file_name in source_files:\n        # Step 3: Check if the file is a json file\n        if file_name.endswith('.json'):\n            # Step 4: Find the last occurrence of \"-\" in the filename and extract the prefix of the filename\n            match = re.search(FILE_PATTERN, file_name)\n            if match:\n                prefix = match.group(1)\n                # Step 5: Rename the file in the source directory using the prefix extracted in step 4\n                old_path = os.path.join(SOURCE_DIR, file_name)\n                new_path = os.path.join(SOURCE_DIR, prefix + '.json')\n                os.rename(old_path, new_path)\n            else:\n                # Step 5: Skip the file if it does not contain \"-\" in the filename\n                continue\n            # Step 6:", "compilation_passed": true, "time": 0.002093076705932617, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# get a list of all files in source directory\n    files = os.listdir(SOURCE_DIR)\n\n    # iterate through all files\n    for filename in files:\n        # if file is a json file, process it\n        if filename.endswith('.json'):\n            # find the last index of \"-\" in the filename\n            index = filename.rfind('-')\n\n            # if \"-\" is present in the filename\n            if index != -1:\n                # get the prefix of the filename\n                prefix = filename[:index]\n\n                # construct the new filename\n                new_filename = f\"{prefix}.json\"\n\n                # construct the full path of the new file in the target directory\n                new_path = os.path.join(TARGET_DIR, new_filename)\n\n                # move the file to the target directory and rename it\n                shutil.move(os.path.join(SOURCE_DIR, filename), new_path)", "compilation_passed": true, "time": 0.0021500587463378906, "tests_passed": true, "error": null}
{"code": "files = os.listdir(SOURCE_DIR)\n    for file_name in files:\n        match = FILE_PATTERN.match(file_name)\n        if match:\n            prefix = match.group(1)\n            src_path = os.path.join(SOURCE_DIR, file_name)\n            dst_path = os.path.join(TARGET_DIR, f'{prefix}.json')\n            shutil.move(src_path, dst_path)", "compilation_passed": true, "time": 0.0023758411407470703, "tests_passed": true, "error": null}
{"code": "for file in os.listdir(SOURCE_DIR):\n        match = re.match(FILE_PATTERN, file)\n        if match:\n            prefix = match.group(1)\n            src_path = os.path.join(SOURCE_DIR, file)\n            dest_path = os.path.join(TARGET_DIR, prefix + '.json')\n            shutil.move(src_path, dest_path)", "compilation_passed": true, "time": 0.001978158950805664, "tests_passed": true, "error": null}
{"code": "# Get a list of all filenames in the source directory\n    filenames = os.listdir(SOURCE_DIR)\n    # Iterate through the filenames\n    for filename in filenames:\n        # Check if the filename matches the desired pattern\n        match = FILE_PATTERN.match(filename)\n        if match:\n            # Get the prefix part of the filename\n            prefix = match.group(1)\n            # Construct the new filename\n            new_filename = prefix + '.json'\n            # Construct the full path to the source and target files\n            source_filepath = os.path.join(SOURCE_DIR, filename)\n            target_filepath = os.path.join(TARGET_DIR, new_filename)\n            # Move the file\n            shutil.move(source_filepath, target_filepath)", "compilation_passed": true, "time": 0.0020570755004882812, "tests_passed": true, "error": null}
{"code": "for filename in os.listdir(SOURCE_DIR):\n        if os.path.isfile(os.path.join(SOURCE_DIR, filename)) and filename.endswith('.json'):\n            match = FILE_PATTERN.search(filename)\n            if match:\n                prefix = match.group(1)\n                new_filename = prefix + '.json'\n                shutil.move(os.path.join(SOURCE_DIR, filename), os.path.join(TARGET_DIR, new_filename))\n    return True", "compilation_passed": true, "time": 0.0014848709106445312, "tests_passed": true, "error": null}
{"code": "for filename in os.listdir(SOURCE_DIR):\n        match = FILE_PATTERN.match(filename)\n        if match:\n            prefix = match.group(1)\n            src_path = os.path.join(SOURCE_DIR, filename)\n            dst_path = os.path.join(TARGET_DIR, f\"{prefix}.json\")\n            shutil.move(src_path, dst_path)", "compilation_passed": true, "time": 0.002076864242553711, "tests_passed": true, "error": null}
{"code": "# List all files in the source directory\n    all_files = os.listdir(SOURCE_DIR)\n\n    # Loop through each file\n    for filename in all_files:\n        # Check if the filename matches the pattern\n        match = FILE_PATTERN.match(filename)\n        if match:\n            # Get the prefix part of the filename\n            prefix = match.group(1)\n\n            # Construct the new filename\n            new_filename = f\"{prefix}.json\"\n\n            # Construct the full paths for the files\n            source_file = os.path.join(SOURCE_DIR, filename)\n            target_file = os.path.join(TARGET_DIR, new_filename)\n\n            # Move the file\n            shutil.move(source_file, target_file)", "compilation_passed": true, "time": 0.0023910999298095703, "tests_passed": true, "error": null}
{"code": "for filename in os.listdir(SOURCE_DIR):\n        match = FILE_PATTERN.search(filename)\n        if match:\n            # Extract the prefix from the filename\n            prefix = match.group(1)\n            # Build the new filename\n            new_filename = f\"{prefix}.json\"\n            # Move the file to the target directory with the new filename\n            shutil.move(os.path.join(SOURCE_DIR, filename), os.path.join(TARGET_DIR, new_filename))", "compilation_passed": true, "time": 0.001996755599975586, "tests_passed": true, "error": null}
{"code": "files = [f for f in os.listdir(SOURCE_DIR) if f.endswith('.json')]\n    for file in files:\n        prefix = FILE_PATTERN.search(file).group(1)\n        new_name = prefix + '.json'\n        shutil.move(os.path.join(SOURCE_DIR, file), os.path.join(TARGET_DIR, new_name))", "compilation_passed": true, "time": 0.0010759830474853516, "tests_passed": false, "error": "AttributeError"}
{"code": "# Get list of all files in source directory\n    files = os.listdir(SOURCE_DIR)\n\n    # Iterate through each file\n    for file in files:\n        # Check if file is a json file\n        if file.endswith('.json'):\n            # Get base name of file without extension\n            base_name = os.path.splitext(file)[0]\n            # Find the last occurrence of \"-\" in the base name\n            last_dash_index = base_name.rfind('-')\n            # Split the base name at the last \"-\"\n            prefix = base_name[:last_dash_index]\n            # Construct new file name\n            new_file_name = f\"{prefix}.json\"\n            # Construct full paths for source and target files\n            src_file_path = os.path.join(SOURCE_DIR, file)\n            target_file_path = os.path.join(TARGET_DIR, new_file_name)\n            # Move file to target directory and rename it\n            shutil.move(src_file_path, target_file", "compilation_passed": false, "time": 0.0001780986785888672, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Get all file names in source directory\n    files = os.listdir(SOURCE_DIR)\n    # Filter the files to keep only the ones that match the pattern\n    files = [f for f in files if FILE_PATTERN.match(f)]\n    # Rename each file and move it to the target directory\n    for f in files:\n        # Extract the prefix part of the filename\n        prefix = FILE_PATTERN.match(f).group(1)\n        # Construct the new filename\n        new_name = f\"{prefix}.json\"\n        # Construct the source and target paths\n        source = os.path.join(SOURCE_DIR, f)\n        target = os.path.join(TARGET_DIR, new_name)\n        # Move the file\n        shutil.move(source, target)\n\n    \"\"\"\n    Task: Move all json files in a source directory to a target directory and rename them by splitting the filename the last time \"-\" occurs and keeping the prefix part of the filename.\n\n    Requirements:\n    - os\n    - re\n    -", "compilation_passed": false, "time": 7.82012939453125e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "files = [file for file in os.listdir(SOURCE_DIR) if os.path.isfile(os.path.join(SOURCE_DIR, file))]\n    for file in files:\n        match = FILE_PATTERN.match(file)\n        if match:\n            prefix = match.group(1)\n            source_path = os.path.join(SOURCE_DIR, file)\n            target_path = os.path.join(TARGET_DIR, f\"{prefix}.json\")\n            shutil.move(source_path, target_path)", "compilation_passed": true, "time": 0.0015673637390136719, "tests_passed": true, "error": null}
{"code": "# List all file names in the source directory\n    all_files = os.listdir(SOURCE_DIR)\n\n    # List all json file names in the source directory\n    json_files = [f for f in all_files if f.endswith('.json')]\n\n    # Process each json file\n    for file_name in json_files:\n        # Extract the prefix part of the file name\n        file_prefix = FILE_PATTERN.match(file_name).group(1)\n\n        # Construct the new file name\n        new_file_name = f\"{file_prefix}.json\"\n\n        # Move the file\n        shutil.move(os.path.join(SOURCE_DIR, file_name), os.path.join(TARGET_DIR, new_file_name))", "compilation_passed": true, "time": 0.0010449886322021484, "tests_passed": false, "error": "AttributeError"}
{"code": "files = os.listdir(SOURCE_DIR)\n    for file in files:\n        match = re.search(FILE_PATTERN, file)\n        if match:\n            prefix = match.group(1)\n            target_file = f\"{prefix}.json\"\n            source_path = os.path.join(SOURCE_DIR, file)\n            target_path = os.path.join(TARGET_DIR, target_file)\n            shutil.move(source_path, target_path)", "compilation_passed": true, "time": 0.0021049976348876953, "tests_passed": true, "error": null}
{"code": "files = os.listdir(SOURCE_DIR)\n    for file in files:\n        match = FILE_PATTERN.match(file)\n        if match:\n            prefix = match.group(1)\n            new_file = f\"{prefix}.json\"\n            shutil.move(os.path.join(SOURCE_DIR, file), os.path.join(TARGET_DIR, new_file))\n    return True", "compilation_passed": true, "time": 0.002341032028198242, "tests_passed": true, "error": null}
{"code": "# Check if the source directory exists\n    if not os.path.exists(SOURCE_DIR):\n        print(f'Source directory {SOURCE_DIR} does not exist.')\n        return\n    \n    # Get a list of all files in the source directory\n    files = os.listdir(SOURCE_DIR)\n\n    # Loop over all files in the source directory\n    for file in files:\n        # Check if the file has a .json extension\n        if file.endswith('.json'):\n            # Find the last occurrence of \"-\" in the file name\n            last_dash = file.rfind('-')\n            if last_dash != -1:\n                # Get the prefix part of the file name\n                new_name = file[:last_dash] + '.json'\n                # Construct the full source and target file paths\n                src_file = os.path.join(SOURCE_DIR, file)\n                target_file = os.path.join(TARGET_DIR, new_name)\n                # Move the file and rename it\n                shutil.move(src_file", "compilation_passed": false, "time": 0.00018405914306640625, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Loop over all files in the source directory\n    for filename in os.listdir(SOURCE_DIR):\n        # Check if the file matches the given pattern\n        match = FILE_PATTERN.match(filename)\n        if match:\n            # Get the prefix part of the filename\n            prefix = match.group(1)\n            # Build the new filename\n            new_filename = f\"{prefix}.json\"\n            # Move the file to the target directory with the new filename\n            shutil.move(os.path.join(SOURCE_DIR, filename), os.path.join(TARGET_DIR, new_filename))", "compilation_passed": true, "time": 0.002022981643676758, "tests_passed": true, "error": null}
{"code": "# Iterate over all files in the source directory\n    for filename in os.listdir(SOURCE_DIR):\n        # Match the file name against the file pattern\n        match = re.match(FILE_PATTERN, filename)\n        if match:\n            # Get the prefix of the file name\n            prefix = match.group(1)\n            # Rename the file by moving it to the target directory and renaming it to the prefix with the json extension\n            shutil.move(os.path.join(SOURCE_DIR, filename), os.path.join(TARGET_DIR, f\"{prefix}.json\"))", "compilation_passed": true, "time": 0.002042055130004883, "tests_passed": true, "error": null}
{"code": "source_files = os.listdir(SOURCE_DIR)\n\n    for source_file in source_files:\n        if source_file.endswith('.json'):\n            prefix = FILE_PATTERN.match(source_file).group(1)\n            target_file = prefix + '.json'\n            source_path = os.path.join(SOURCE_DIR, source_file)\n            target_path = os.path.join(TARGET_DIR, target_file)\n            shutil.move(source_path, target_path)", "compilation_passed": true, "time": 0.001096963882446289, "tests_passed": false, "error": "AttributeError"}
{"code": "# Get a list of all files in the source directory\n    files = os.listdir(SOURCE_DIR)\n\n    # Iterate over each file in the list\n    for f in files:\n        # Check if the file is a JSON file with the expected pattern\n        if f.endswith('.json') and FILE_PATTERN.match(f):\n            # Get the filename without the extension\n            base_name = os.path.splitext(f)[0]\n\n            # Find the last occurrence of \"-\" in the filename\n            last_dash_index = base_name.rfind('-')\n\n            # Split the filename based on the last occurrence of \"-\"\n            prefix = base_name[:last_dash_index]\n\n            # Construct the new filename with the prefix and '.json' extension\n            new_filename = prefix + '.json'\n\n            # Construct the source and target file paths\n            source_file = os.path.join(SOURCE_DIR, f)\n            target_file = os.path.join(TARGET_DIR, new_filename)\n\n            #", "compilation_passed": true, "time": 0.001489877700805664, "tests_passed": true, "error": null}
{"code": "file_list = os.listdir(SOURCE_DIR)\n    for file_name in file_list:\n        if os.path.splitext(file_name)[1] == '.json':\n            match = re.match(FILE_PATTERN, file_name)\n            if match:\n                new_file_name = match.group(1) + '.json'\n                os.rename(os.path.join(SOURCE_DIR, file_name), os.path.join(TARGET_DIR, new_file_name))\n            else:\n                os.rename(os.path.join(SOURCE_DIR, file_name), os.path.join(TARGET_DIR, file_name))", "compilation_passed": true, "time": 0.0011441707611083984, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = [f for f in os.listdir(SOURCE_DIR) if os.path.isfile(os.path.join(SOURCE_DIR, f)) and f.endswith('.json')]\n    for file in files:\n        prefix = FILE_PATTERN.match(file).group(1)\n        shutil.move(os.path.join(SOURCE_DIR, file), os.path.join(TARGET_DIR, f'{prefix}.json'))", "compilation_passed": true, "time": 0.0017960071563720703, "tests_passed": true, "error": null}
{"code": "file_list = os.listdir(SOURCE_DIR)\n    for file in file_list:\n        match = FILE_PATTERN.match(file)\n        if match:\n            prefix = match.group(1)\n            shutil.move(os.path.join(SOURCE_DIR, file), os.path.join(TARGET_DIR, f\"{prefix}.json\"))", "compilation_passed": true, "time": 0.001989126205444336, "tests_passed": true, "error": null}
{"code": "for file_name in os.listdir(SOURCE_DIR):\n        if file_name.endswith('.json'):\n            match = FILE_PATTERN.search(file_name)\n            if match:\n                prefix = match.group(1)\n                target_file_name = prefix + '.json'\n                shutil.move(os.path.join(SOURCE_DIR, file_name), os.path.join(TARGET_DIR, target_file_name))", "compilation_passed": true, "time": 0.0020668506622314453, "tests_passed": true, "error": null}
{"code": "source_files = os.listdir(SOURCE_DIR)\n    for file_name in source_files:\n        file_path = os.path.join(SOURCE_DIR, file_name)\n        if os.path.isfile(file_path) and file_name.endswith('.json'):\n            prefix = FILE_PATTERN.search(file_name).group(1)\n            target_file_name = prefix + '.json'\n            target_file_path = os.path.join(TARGET_DIR, target_file_name)\n            shutil.move(file_path, target_file_path)", "compilation_passed": true, "time": 0.0014338493347167969, "tests_passed": true, "error": null}
{"code": "# Iterate over files in the source directory\n    for file_name in os.listdir(SOURCE_DIR):\n        # Match the file name pattern\n        match = FILE_PATTERN.search(file_name)\n        if match:\n            prefix = match.group(1)\n            # Construct the target file name\n            target_file_name = f'{prefix}.json'\n            # Move the file\n            shutil.move(os.path.join(SOURCE_DIR, file_name), os.path.join(TARGET_DIR, target_file_name))", "compilation_passed": true, "time": 0.0020799636840820312, "tests_passed": true, "error": null}
{"code": "# Get a list of all files in the source directory\n    files = os.listdir(SOURCE_DIR)\n\n    # Loop through each file in the list\n    for file_name in files:\n        # Check if the file is a json file\n        if file_name.endswith('.json'):\n            # Get the prefix part of the filename before the last occurrence of \"-\"\n            prefix = FILE_PATTERN.match(file_name).group(1)\n\n            # Create the new file name by replacing the original filename with the prefix part\n            new_file_name = prefix + '.json'\n\n            # Move the file to the target directory with the new file name\n            shutil.move(os.path.join(SOURCE_DIR, file_name), os.path.join(TARGET_DIR, new_file_name))", "compilation_passed": true, "time": 0.0010597705841064453, "tests_passed": false, "error": "AttributeError"}
{"code": "# Iterate over all files in the source directory\n    for filename in os.listdir(SOURCE_DIR):\n        # Match the filename to the pattern and check if it matches\n        match = FILE_PATTERN.match(filename)\n        if match:\n            # Get the prefix part of the filename\n            prefix = match.group(1)\n            # Construct the new filename\n            new_filename = f\"{prefix}.json\"\n            # Construct the source and target file paths\n            source_path = os.path.join(SOURCE_DIR, filename)\n            target_path = os.path.join(TARGET_DIR, new_filename)\n            # Move the file to the target directory and rename it\n            shutil.move(source_path, target_path)", "compilation_passed": true, "time": 0.0023920536041259766, "tests_passed": true, "error": null}
