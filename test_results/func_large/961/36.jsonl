{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist.\")\n\n    files = glob.iglob(directory + \"/**/*\", recursive=True)\n\n    extensions_counts = {ext: 0 for ext in extensions}\n\n    for file in files:\n        _, ext = os.path.splitext(file)\n        if ext in extensions:\n            extensions_counts[ext] += 1\n\n    if not keep_zero:\n        extensions_counts = {k: v for k, v in extensions_counts.items() if v > 0}\n\n    return Counter(extensions_counts)", "compilation_passed": true, "time": 0.005568981170654297, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"Invalid directory: {directory}\")\n    files = glob.glob(os.path.join(directory, '**'), recursive=True)\n    ext_counts = Counter()\n    for ext in extensions:\n        matching_files = [file for file in files if file.endswith(ext)]\n        ext_counts[ext] += len(matching_files)\n    if keep_zero:\n        return ext_counts\n    else:\n        return Counter({ext: count for ext, count in ext_counts.items() if count > 0})", "compilation_passed": true, "time": 0.006195068359375, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} not found.\")\n    extensions = [ext.lower() for ext in extensions]\n    file_counts = Counter()\n    for root, _, files in os.walk(directory):\n        for file in files:\n            _, ext = os.path.splitext(file.lower())\n            if ext in extensions:\n                file_counts[ext] += 1\n    if not keep_zero:\n        file_counts = Counter({ext: count for ext, count in file_counts.items() if count > 0})\n    return file_counts", "compilation_passed": true, "time": 0.00650477409362793, "tests_passed": true, "error": null}
{"code": "try:\n        counts = Counter()\n        for ext in extensions:\n            files = glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n            counts[ext] = len(files)\n        if not keep_zero:\n            counts = Counter({ext: count for ext, count in counts.items() if count > 0})\n        return counts\n    except OSError as error:\n        raise error", "compilation_passed": true, "time": 0.0032110214233398438, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"The specified directory does not exist: {directory}\")\n\n    extension_counts = Counter()\n    for ext in extensions:\n        file_count = len(glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True))\n        extension_counts[ext] += file_count\n\n    if not keep_zero:\n        extension_counts = Counter({ext: count for ext, count in extension_counts.items() if count != 0})\n\n    return extension_counts", "compilation_passed": true, "time": 0.006342172622680664, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} not found.\")\n\n    file_counts = Counter()\n\n    for ext in extensions:\n        pattern = os.path.join(directory, f\"**/*{ext}\")\n        file_list = glob.glob(pattern, recursive=True)\n        file_counts[ext] += len(file_list)\n\n    if not keep_zero:\n        file_counts = +file_counts  # Filter out zeros\n\n    return file_counts", "compilation_passed": true, "time": 0.006028890609741211, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist\")\n\n    counts = Counter()\n    for ext in extensions:\n        pattern = os.path.join(directory, \"**\", f\"*{ext}\")\n        counts[ext] = sum(1 for file in glob.iglob(pattern, recursive=True))\n\n    if not keep_zero:\n        counts = Counter({ext: count for ext, count in counts.items() if count > 0})\n\n    return counts", "compilation_passed": true, "time": 0.005894184112548828, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(\"Directory does not exist: \" + directory)\n\n    total_counts = Counter()\n\n    for ext in extensions:\n        file_list = glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n        total_counts[ext] += len(file_list)\n\n    if keep_zero:\n        return total_counts\n    else:\n        return Counter({ext: count for ext, count in total_counts.items() if count > 0})", "compilation_passed": true, "time": 0.005980968475341797, "tests_passed": true, "error": null}
{"code": "# Create a counter to store the counts of file extensions\n    counter = Counter()\n\n    # Check if the directory exists\n    if not os.path.exists(directory):\n        raise OSError(f\"Directory '{directory}' does not exist.\")\n\n    # Iterate over each extension and count the corresponding files\n    for ext in extensions:\n        # Generate glob patterns for each extension\n        pattern = os.path.join(directory, f\"**/*{ext}\")\n        # Use glob to find files matching the pattern\n        files = glob.glob(pattern, recursive=True)\n        # Update the counter with the count of files for the extension\n        counter.update({ext: len(files)})\n\n    # Remove extensions with zero counts if keep_zero is False\n    if not keep_zero:\n        counter = Counter({k: v for k, v in counter.items() if v > 0})\n\n    return counter", "compilation_passed": true, "time": 0.005861997604370117, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(\"Specified directory does not exist\")\n\n    counts = Counter()\n    for ext in extensions:\n        count = len(glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True))\n        if count > 0 or keep_zero:\n            counts[ext] = count\n\n    return counts", "compilation_passed": true, "time": 0.005967140197753906, "tests_passed": true, "error": null}
{"code": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise OSError(\"The specified directory does not exist.\")\n\n    # Create an empty counter object\n    counts = Counter()\n\n    # Recursively traverse the directory and its subdirectories\n    for ext in extensions:\n        for root, dirs, files in os.walk(directory):\n            for file in files:\n                if file.endswith(ext):\n                    counts[ext] += 1\n\n    # If keep_zero is False, remove extensions with zero counts\n    if not keep_zero:\n        counts = Counter({k: v for k, v in counts.items() if v != 0})\n\n    # Return the counter\n    return counts", "compilation_passed": true, "time": 0.0051038265228271484, "tests_passed": true, "error": null}
{"code": "try:\n        files = glob.glob(os.path.join(directory, \"**\", \"*.*\"), recursive=True)\n        counts = Counter(os.path.splitext(file)[1] for file in files if any(file.endswith(ext) for ext in extensions))\n        return counts\n    except OSError as e:\n        raise OSError(f\"Failed to count files: {e}\")", "compilation_passed": true, "time": 0.0024161338806152344, "tests_passed": true, "error": null}
{"code": "# Check if directory exists\n    if not os.path.exists(directory):\n        raise OSError(\"Directory does not exist\")\n\n    # Initialize a counter object\n    file_counter = Counter()\n\n    # Recursively traverse the directory using os.walk() and glob.glob()\n    # os.walk() returns a tuple of directories, subdirectories, and files in each level\n    for directory_name, subdirectories, files in os.walk(directory):\n        for file_name in files:\n            for extension in extensions:\n                # Check if file extension matches the extension from the list\n                if file_name.endswith(extension):\n                    # If yes, increment the count for the corresponding extension in the counter object\n                    file_counter[extension] += 1\n                    # Break from the loop as the file has already been counted\n                    break\n\n    # If keep_zero is False, remove extensions with zero count from the counter object\n    if not keep_zero:\n        file_counter = Counter({extension: count for extension, count in file_counter.items() if count != 0", "compilation_passed": false, "time": 0.00020813941955566406, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"The specified directory '{directory}' does not exist.\")\n\n    all_counts = Counter()\n    for ext in extensions:\n        count = sum(1 for file in glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True) if os.path.isfile(file))\n        all_counts[ext] = count\n\n    if not keep_zero:\n        all_counts = Counter({k: v for k, v in all_counts.items() if v > 0})\n\n    return all_counts", "compilation_passed": true, "time": 0.0069658756256103516, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory {directory} does not exist.\")\n    counts = Counter()\n    for ext in extensions:\n        file_list = glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n        counts[ext] += len(file_list)\n    if not keep_zero:\n        counts += Counter()\n    return counts", "compilation_passed": true, "time": 0.006625175476074219, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"The directory '{directory}' does not exist.\")\n\n    extension_counts = Counter()\n    for ext in extensions:\n        count = 0\n        for root, dirs, files in os.walk(directory):\n            count += sum(1 for _ in glob.glob(os.path.join(root, f\"*{ext}\")))\n        extension_counts[ext] = count\n\n    if not keep_zero:\n        extension_counts = Counter({k: c for k, c in extension_counts.items() if c > 0})\n\n    return extension_counts", "compilation_passed": true, "time": 0.0056951045989990234, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(\"Directory not found\")\n    counter = Counter()\n    for ext in extensions:\n        counter[ext] += len(glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True))\n    if not keep_zero:\n        counter = Counter({ext: count for ext, count in counter.items() if count != 0})\n    return counter", "compilation_passed": true, "time": 0.0058858394622802734, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory not found: {directory}\")\n\n    file_counts = Counter()\n    for ext in extensions:\n        for file in glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True):\n            file_counts[ext] += 1\n\n    if not keep_zero:\n        file_counts = Counter({ext: count for ext, count in file_counts.items() if count > 0})\n\n    return file_counts", "compilation_passed": true, "time": 0.006176948547363281, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} does not exist\")\n\n    if not keep_zero:\n        extensions = [ext for ext in extensions if os.path.exists(f\"{directory}/*{ext}\")]\n\n    extensions = [ext.lower() if ext[0] == \".\" else f\".{ext.lower()}\" for ext in extensions]\n    extensions = [ext for ext in extensions if os.path.exists(f\"{directory}/*{ext}\")]\n    extensions = [ext for ext in extensions if any(glob.glob(f\"{directory}/*{ext}\"))]\n    extensions = [ext for ext in extensions if any(glob.glob(f\"{directory}/**/*{ext}\", recursive=True))]\n\n    result = Counter()\n    for ext in extensions:\n        for file in glob.glob(f\"{directory}/**/*{ext}\", recursive=True):\n            if os.path.isfile(file):\n                result[ext] += 1\n\n    if not keep_zero:\n        ", "compilation_passed": false, "time": 0.00034880638122558594, "tests_passed": false, "error": "IndentationError"}
{"code": "if not os.path.isdir(directory):\n        raise OSError(\"Directory does not exist\")\n\n    extension_counts = Counter()\n    for ext in extensions:\n        pattern = os.path.join(directory, f\"**/*{ext}\")\n        extension_counts[ext] += len(glob.glob(pattern, recursive=True))\n\n    if not keep_zero:\n        extension_counts = Counter(\n            {\n                ext: count\n                for ext, count in extension_counts.items()\n                if count != 0\n            }\n        )\n\n    return extension_counts", "compilation_passed": true, "time": 0.0058019161224365234, "tests_passed": true, "error": null}
{"code": "# Initialize an empty Counter object to store the counts\n    file_counts = Counter()\n\n    # Check if the specified directory exists\n    if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist.\")\n\n    # Iterate over the specified extensions to count the files\n    for extension in extensions:\n        file_counts[extension] += len(glob.glob(os.path.join(directory, f'**/*{extension}', recursive=True)))\n\n    # Return the Counter object with or without zero counts based on keep_zero\n    return Counter({ext: count for ext, count in file_counts.items() if count > 0 or keep_zero})", "compilation_passed": true, "time": 0.0019729137420654297, "tests_passed": false, "error": "TypeError"}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"The directory '{directory}' does not exist.\")\n\n    total_counts = Counter()\n\n    for ext in extensions:\n        file_pattern = f\"{directory}/**/*{ext}\"\n        file_counts = Counter(glob.glob(file_pattern, recursive=True))\n        total_counts += file_counts\n\n    if not keep_zero:\n        total_counts = +total_counts  # Remove zero counts\n\n    return total_counts", "compilation_passed": true, "time": 0.002117156982421875, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(\"The specified directory does not exist.\")\n\n    # Initialize a Counter object to keep track of counts\n    counts = Counter()\n\n    # Loop through each extension\n    for ext in extensions:\n        # Use glob to search for files with that extension in the directory and its subdirectories\n        files = glob.glob(os.path.join(directory, \"**\", f\"*{ext}\"), recursive=True)\n        # Add the count to the Counter object\n        counts[ext] += len(files)\n\n    # Remove extensions with zero counts if keep_zero is False\n    if not keep_zero:\n        counts = Counter({key: value for key, value in counts.items() if value > 0})\n\n    return counts", "compilation_passed": true, "time": 0.0057680606842041016, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(\"Directory not found\")\n    count = Counter()\n    for ext in extensions:\n        count[ext] += len(glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True))\n    if not keep_zero:\n        count += Counter()\n    return count", "compilation_passed": true, "time": 0.0057239532470703125, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist\")\n\n    # Create a Counter object to store file counts\n    file_counts = Counter()\n\n    for ext in extensions:\n        file_counts[ext] = sum(\n            1 for _ in glob.iglob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n        )\n\n    if not keep_zero:\n        file_counts = Counter({ext: count for ext, count in file_counts.items() if count > 0})\n\n    return file_counts", "compilation_passed": true, "time": 0.006571054458618164, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} does not exist\")\n    # Initialize a Counter object to count each extension\n    extension_counter = Counter()\n    # Iterate over the provided file extensions\n    for ext in extensions:\n        # Find all files matching the current extension in the directory\n        files = glob.glob(os.path.join(directory, '**', f'*{ext}'))\n        # Update the Counter with the count for the current extension\n        extension_counter[ext] += len(files)\n    # Filter out extensions with zero count if keep_zero is False\n    if not keep_zero:\n        extension_counter = Counter({k: v for k, v in extension_counter.items() if v != 0})\n    return extension_counter", "compilation_passed": true, "time": 0.0022950172424316406, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(\"The specified directory does not exist.\")\n\n    all_extensions = [extension for extension in extensions if isinstance(extension, str) and extension.startswith(\".\")]\n\n    extensions_counter = Counter({ext: 0 for ext in all_extensions})\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            extension = os.path.splitext(file)[1]\n            if extension in all_extensions:\n                extensions_counter[extension] += 1\n\n    if keep_zero:\n        return extensions_counter\n    else:\n        return Counter({ext: count for ext, count in extensions_counter.items() if count > 0})", "compilation_passed": true, "time": 0.005120038986206055, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"The specified directory does not exist: {directory}\")\n\n    extensions = [ext.lower() for ext in extensions]\n\n    counter = Counter()\n    for ext in extensions:\n        file_list = glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n        counter[ext] += len(file_list)\n\n    # Remove extensions with zero count if keep_zero is False\n    if not keep_zero:\n        counter = Counter({ext: count for ext, count in counter.items() if count > 0})\n\n    return counter", "compilation_passed": true, "time": 0.005881071090698242, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory '{directory}' not found.\")\n\n    counts = Counter()\n    for ext in extensions:\n        pattern = os.path.join(directory, f'**/*{ext}')\n        counts[ext] += sum(1 for _ in glob.iglob(pattern, recursive=True))\n\n    if not keep_zero:\n        counts = Counter({k: v for k, v in counts.items() if v > 0})\n\n    return counts", "compilation_passed": true, "time": 0.005980014801025391, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"The directory '{directory}' does not exist.\")\n\n    counters = Counter()\n    for extension in extensions:\n        pattern = f\"{directory}/**/*{extension}\"\n        file_list = glob.glob(pattern, recursive=True)\n        counters[extension] = len(file_list)\n\n    if not keep_zero:\n        counters = {k: v for k, v in counters.items() if v != 0}\n\n    return counters", "compilation_passed": true, "time": 0.005680084228515625, "tests_passed": true, "error": null}
