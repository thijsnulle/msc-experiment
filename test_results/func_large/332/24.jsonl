{"code": "# Remove non-alphabetic characters, numbers and punctuation.\n    words = re.sub(r'\\W+|[0-9]+', ' ', text.lower()).split()\n\n    # Remove stop words.\n    stop_words = set(stopwords.words('english'))\n    words = [word for word in words if word not in stop_words]\n\n    # Count word occurrences.\n    word_counts = Counter(words)\n    sorted_word_counts = sorted(word_counts.items(), key=lambda x: x[1], reverse=True)\n    return dict(sorted_word_counts)", "compilation_passed": true, "time": 0.0010838508605957031, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\w+', text)\n    filtered_words = [word for word in words if word not in stopwords.words()]\n    counts = Counter(filtered_words)\n    return dict(counts)", "compilation_passed": true, "time": 0.010843038558959961, "tests_passed": true, "error": null}
{"code": "# Remove any non-alphanumeric characters and convert to lowercase\n    clean_text = re.sub(r'[^\\w\\s]', '', text).lower()\n\n    # Split the text into words\n    words = clean_text.split()\n\n    # Count the word occurrences using Counter\n    word_counts = Counter(words)\n\n    # Exclude stop words\n    stop_words = set(stopwords.words('english'))\n    word_counts -= Counter(stop_words)\n\n    return dict(word_counts)", "compilation_passed": true, "time": 0.001107931137084961, "tests_passed": true, "error": null}
{"code": "# Remove any non-alphanumeric characters and convert to lowercase\n    cleaned_text = re.sub(r'[^\\w\\s]', '', text.lower())\n\n    # Split the text into words and count their occurrences\n    words = cleaned_text.split()\n    word_counts = Counter(words)\n\n    # Remove stopwords\n    stopwords_list = stopwords.words('english')\n    filtered_counts = {word: count for word, count in word_counts.items() if word not in stopwords_list}\n\n    return dict(filtered_counts)", "compilation_passed": true, "time": 0.0008838176727294922, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\w+', text.lower())\n    filtered_words = [word for word in words if word not in set(stopwords.words('english'))]\n\n    word_counts = Counter(filtered_words)\n    return word_counts", "compilation_passed": true, "time": 0.001421213150024414, "tests_passed": true, "error": null}
{"code": "words = re.findall(r\"\\b\\w+\\b\", text.lower())\n    words = [word for word in words if word not in set(stopwords.words('english'))]\n    word_count = Counter(words)\n    return dict(word_count)", "compilation_passed": true, "time": 0.0013670921325683594, "tests_passed": true, "error": null}
{"code": "if not isinstance(text, str):\n        raise TypeError(\"The input should be a string.\")\n\n    # Preprocess text by removing special characters and digits, making it lowercase, and tokenizing.\n    preprocessed_text = re.sub(r\"[^\\w\\s]\", \" \", text)\n    preprocessed_text = re.sub(r\"\\d+\", \"\", preprocessed_text)\n    preprocessed_text = preprocessed_text.lower()\n    words = preprocessed_text.split()\n\n    # Exclude stopwords from the word list.\n    stop_words = set(stopwords.words('english'))\n    words = [word for word in words if word not in stop_words]\n\n    # Count word occurrences using Counter.\n    word_counter = Counter(words)\n\n    return dict(word_counter)", "compilation_passed": true, "time": 0.0013880729675292969, "tests_passed": true, "error": null}
{"code": "# Remove non-alphanumeric characters, numbers and convert to lowercase\n    words = re.sub(r'[\\W_0-9]', ' ', text).lower()\n    # Split the text into a list of words\n    words = words.split()\n\n    # Convert the list of words to a Counter\n    count = Counter(words)\n\n    return dict(count)", "compilation_passed": true, "time": 0.0005970001220703125, "tests_passed": true, "error": null}
{"code": "# remove stop words\n    stop_words = set(stopwords.words('english'))\n    # convert to lowercase\n    text = text.lower()\n\n    # split string into a list of words\n    words = text.split()\n\n    # filter out the stop words\n    words = [word for word in words if word not in stop_words]\n\n    # count words using Counter\n    counter = Counter(words)\n\n    # convert to dictionary\n    result = dict(counter)\n\n    return result", "compilation_passed": true, "time": 0.0006809234619140625, "tests_passed": true, "error": null}
{"code": "# Lower the text and remove punctuation.\n    words = re.sub(r\"[^\\w\\s]\", \"\", text.lower()).split()\n\n    # Remove stop words and count remaining words.\n    stop_words = set(stopwords.words(\"english\"))\n    words = [word for word in words if word not in stop_words]\n    word_counts = Counter(words)\n\n    # Create dictionary with words and their counts.\n    word_dict = {}\n    for word, count in word_counts.items():\n        word_dict[word] = count\n\n    return word_dict", "compilation_passed": true, "time": 0.0008630752563476562, "tests_passed": true, "error": null}
{"code": "text = re.sub(r'[^\\w\\s]', '', text)\n    words = text.split()\n    stop_words = set(stopwords.words('english'))\n    filtered_words = [word for word in words if word not in stop_words]\n    return dict(Counter(filtered_words))", "compilation_passed": true, "time": 0.0006837844848632812, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\b\\w+\\b', text)\n    words = [word.lower() for word in words if word.isalpha() and word.lower() not in stopwords.words()]\n    word_counts = Counter(words)\n    return dict(word_counts)", "compilation_passed": true, "time": 0.03005504608154297, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\b\\w+\\b', text.lower())\n    words = [word for word in words if word not in stopwords.words()]\n    return dict(Counter(words))", "compilation_passed": true, "time": 0.030205965042114258, "tests_passed": true, "error": null}
{"code": "# Convert the text to lowercase\n    text = text.lower()\n\n    # Remove any non-alphanumeric characters\n    text = re.sub(r'[^a-zA-Z0-9\\s]', '', text)\n\n    # Split the text into words and count them\n    words = text.split()\n    word_count = Counter(words)\n\n    # Filter stop words\n    stop_words = set(stopwords.words('english'))\n    filtered_word_count = Counter(\n        {word: count for word, count in word_count.items() if word not in stop_words})\n\n    return filtered_word_count", "compilation_passed": true, "time": 0.0010309219360351562, "tests_passed": true, "error": null}
{"code": "# Step 1: Preprocessing\n    # Convert the input text to lowercase and split it into words\n    words = re.sub(r'\\W', ' ', text.lower()).split()\n\n    # Step 2: Count the occurrence of each word\n    word_counts = Counter(words)\n\n    # Step 3: Remove stop words and non-alphanumeric characters\n    stop_words = set(stopwords.words('english'))\n    filtered_counts = {word: count for word, count in word_counts.items() if word not in stop_words and word.isalnum()}\n\n    return filtered_counts", "compilation_passed": true, "time": 0.0007841587066650391, "tests_passed": true, "error": null}
{"code": "text_words = re.sub(r\"[^\\w\\s]\", \"\", text).lower().split()\n    stop_words = set(stopwords.words(\"english\"))\n    words_counter = Counter(\n        word for word in text_words if word not in stop_words\n    )\n    return dict(words_counter)", "compilation_passed": true, "time": 0.0008101463317871094, "tests_passed": true, "error": null}
{"code": "# Remove special characters and numbers using regular expressions\n    clean_text = re.sub(r'[^\\w\\s]|\\d+', '', text).lower()\n\n    # Split the text into words\n    words = clean_text.split()\n\n    # Count the word occurrences using Counter from collections\n    word_counts = Counter(words)\n\n    # Remove stop words\n    stop_words = set(stopwords.words('english'))\n    word_counts -= Counter(stop_words)\n\n    return dict(word_counts)", "compilation_passed": true, "time": 0.0010590553283691406, "tests_passed": true, "error": null}
{"code": "stop_words = set(stopwords.words('english'))\n    text = re.sub(r'[^\\w\\s]', '', text).lower()\n    words = text.split()\n\n    filtered_words = [word for word in words if word not in stop_words]\n\n    word_counts = Counter(filtered_words)\n\n    return dict(word_counts)", "compilation_passed": true, "time": 0.0007798671722412109, "tests_passed": true, "error": null}
{"code": "if not isinstance(text, str):\n        raise TypeError(\"Input argument should be a string\")\n\n    # Remove all characters except words, spaces and newline characters\n    cleaned_text = re.sub(r'[^a-zA-Z\\s\\n]', '', text)\n\n    # Convert all words to lowercase and split into a list of words\n    words = cleaned_text.lower().split()\n\n    # Remove stop words\n    stop_words = stopwords.words('english')\n    words = [word for word in words if word not in stop_words]\n\n    # Count the words using Counter\n    word_counts = Counter(words)\n\n    # Convert the Counter to a dictionary\n    word_count_dict = dict(word_counts)\n\n    return word_count_dict", "compilation_passed": true, "time": 0.0008571147918701172, "tests_passed": true, "error": null}
{"code": "text = text.lower().split()\n    clean_text = [\n        word for word in text if not any(c.isdigit() for c in word)]\n    count_text = Counter(clean_text)\n    count_text = count_text.most_common()\n    count_text = {i[0]: i[1] for i in count_text}\n    return count_text", "compilation_passed": true, "time": 0.0006730556488037109, "tests_passed": true, "error": null}
{"code": "# Convert the text to lowercase, remove non-alphanumeric characters, and split into words\n    words = re.findall(r'\\b[a-z0-9]+\\b', text.lower())\n\n    # Filter out stop words\n    filtered_words = [word for word in words if word not in stopwords.words()]\n\n    # Count the number of occurrences of each word\n    word_counts = Counter(filtered_words)\n\n    return dict(word_counts)", "compilation_passed": true, "time": 0.030436038970947266, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\b\\w+\\b', text.lower())\n    stop_words = set(stopwords.words('english'))\n    word_counts = Counter(word for word in words if word not in stop_words)\n    return dict(word_counts)", "compilation_passed": true, "time": 0.0009002685546875, "tests_passed": true, "error": null}
{"code": "# Remove stop words\n    stop_words = set(stopwords.words('english'))\n\n    # Tokenize the text into words using regular expressions\n    words = re.findall(r'\\b\\w+\\b', text)\n\n    # Remove stop words from the list of words\n    words = [word for word in words if word.lower() not in stop_words]\n\n    # Count the number of occurrences of each word using Counter\n    word_counter = Counter(words)\n\n    # Return the word count as a dictionary\n    return dict(word_counter)", "compilation_passed": true, "time": 0.0008220672607421875, "tests_passed": true, "error": null}
{"code": "# Replace any non-alphanumeric characters with spaces\n    text = re.sub(r'\\W+', ' ', text)\n\n    # Split the text into words\n    words = text.split()\n\n    # Convert the words to lowercase\n    words = [word.lower() for word in words]\n\n    # Create a counter\n    counter = Counter(words)\n\n    # Remove the stop words\n    stop_words = set(stopwords.words('english'))\n    for word in list(counter.keys()):\n        if word in stop_words:\n            del counter[word]\n\n    # Convert the counter to a dictionary\n    word_count_dict = dict(counter)\n\n    return word_count_dict", "compilation_passed": true, "time": 0.001058816909790039, "tests_passed": true, "error": null}
{"code": "stopwords_set = set(stopwords.words('english'))\n    clean_text = re.sub(r'[^\\w\\s]', '', text)  # remove special characters and punctuation\n    words = [word for word in clean_text.lower().split() if word not in stopwords_set]\n    counter = Counter(words)\n    return dict(counter)", "compilation_passed": true, "time": 0.0008368492126464844, "tests_passed": true, "error": null}
{"code": "# Remove all punctuation marks and numbers using regex\n    # This will convert the input text to lowercase\n    words = re.findall(r'\\b[a-zA-Z]+\\b', text)\n    stop_words = set(stopwords.words('english'))\n    # Exclude stop words from the list\n    words = [word for word in words if word.lower() not in stop_words]\n\n    # Use Counter to count the frequency of each word\n    word_count = Counter(words)\n    # Return the result as a dictionary\n    return dict(word_count)", "compilation_passed": true, "time": 0.0008559226989746094, "tests_passed": true, "error": null}
{"code": "# Step 1: Convert the input text into a list of words using regular expressions (re)\n    word_list = re.findall(r'\\b\\w+\\b', text.lower())\n\n    # Step 2: Retrieve the stop words from the NLTK library and convert them to a set\n    stop_words = set(stopwords.words('english'))\n\n    # Step 3: Use a generator expression to create a new list of non-stop words\n    non_stop_words = [word for word in word_list if word not in stop_words]\n\n    # Step 4: Use collections.Counter to count the occurrences of each non-stop word\n    word_count = Counter(non_stop_words)\n\n    # Step 5: Return the result as a dictionary\n    return word_count", "compilation_passed": true, "time": 0.0008237361907958984, "tests_passed": true, "error": null}
{"code": "# Convert the text to lowercase and split it into words\n    words = [word.lower() for word in text.split()]\n\n    # Remove stopwords\n    stop_words = set(stopwords.words('english'))\n    words = [word for word in words if word not in stop_words]\n\n    # Use Counter to count the number of occurrences of each non-stopword\n    word_counter = Counter(words)\n\n    # Return the dictionary of word counts\n    return word_counter", "compilation_passed": true, "time": 0.0007989406585693359, "tests_passed": true, "error": null}
{"code": "text = text.lower()\n    text = re.sub(r'[^\\w\\s]', '', text)\n    words = text.split()\n\n    stop_words = set(stopwords.words('english'))\n\n    word_counts = Counter()\n    for word in words:\n        if word not in stop_words:\n            word_counts[word] += 1\n\n    return dict(word_counts)", "compilation_passed": true, "time": 0.000843048095703125, "tests_passed": true, "error": null}
{"code": "text = text.lower()\n    stop_words = set(stopwords.words('english'))\n    word_counts = Counter(re.findall(r'\\w+', text))\n    word_counts = {word: count for word, count in word_counts.items() if word not in stop_words}\n\n    return word_counts", "compilation_passed": true, "time": 0.0007841587066650391, "tests_passed": true, "error": null}
