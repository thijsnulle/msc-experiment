{"code": "np.random.seed(seed)\n    matrix = np.random.randint(min_val, max_val, size=(rows, cols))\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0009028911590576172, "tests_passed": true, "error": null}
{"code": "np.random.seed(seed)\n    # create a matrix of random integers\n    matrix = np.random.randint(min_val, max_val+1, size=(rows, cols))\n    # convert the matrix to a pandas DataFrame\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0008609294891357422, "tests_passed": true, "error": null}
{"code": "# Set the random seed\n    random.seed(seed)\n    # Create the matrix\n    matrix = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n    # Convert the matrix to a pandas DataFrame\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.001081705093383789, "tests_passed": true, "error": null}
{"code": "if seed != 0:\n        random.seed(seed)\n    data = [[random.randint(min_val, max_val) for _ in range(cols)] for _ in range(rows)]\n    df = pd.DataFrame(data)\n    return df", "compilation_passed": true, "time": 0.0009160041809082031, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    data = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n    df = pd.DataFrame(data)\n    return df", "compilation_passed": true, "time": 0.001065969467163086, "tests_passed": true, "error": null}
{"code": "np.random.seed(seed)\n    df = pd.DataFrame(np.random.randint(min_val, max_val, size=(rows, cols)))\n    return df", "compilation_passed": true, "time": 0.0009338855743408203, "tests_passed": true, "error": null}
{"code": "# Seed the random generator for reproducibility\n    random.seed(seed)\n\n    # Generate the matrix\n    matrix = np.random.randint(min_val, max_val, size=(rows, cols))\n\n    # Convert the matrix to a DataFrame\n    df = pd.DataFrame(matrix)\n\n    return df", "compilation_passed": true, "time": 0.0008449554443359375, "tests_passed": true, "error": null}
{"code": "# Seed the random number generator for reproducibility\n    random.seed(seed)\n    np.random.seed(seed)\n\n    # Create a matrix of random integers within the given range\n    matrix = [[random.randint(min_val, max_val) for _ in range(cols)] for _ in range(rows)]\n\n    # Create a DataFrame from the matrix\n    df = pd.DataFrame(matrix)\n\n    return df", "compilation_passed": true, "time": 0.0010592937469482422, "tests_passed": true, "error": null}
{"code": "random.seed(seed)  # Set the seed for reproducibility\n    matrix = [[random.randint(min_val, max_val) for _ in range(cols)] for _ in range(rows)]\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0010390281677246094, "tests_passed": true, "error": null}
{"code": "np.random.seed(seed)\n    array = np.random.randint(low=min_val, high=max_val, size=(rows, cols))\n    df = pd.DataFrame(array)\n    return df", "compilation_passed": true, "time": 0.0008451938629150391, "tests_passed": true, "error": null}
{"code": "# Set the random seed for reproducibility\n    random.seed(seed)\n\n    # Create a matrix of specified dimensions with random integers within a given range\n    matrix = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n\n    # Convert the matrix into a pandas DataFrame\n    df = pd.DataFrame(matrix)\n\n    return df", "compilation_passed": true, "time": 0.0010340213775634766, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    matrix = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n    return pd.DataFrame(matrix)", "compilation_passed": true, "time": 0.0010440349578857422, "tests_passed": true, "error": null}
{"code": "random.seed(seed)  # Set the seed for reproducibility\n    matrix = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0010607242584228516, "tests_passed": true, "error": null}
{"code": "# Set the random seed for reproducibility\n    random.seed(seed)\n    # Generate a matrix of random integers within the specified range\n    arr = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n    # Create a pandas DataFrame from the matrix\n    df = pd.DataFrame(arr)\n    return df", "compilation_passed": true, "time": 0.0010280609130859375, "tests_passed": true, "error": null}
{"code": "# Set the random seed for reproducibility\n    np.random.seed(seed)\n    random.seed(seed)\n    # Create a matrix of random integers within the specified range\n    matrix = np.random.randint(min_val, max_val, size=(rows, cols))\n    # Convert the matrix to a pandas DataFrame\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0008730888366699219, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n\n    matrix = [[random.randint(min_val, max_val) for _ in range(cols)] for _ in range(rows)]\n    return pd.DataFrame(matrix)", "compilation_passed": true, "time": 0.0010290145874023438, "tests_passed": true, "error": null}
{"code": "# Set the random seed for reproducibility\n    random.seed(seed)\n\n    # Create a matrix with the specified dimensions and random integers within the given range\n    matrix = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n\n    # Create a pandas DataFrame from the matrix\n    df = pd.DataFrame(matrix)\n\n    return df", "compilation_passed": true, "time": 0.0010368824005126953, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    matrix = np.random.randint(min_val, max_val, size=(rows, cols))\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0009129047393798828, "tests_passed": true, "error": null}
{"code": "np.random.seed(seed)\n    matrix = np.random.randint(min_val, max_val, size=(rows, cols))\n    df = pd.DataFrame(matrix)\n\n    return df", "compilation_passed": true, "time": 0.0008220672607421875, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    matrix = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0010230541229248047, "tests_passed": true, "error": null}
{"code": "# set random seed\n    random.seed(seed)\n\n    # generate random integer matrix\n    matrix = np.random.randint(min_val, max_val, (rows, cols))\n\n    # convert matrix to DataFrame\n    df = pd.DataFrame(matrix)\n\n    # return DataFrame\n    return df", "compilation_passed": true, "time": 0.0008380413055419922, "tests_passed": true, "error": null}
{"code": "# Set random seed\n    random.seed(seed)\n    # Generate matrix of random integers\n    matrix = [[random.randint(min_val, max_val) for j in range(cols)] for i in range(rows)]\n    # Create pandas DataFrame from matrix\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0010249614715576172, "tests_passed": true, "error": null}
{"code": "# Set random seed for reproducibility\n    random.seed(seed)\n\n    # Generate matrix of random integers\n    matrix = []\n    for _ in range(rows):\n        row = []\n        for _ in range(cols):\n            row.append(random.randint(min_val, max_val))\n        matrix.append(row)\n\n    # Convert matrix to DataFrame\n    df = pd.DataFrame(matrix)\n\n    return df", "compilation_passed": true, "time": 0.0010552406311035156, "tests_passed": true, "error": null}
{"code": "# Set the seed for reproducibility\n    random.seed(seed)\n\n    # Generate random integers and reshape them into a matrix\n    data = [random.randint(min_val, max_val) for _ in range(rows * cols)]\n    data = np.array(data).reshape(rows, cols)\n\n    # Convert the matrix into a DataFrame\n    df = pd.DataFrame(data)\n\n    return df", "compilation_passed": true, "time": 0.0009589195251464844, "tests_passed": true, "error": null}
{"code": "# Initialize random seed\n    random.seed(seed)\n    np.random.seed(seed)\n\n    # Initialize matrix with random integers\n    matrix = np.random.randint(min_val, max_val, size=(rows, cols))\n\n    # Create pandas DataFrame from matrix\n    df = pd.DataFrame(matrix)\n\n    # Return pandas DataFrame\n    return df", "compilation_passed": true, "time": 0.0008618831634521484, "tests_passed": true, "error": null}
{"code": "np.random.seed(seed)\n    matrix = np.random.randint(min_val, max_val, size=(rows, cols))\n    return pd.DataFrame(matrix)", "compilation_passed": true, "time": 0.0008561611175537109, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    data = [[random.randint(min_val, max_val) for _ in range(cols)] for _ in range(rows)]\n    df = pd.DataFrame(data)\n    return df", "compilation_passed": true, "time": 0.0010249614715576172, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    data = np.random.randint(min_val, max_val, size=(rows, cols))\n    df = pd.DataFrame(data)\n    return df", "compilation_passed": true, "time": 0.000843048095703125, "tests_passed": true, "error": null}
{"code": "# Set random seed for reproducibility\n    random.seed(seed)\n    np.random.seed(seed)\n    # Create a matrix of random integers within the specified range\n    matrix = [[random.randint(min_val, max_val) for _ in range(cols)] for _ in range(rows)]\n    # Convert the matrix into a pandas DataFrame\n    df = pd.DataFrame(matrix)\n    return df", "compilation_passed": true, "time": 0.0010499954223632812, "tests_passed": true, "error": null}
