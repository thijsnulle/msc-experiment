{"code": "source_files = glob.glob(f'{source_dir}/*{extension}')\n    count = 0\n    for file_path in source_files:\n        filename = os.path.basename(file_path)\n        shutil.move(file_path, os.path.join(dest_dir, filename))\n        count += 1\n    return count", "compilation_passed": true, "time": 0.002153158187866211, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.makedirs(dest_dir, exist_ok=True)\n    files_to_move = glob.glob(os.path.join(source_dir, f'*{extension}'))\n    count = 0\n\n    for file in files_to_move:\n        filename = os.path.basename(file)\n        shutil.move(file, os.path.join(dest_dir, filename))\n        count += 1\n\n    return count", "compilation_passed": true, "time": 0.0020530223846435547, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Check if the source directory exists.\n    if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"Source directory '{source_dir}' does not exist\")\n\n    # Check if the destination directory exists, and create it if necessary.\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    # Move the files from the source directory to the destination directory.\n    files_moved = 0\n    for filename in glob.glob(os.path.join(source_dir, f'*.{extension}')):\n        shutil.move(filename, dest_dir)\n        files_moved += 1\n\n    # Return the number of files that were moved.\n    return files_moved", "compilation_passed": true, "time": 0.0022199153900146484, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count_files = 0\n    files_list = glob.glob(f'{source_dir}/*.{extension}')\n    for i in files_list:\n        file_name = os.path.basename(i)\n        shutil.move(i, os.path.join(dest_dir, file_name))\n        count_files += 1\n    return count_files", "compilation_passed": true, "time": 0.0020689964294433594, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n    files = glob.glob(f'{source_dir}/*.{extension}')\n    for file in files:\n        shutil.move(file, dest_dir)\n        count += 1\n    return count", "compilation_passed": true, "time": 0.0020599365234375, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        os.makedirs(dest_dir)\n    except FileExistsError:\n        pass\n    else:\n        print('The directory \"%s\" is created successfully' % dest_dir)\n\n    count = 0\n    for file in glob.glob(source_dir + '/*' + extension):\n        file_name = file.rsplit('\\\\', 1)[1]\n        shutil.move(file, dest_dir + '/' + file_name)\n        count += 1\n    return count", "compilation_passed": true, "time": 0.0022139549255371094, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files_to_move = glob.glob(os.path.join(source_dir, '*{}'.format(extension)))\n\n    if not os.path.isdir(dest_dir):\n        os.mkdir(dest_dir)\n\n    for filename in files_to_move:\n        shutil.move(filename, dest_dir)\n\n    return len(files_to_move)", "compilation_passed": true, "time": 0.0020639896392822266, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.chdir(source_dir)\n    count = 0\n    files = glob.glob(f\"*.{extension}\")\n\n    for file in files:\n        shutil.move(file, dest_dir)\n        count += 1\n\n    return count", "compilation_passed": true, "time": 0.002056121826171875, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.makedirs(dest_dir, exist_ok=True)\n    count = 0\n    for file in glob.glob(os.path.join(source_dir, f\"*{extension}\")):\n        shutil.move(file, os.path.join(dest_dir, os.path.basename(file)))\n        count += 1\n    return count", "compilation_passed": true, "time": 0.002213716506958008, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_count = 0\n    files = glob.glob(os.path.join(source_dir, f'*.{extension}'))\n\n    for file_name in files:\n        shutil.move(file_name, dest_dir)\n        file_count += 1\n    return file_count", "compilation_passed": true, "time": 0.0020647048950195312, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Get a list of all files with the specified extension\n    files = glob.glob(os.path.join(source_dir, '*.{}'.format(extension)))\n\n    # Move each file to the destination directory\n    count = 0\n    for file in files:\n        shutil.move(file, os.path.join(dest_dir, os.path.basename(file)))\n        count += 1\n\n    return count", "compilation_passed": true, "time": 0.0021178722381591797, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n    for filename in glob.iglob(source_dir + '**/*' + extension, recursive=True):\n        shutil.move(filename, dest_dir)\n        count += 1\n    return count", "compilation_passed": true, "time": 0.0021708011627197266, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.makedirs(dest_dir, exist_ok=True)\n    file_list = glob.glob(f\"{source_dir}/*.{extension}\")\n    count = 0\n    for filename in file_list:\n        new_filename = os.path.basename(filename)\n        new_path = os.path.join(dest_dir, new_filename)\n        shutil.move(filename, new_path)\n        count += 1\n    return count", "compilation_passed": true, "time": 0.002103090286254883, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create destination directory if it doesn't exist\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    # Find all files with extension in source directory and move to destination directory\n    file_count = 0\n    for file in glob.glob(os.path.join(source_dir, f\"*.{extension}\")):\n        shutil.move(file, os.path.join(dest_dir, os.path.basename(file)))\n        file_count += 1\n\n    return file_count", "compilation_passed": true, "time": 0.002077817916870117, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n\n    for file in glob.glob(source_dir + extension):\n        if os.path.isfile(file):\n            shutil.move(file, dest_dir)\n            count += 1\n\n    return count", "compilation_passed": true, "time": 0.0021681785583496094, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = glob.glob(os.path.join(source_dir, f'*.{extension}'))\n    count = 0\n\n    for filename in files:\n        try:\n            shutil.move(filename, dest_dir)\n            count += 1\n        except:\n            print(\"Error occurred while moving \", filename)\n\n    return count", "compilation_passed": true, "time": 0.002069711685180664, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        source_dir = os.path.abspath(source_dir)\n        dest_dir = os.path.abspath(dest_dir)\n        os.chdir(source_dir)\n        count = 0\n        for file in glob.glob(\"*\" + extension):\n            if os.path.isfile(file):\n                shutil.copy(file, dest_dir)\n                count += 1\n        os.chdir(dest_dir)\n        for file in glob.glob(\"*\" + extension):\n            if os.path.isfile(file):\n                shutil.move(file, source_dir)\n        return count\n    except FileNotFoundError:\n        print(\"Error: file not found.\")\n\n    except PermissionError:\n        print(\"Error: permission denied.\")\n\n    except OSError:\n        print(\"Error: file already exists in destination directory.\")\n\n    except Exception as error:\n        print(f\"Error: {error}\")\n\n    finally:\n        print(\"File move completed.\"", "compilation_passed": false, "time": 0.00029087066650390625, "tests_passed": false, "error": "SyntaxError"}
{"code": "files_to_move = glob.glob(f\"{source_dir}/*{extension}\")\n    result = 0\n    for file in files_to_move:\n        filename = os.path.basename(file)\n        shutil.move(file, os.path.join(dest_dir, filename))\n        result += 1\n    return result", "compilation_passed": true, "time": 0.0020949840545654297, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Check if source directory exists\n    if not os.path.isdir(source_dir):\n        print(f\"{source_dir} is not a directory. Please provide a valid directory path.\")\n        return 0\n\n    # Check if destination directory exists\n    if not os.path.isdir(dest_dir):\n        # Create destination directory if it doesn't exist\n        os.mkdir(dest_dir)\n        print(f\"{dest_dir} is created successfully.\")\n\n    # Use glob.glob to find all files with the specified extension\n    files = glob.glob(f\"{source_dir}/*{extension}\")\n\n    # Use shutil.move to move files to the destination directory\n    for file in files:\n        shutil.move(file, dest_dir)\n\n    # Check if files were moved successfully\n    if len(glob.glob(f\"{dest_dir}/*{extension}\")) == len(files):\n        print(f\"{len(files)} files moved successfully from {source_dir} to {dest_dir}.\")\n    else:", "compilation_passed": false, "time": 0.0002570152282714844, "tests_passed": false, "error": "IndentationError"}
{"code": "if not os.path.isdir(dest_dir):\n        os.makedirs(dest_dir)\n\n    files = glob.glob(f\"{source_dir}/*{extension}\")\n    for file in files:\n        shutil.move(file, dest_dir)\n\n    result = len(files)\n    return result", "compilation_passed": true, "time": 0.002206087112426758, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n    # Check if source_dir and dest_dir are valid paths\n    if os.path.exists(source_dir) and os.path.exists(dest_dir):\n        # Get list of files with the specified extension\n        files = glob.glob(os.path.join(source_dir, f'*{extension}'))\n        for file in files:\n            # Get the file name without the extension\n            file_name = os.path.basename(file)\n            # Construct the destination file path\n            dest_file = os.path.join(dest_dir, file_name)\n            # Check if the file exists in the destination directory\n            if not os.path.exists(dest_file):\n                try:\n                    # Move the file\n                    shutil.move(file, dest_file)\n                    count += 1\n                except Exception:\n                    pass\n    return count", "compilation_passed": true, "time": 0.0022590160369873047, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = glob.glob(os.path.join(source_dir, f'*.{extension}'))\n    count = 0\n    for file in files:\n        file_name = os.path.basename(file)\n        shutil.move(file, os.path.join(dest_dir, file_name))\n        count += 1\n    return count", "compilation_passed": true, "time": 0.0020821094512939453, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.chdir(source_dir)\n    files = glob.glob(f\"*.{extension}\")\n    count = 0\n    for file in files:\n        shutil.move(file, dest_dir)\n        count += 1\n    os.chdir(current_dir)\n    return count", "compilation_passed": true, "time": 0.0022249221801757812, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = glob.glob(os.path.join(source_dir, f'*.{extension}'))\n    for file_name in files:\n        shutil.move(file_name, dest_dir)\n    return len(files)", "compilation_passed": true, "time": 0.0020530223846435547, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n    for file_name in glob.glob(f'{source_dir}*.{extension}'):\n        try:\n            shutil.move(file_name, dest_dir)\n        except FileNotFoundError as err:\n            print(err)\n        else:\n            count += 1\n\n    return count", "compilation_passed": true, "time": 0.0020661354064941406, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Count the number of files that were moved\n    count = 0\n\n    # Loop over all files in the source directory\n    for file in os.listdir(source_dir):\n\n        # Check if the file has the desired extension\n        if file.endswith(extension):\n\n            # Create the source and destination paths\n            source_path = os.path.join(source_dir, file)\n            dest_path = os.path.join(dest_dir, file)\n\n            # Move the file to the destination directory\n            shutil.move(source_path, dest_path)\n\n            # Increment the count\n            count += 1\n\n    # Return the count of files that were moved\n    return count", "compilation_passed": true, "time": 0.0022797584533691406, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n    for filename in glob.glob(source_dir + '*.' + extension):\n        shutil.move(filename, dest_dir)\n        count += 1\n    return count", "compilation_passed": true, "time": 0.0020530223846435547, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n    for filename in glob.glob(f\"{source_dir}/*{extension}\"):\n        shutil.move(filename, dest_dir)\n        count += 1\n    return count", "compilation_passed": true, "time": 0.0020380020141601562, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.chdir(source_dir)\n    count = 0\n    for file in glob.glob(f'**/*{extension}', recursive=True):\n        shutil.copy(file, dest_dir)\n        count += 1\n    return count", "compilation_passed": true, "time": 0.002184152603149414, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        os.makedirs(dest_dir)\n    except FileExistsError:\n        pass\n\n    count = 0\n\n    for file_path in glob.glob(os.path.join(source_dir, f'*{extension}')):\n        filename = os.path.basename(file_path)\n        shutil.move(file_path, os.path.join(dest_dir, filename))\n        count += 1\n\n    return count", "compilation_passed": true, "time": 0.0021359920501708984, "tests_passed": false, "error": "FileNotFoundError"}
