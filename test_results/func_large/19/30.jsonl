{"code": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None  # Return None if the directory does not contain any files\n    zip_filename = 'files.zip'\n    zip_file = zipfile.ZipFile(zip_filename, 'w')\n    for file in files:\n        zip_file.write(file, arcname=os.path.basename(file))\n    zip_file.close()\n    return zip_filename", "compilation_passed": true, "time": 0.002646923065185547, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    # Change to the directory\n    os.chdir(directory)\n\n    # Create a zip file\n    zip_file = zipfile.ZipFile('files.zip', 'w')\n\n    # Add all files in the directory to the zip file\n    for file_path in glob.iglob(\"*.*\"):\n        zip_file.write(file_path)\n\n    # Close the zip file\n    zip_file.close()\n\n    return os.path.join(directory, 'files.zip')", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Directory not found: {directory}\")\n\n    files = glob.glob(os.path.join(directory, '*'))\n    zip_path = os.path.join(directory, 'files.zip')\n\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, os.path.basename(file))\n\n    return zip_path", "compilation_passed": true, "time": 0.0013289451599121094, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist\")\n\n    zipname = 'files.zip'\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n\n    with zipfile.ZipFile(zipname, 'w') as zipf:\n        for file in files:\n            zipf.write(file, arcname=os.path.basename(file))\n\n    return os.path.abspath(zipname)", "compilation_passed": true, "time": 0.001987934112548828, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n\n    zip_name = 'files.zip'\n    with zipfile.ZipFile(zip_name, 'w') as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, arcname=os.path.basename(file))\n\n    return zip_name", "compilation_passed": true, "time": 0.0018961429595947266, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory does not exist: {directory}\")\n\n    # List all files (not including subdirectories) in the directory\n    files = glob.glob(os.path.join(directory, \"*\"), recursive=False)\n\n    if not files:\n        return None\n\n    # Create the zip file in the same directory as the input directory\n    zip_path = os.path.join(directory, \"files.zip\")\n\n    # Open the zip file for writing\n    with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, arcname=os.path.basename(file))\n\n    return zip_path", "compilation_passed": true, "time": 0.004457950592041016, "tests_passed": true, "error": null}
{"code": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    # Find all files in the directory (excluding subdirectories)\n    files = glob.glob(os.path.join(directory, '*'))\n\n    # Create the zip file and add the files\n    if not files:\n        return None\n    with zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w') as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, arcname=os.path.basename(file))\n\n    # Return the path to the generated zip file\n    return os.path.join(directory, 'files.zip')", "compilation_passed": true, "time": 0.005233287811279297, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"The directory {directory} does not exist.\")\n\n    # Set the zip file name\n    zip_name = 'files.zip'\n\n    # Get a list of all files in the specified directory\n    files = glob.glob(os.path.join(directory, '*'))\n\n    # If the directory does not contain any files, return None\n    if not files:\n        return None\n\n    # Create a zip file\n    with zipfile.ZipFile(zip_name, 'w') as zipf:\n        # Add files to the zip file\n        for file in files:\n            zipf.write(file, arcname=os.path.basename(file))\n\n    # Return the path to the generated zip file\n    return zip_name", "compilation_passed": true, "time": 0.002129793167114258, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(\"The directory does not exist\")\n    file_list = glob.glob(os.path.join(directory, \"*\"))\n    if not file_list:\n        return None\n    zip_name = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_name, 'w') as zipped_file:\n        for file in file_list:\n            zipped_file.write(file, os.path.basename(file))\n    return zip_name", "compilation_passed": true, "time": 0.002412080764770508, "tests_passed": true, "error": null}
{"code": "# Validate directory\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Invalid directory: {directory}\")\n\n    # Get all files in the directory\n    file_paths = [os.path.join(directory, file) for file in os.listdir(directory) if os.path.isfile(os.path.join(directory, file))]\n\n    # Check if there are any files in the directory\n    if not file_paths:\n        return None\n\n    # Create a zip file with all the files in the directory\n    zip_name = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_name, 'w') as zip:\n        for file_path in file_paths:\n            zip.write(file_path, os.path.basename(file_path))\n\n    return zip_name", "compilation_passed": true, "time": 0.005270719528198242, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory does not exist: {directory}\")\n\n    # get all file paths in the directory\n    file_paths = glob.glob(os.path.join(directory, \"*\"))\n\n    # check if there are any files in the directory\n    if not any(os.path.isfile(path) for path in file_paths):\n        return None\n\n    # zip all files and return the zip file path\n    with zipfile.ZipFile(\"files.zip\", \"w\") as zipf:\n        for path in file_paths:\n            if os.path.isfile(path):\n                zipf.write(path, os.path.basename(path))\n    return \"files.zip\"", "compilation_passed": true, "time": 0.0023851394653320312, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(\"The specified directory does not exist\")\n    if os.path.isfile(directory):\n        raise FileNotFoundError(\"The specified path is not a directory\")\n    files = glob.glob(os.path.join(directory, \"*\"))\n    if not files:\n        return None\n    zip_path = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_path, \"w\") as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, arcname=os.path.basename(file))\n    return zip_path", "compilation_passed": true, "time": 0.004221916198730469, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory {directory} not found.\")\n    files = glob.glob(os.path.join(directory, \"*\"))\n    if not files:\n        return None\n    with zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w') as zipf:\n        for file in files:\n            zipf.write(file, os.path.basename(file))\n    return os.path.join(directory, 'files.zip')", "compilation_passed": true, "time": 0.001992940902709961, "tests_passed": true, "error": null}
{"code": "# Check if directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory not found: {directory}\")\n    \n    # Create a zip file object\n    zip_path = os.path.join(directory, 'files.zip')\n    zip = zipfile.ZipFile(zip_path, 'w')\n    \n    # Add files to the zip file\n    for file_path in glob.glob(os.path.join(directory, '*')):\n        if os.path.isfile(file_path):\n            zip.write(file_path, os.path.basename(file_path))\n    \n    # Close the zip file object\n    zip.close()\n    \n    return zip_path if zip.namelist() else None", "compilation_passed": true, "time": 0.0014369487762451172, "tests_passed": true, "error": null}
{"code": "# Check if the specified directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(\"The specified directory does not exist\")\n\n    # Get a list of all files in the specified directory\n    files = glob.glob(f\"{directory}/*\")\n\n    # If there are no files, return None\n    if not files:\n        return None\n\n    # Generate a path for the zip file\n    zip_path = os.path.join(directory, \"files.zip\")\n\n    # Create a new ZipFile object for the zip file\n    with zipfile.ZipFile(zip_path, \"w\") as zip_file:\n        # Add each file to the zip file\n        for file in files:\n            zip_file.write(file, os.path.basename(file))\n\n    # Return the path to the generated zip file\n    return zip_path", "compilation_passed": true, "time": 0.002006053924560547, "tests_passed": true, "error": null}
{"code": "# Validate input argument\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f'The directory {directory} does not exist.')\n\n    # Create zip file with files in the directory\n    zip_path = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        file_paths = glob.glob(os.path.join(directory, '*'))\n        if file_paths:\n            for file_path in file_paths:\n                if os.path.isfile(file_path):\n                    zip_file.write(file_path, os.path.basename(file_path))\n        else:\n            print(f'No files found in directory: {directory}')\n            return None\n\n    # Return path to the generated zip file\n    return zip_path", "compilation_passed": true, "time": 0.0014908313751220703, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f'{directory} is not a directory')\n\n    file_list = [os.path.join(directory, filename) for filename in os.listdir(directory) if os.path.isfile(os.path.join(directory, filename))]\n    if not file_list:\n        return None\n\n    zip_filename = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_filename, 'w') as zip_file:\n        for filename in file_list:\n            zip_file.write(filename, os.path.basename(filename))\n\n    return zip_filename", "compilation_passed": true, "time": 0.004194974899291992, "tests_passed": true, "error": null}
{"code": "# Raise an exception if the directory does not exist\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n    # Find all files in the directory (not including subdirectories)\n    files = glob.glob(os.path.join(directory, '*'))\n    # If there are no files, return None\n    if not files:\n        return None\n    # Create a zip file\n    zip_name = 'files.zip'\n    with zipfile.ZipFile(zip_name, 'w') as zip:\n        # Add each file to the zip file\n        for file in files:\n            zip.write(file)\n    # Return the path to the generated zip file\n    return zip_name", "compilation_passed": true, "time": 0.0019199848175048828, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n    if not any(os.path.isfile(os.path.join(directory, file)) for file in os.listdir(directory)):\n        return None\n\n    with zipfile.ZipFile(f\"{directory}/files.zip\", 'w') as zip_file:\n        for file in glob.glob(f\"{directory}/*\"):\n            if os.path.isfile(file):\n                zip_file.write(file, os.path.basename(file))\n\n    return f\"{directory}/files.zip\"", "compilation_passed": true, "time": 0.0020761489868164062, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    zip_path = os.path.join(directory, 'files.zip')\n    zip_ref = zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED)\n\n    for file in glob.glob(os.path.join(directory, '*')):\n        if os.path.isfile(file):\n            zip_ref.write(file, os.path.basename(file))\n\n    zip_ref.close()\n\n    if os.path.exists(zip_path):\n        return zip_path\n    else:\n        return None", "compilation_passed": true, "time": 0.001413106918334961, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError\n\n    file_list = glob.glob(os.path.join(directory, \"*\"))\n    if not file_list:\n        return None\n\n    zip_name = 'files.zip'\n    with zipfile.ZipFile(zip_name, 'w') as myzip:\n        for file in file_list:\n            myzip.write(file)\n\n    return os.path.abspath(zip_name)", "compilation_passed": true, "time": 0.0017781257629394531, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' not found.\")\n\n    # Create a zip file with the specified name and file mode\n    zip_path = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zipf:\n        for file in glob.glob(os.path.join(directory, '*')):\n            # Check if the file is a regular file and add it to the zip\n            if os.path.isfile(file):\n                zipf.write(file, arcname=os.path.basename(file))\n\n    # Return the path to the generated zip file if it contains any files\n    return zip_path if os.path.getsize(zip_path) > 0 else None", "compilation_passed": true, "time": 0.0013608932495117188, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"The directory '{directory}' does not exist\")\n    zip_path = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zf:\n        files = glob.glob(os.path.join(directory, '*'))\n        if not files:\n            return None\n        for file in files:\n            zf.write(file, os.path.basename(file))\n    return zip_path", "compilation_passed": true, "time": 0.0013861656188964844, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError('Specified directory does not exist')\n\n    zip_path = os.path.join(directory, 'files.zip')\n    zip = zipfile.ZipFile(zip_path, 'w')\n\n    file_paths = glob.glob(os.path.join(directory, \"*\"))\n\n    if len(file_paths) == 0:\n        return None\n\n    for file_path in file_paths:\n        if os.path.isfile(file_path):\n            zip.write(file_path, os.path.basename(file_path))\n\n    zip.close()\n\n    return zip_path", "compilation_passed": true, "time": 0.0013492107391357422, "tests_passed": true, "error": null}
{"code": "if os.path.exists(directory):\n        with zipfile.ZipFile('files.zip', 'w') as zf:\n            for file in glob.glob(directory + '/*'):\n                zf.write(file)\n            if zf.namelist():\n                return os.getcwd() + '/files.zip'\n    else:\n        raise FileNotFoundError('The directory does not exist!')", "compilation_passed": true, "time": 0.0011909008026123047, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(\"The specified directory does not exist\")\n    path = os.path.join(directory, \"*\")\n    file_list = glob.glob(path)\n    if not file_list:\n        return None\n    zip_name = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_name, \"w\") as zip_obj:\n        for file in file_list:\n            zip_obj.write(file, os.path.basename(file))\n    return zip_name", "compilation_passed": true, "time": 0.0019099712371826172, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Directory does not exist: {directory}\")\n\n    files = glob.glob(os.path.join(directory, \"*\"))\n\n    if not files:\n        return None\n\n    zipname = \"files.zip\"\n    with zipfile.ZipFile(zipname, \"w\") as zf:\n        for file in files:\n            if os.path.isfile(file):\n                zf.write(file)\n\n    return zipname", "compilation_passed": true, "time": 0.001775979995727539, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"The directory '{directory}' does not exist\")\n\n    # Get all files in the specified directory\n    files = glob.glob(os.path.join(directory, \"*\"))\n\n    # Check if there are any files\n    if not files:\n        return None\n\n    # Create the zip file\n    with zipfile.ZipFile(os.path.join(directory, \"files.zip\"), \"w\") as zip_file:\n        for file in files:\n            zip_file.write(file, arcname=os.path.basename(file))\n\n    # Return the path to the created zip file\n    return os.path.join(directory, \"files.zip\")", "compilation_passed": true, "time": 0.002067089080810547, "tests_passed": true, "error": null}
{"code": "# Check if directory exists\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    # Get all files in the directory\n    files = glob.glob(os.path.join(directory, '*'))\n\n    # Check if directory is not empty\n    if not files:\n        return None\n\n    # Create zip file with files\n    with zipfile.ZipFile(f\"{directory}/files.zip\", \"w\") as zip_file:\n        for file in files:\n            zip_file.write(file, os.path.basename(file))\n\n    return f\"{directory}/files.zip\"", "compilation_passed": true, "time": 0.001973867416381836, "tests_passed": true, "error": null}
{"code": "# Check if the directory exists\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(\"Directory does not exist.\")\n\n    # Get a list of all files in the directory\n    files = glob.glob(os.path.join(directory, \"*\"))\n    # If there are no files, return None\n    if not files:\n        return None\n\n    # Create the zip file\n    zip_path = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_path, \"w\") as zip_file:\n        for file_path in files:\n            zip_file.write(file_path, os.path.basename(file_path))\n    # Return the path to the zip file\n    return zip_path", "compilation_passed": true, "time": 0.0019600391387939453, "tests_passed": true, "error": null}
