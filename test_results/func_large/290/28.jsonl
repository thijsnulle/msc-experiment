{"code": "# Initialize a Counter object to store word frequencies\n    word_counter = Counter()\n\n    # Iterate over the files in the specified directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith(\".txt\"):\n            # Load the file and process its content\n            with open(os.path.join(directory_path, filename), \"r\") as file:\n                # Read the entire content of the file\n                content = file.read()\n                # Convert content to lowercase\n                content = content.lower()\n\n                # Split the content into words\n                words = content.split()\n\n                # Update the word frequencies in the Counter object\n                word_counter.update(words)\n\n    # Iterate over the words in the Counter object\n    unique_word_count = 0\n    for word in word_counter:\n        # Check if the word is not a stopword\n        if word not in STOPWORDS:\n            unique_word_count += 1\n\n    return unique_word_count", "compilation_passed": true, "time": 0.0009450912475585938, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "filepaths = [filepath for filepath in os.listdir(directory_path) if filepath.endswith('.txt')]\n    if not filepaths:\n        print(\"No files found in the directory\")\n        return\n\n    words = []\n\n    for filepath in filepaths:\n        with open(os.path.join(directory_path, filepath), \"r\", encoding=\"utf-8\") as file:\n            words.extend([word for word in file.read().split() if word.casefold() not in STOPWORDS])\n\n    word_counts = Counter(words)\n    unique_word_count = len(word_counts)\n\n    return unique_word_count", "compilation_passed": true, "time": 0.0009839534759521484, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Get all .txt files in the directory\n    txt_files = [f for f in os.listdir(directory_path) if f.endswith('.txt')]\n\n    # Create a list to store the unique words from all files\n    unique_words = []\n\n    # Iterate through each .txt file\n    for txt_file in txt_files:\n        # Open file and read lines\n        with open(os.path.join(directory_path, txt_file), 'r') as file:\n            # Create a Counter object to count words in the file\n            word_count = Counter(file.read().split())\n\n            # Iterate through the unique words and check if they are not stop words\n            for word in word_count.keys():\n                if word.lower() not in STOPWORDS:\n                    unique_words.append(word)\n\n    # Get the count of unique words using set\n    total_unique_words = len(set(unique_words))\n    return total_unique_words", "compilation_passed": true, "time": 0.0009338855743408203, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create an empty Counter to store the count of each unique word\n    word_counter = Counter()\n\n    # Iterate over all files in the specified directory\n    for file in os.listdir(directory_path):\n        if file.endswith(\".txt\"):  # Only consider '.txt' files\n            file_path = os.path.join(directory_path, file)  # Construct the full file path\n            with open(file_path, \"r\") as text_file:\n                text = text_file.read().lower()  # Read the file content and convert to lowercase\n                words = text.split()  # Split the text into words\n                # Exclude stopwords from the word list\n                words_without_stopwords = [word for word in words if word not in STOPWORDS]\n                # Update the counter with the words from the current file\n                word_counter.update(words_without_stopwords)\n\n    return len(word_counter)  # Return the number of unique words in the counter", "compilation_passed": true, "time": 0.0009362697601318359, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_count = 0\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r') as f:\n                words = f.read().split()\n                non_stopwords = [word for word in words if word.lower() not in STOPWORDS]\n                total_count += len(set(non_stopwords))\n    return total_count", "compilation_passed": true, "time": 0.0009131431579589844, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = [f for f in os.listdir(directory_path) if f.endswith('.txt')]\n\n    word_counts = Counter()\n\n    for file_name in files:\n        with open(os.path.join(directory_path, file_name), 'r') as file:\n            text = file.read()\n            words = text.split()\n            words = [word for word in words if word not in STOPWORDS]\n            word_counts.update(words)\n\n    return len(word_counts)", "compilation_passed": true, "time": 0.0009100437164306641, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_count = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            with open(os.path.join(directory_path, filename), 'r') as file:\n                for line in file:\n                    words = line.strip().split()\n                    for word in words:\n                        if word.lower() not in STOPWORDS:\n                            total_count[word] += 1\n\n    return len(total_count)", "compilation_passed": true, "time": 0.0008640289306640625, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_count = Counter()\n\n    # Iterate over all text files in the directory\n    for file in os.listdir(directory_path):\n        if file.endswith('.txt'):\n            with open(os.path.join(directory_path, file), 'r') as f:\n                # Extract the words from the file content\n                words = f.read().split()\n\n                # Count the words using Counter\n                word_count.update([w for w in words if w not in STOPWORDS])\n\n    # Return the total count of unique non-stop words\n    return len(word_count)", "compilation_passed": true, "time": 0.0008761882781982422, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_count = 0\n    for root, _, files in os.walk(directory_path):\n        for filename in files:\n            if filename.endswith('.txt'):\n                file_path = os.path.join(root, filename)\n                with open(file_path, 'r') as file:\n                    for line in file:\n                        words = line.strip().lower().split()\n                        non_stop_words = [word for word in words if word not in STOPWORDS]\n                        total_count += Counter(non_stop_words)\n\n    return len(total_count)", "compilation_passed": true, "time": 0.0009379386901855469, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "non_stop_word_count = Counter()\n    for file_name in os.listdir(directory_path):\n        if file_name.endswith('.txt'):\n            with open(os.path.join(directory_path, file_name), 'r') as file:\n                words = file.read().split()\n                non_stop_words = [word for word in words if word.lower() not in STOPWORDS]\n                non_stop_word_count.update(non_stop_words)\n    return len(non_stop_word_count)", "compilation_passed": true, "time": 0.0008912086486816406, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize a Counter object to store the frequency of words\n    word_counter = Counter()\n\n    # Iterate over each file in the directory\n    for filename in os.listdir(directory_path):\n        # Check if the file has a '.txt' extension\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n\n            # Open the file in read mode\n            with open(file_path, 'r') as file:\n                # Read the file content and split it into words\n                words = file.read().split()\n\n                # Remove stop words and update the word counter\n                for word in words:\n                    if word.lower() not in STOPWORDS:\n                        word_counter[word.lower()] += 1\n\n    # Return the total count of unique non-stop words\n    return len(word_counter)", "compilation_passed": true, "time": 0.000988006591796875, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count_unique_word = Counter()\n\n    for filename in os.listdir(directory_path):\n\n        if filename.endswith(\".txt\"):\n            with open(directory_path + filename, \"r\") as file:\n                for line in file:\n                    for word in line.split():\n                        if word not in STOPWORDS:\n                            count_unique_word[word] += 1\n\n    return len(count_unique_word)", "compilation_passed": true, "time": 0.0008130073547363281, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count_total = 0\n    for file_name in os.listdir(directory_path):\n        if file_name.endswith(\".txt\"):\n            # Read the file\n            file_path = os.path.join(directory_path, file_name)\n            with open(file_path, \"r\") as file:\n                words = file.read().split()\n\n            # Count the number of words in the file\n            word_count = Counter(words)\n\n            # Remove the stop words\n            word_count = {word: count for word, count in word_count.items() if word not in STOPWORDS}\n\n            # Calculate the total number of unique words\n            count_total += len(word_count.keys())\n\n    return count_total", "compilation_passed": true, "time": 0.0009219646453857422, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "unique_words = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r') as f:\n                text = f.read()\n                words = text.split()\n                non_stopwords = [word for word in words if word.lower() not in STOPWORDS]\n                unique_words.update(non_stopwords)\n    return len(unique_words)", "compilation_passed": true, "time": 0.0008959770202636719, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_counts = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r') as file:\n                text = file.read().lower()\n                words = text.split()\n                words = [word for word in words if word not in STOPWORDS]\n                word_counts.update(words)\n    total_unique_words = len(word_counts)\n    return total_unique_words", "compilation_passed": true, "time": 0.000885009765625, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory_path) or not os.path.isdir(directory_path):\n        raise ValueError(\"Invalid directory path\")\n\n    # Create a Counter object to count unique words\n    unique_word_counter = Counter()\n\n    # Iterate over files in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith(\".txt\"):\n            filepath = os.path.join(directory_path, filename)\n            with open(filepath, \"r\") as file:\n                words = file.read().split()\n                words = [word.lower() for word in words if word.lower() not in STOPWORDS]  # Filter stop words\n                unique_word_counter.update(words)\n\n    # Return the total count of unique non-stop words\n    return len(unique_word_counter)", "compilation_passed": true, "time": 0.0009229183197021484, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_count = 0\n    for file in os.listdir(directory_path):\n        if file.endswith('.txt'):\n            # Count unique non-stop words for each file\n            file_path = os.path.join(directory_path, file)\n            with open(file_path, 'r') as f:\n                content = f.read()\n                words = content.split()\n                # Filter out stop words and count unique words\n                non_stop_words = [word for word in words if word.lower() not in STOPWORDS]\n                total_count += len(set(non_stop_words))\n    return total_count", "compilation_passed": true, "time": 0.0008807182312011719, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "words_counter = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            with open(directory_path + filename, 'r', encoding='utf-8') as file:\n                words = file.read().strip().replace(\"\\n\", \" \").split()\n                filtered_words = [word for word in words if word not in STOPWORDS and not word.isdigit()]\n                words_counter += Counter(filtered_words)\n    return len(words_counter)", "compilation_passed": true, "time": 0.0008823871612548828, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not directory_path.endswith('/'):\n        directory_path += '/'\n    # Create a Counter object to keep track of word frequencies\n    word_counter = Counter()\n\n    # Find all text files in the directory\n    text_files = [file for file in os.listdir(directory_path) if file.endswith('.txt')]\n\n    # Process each file\n    for text_file in text_files:\n        # Read the file contents\n        with open(os.path.join(directory_path, text_file), 'r') as f:\n            contents = f.read()\n\n        # Split the contents into individual words\n        words = contents.split()\n\n        # Exclude stopwords and count unique words\n        for word in words:\n            if word not in STOPWORDS:\n                word_counter[word] += 1\n\n    # Calculate the total count of unique non-stop words\n    unique_count = len(word_counter.keys())\n\n    return unique_count", "compilation_passed": true, "time": 0.0009238719940185547, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n\n    # Iterate over each file in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):  # Check if it's a '.txt' file\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r', encoding='utf-8') as file:\n                text = file.read()\n                # Tokenize the text into words and remove stopwords\n                words = [word for word in nltk.word_tokenize(text) if word.lower() not in STOPWORDS]\n                count += len(set(words))  # Count the unique non-stop words\n\n    return count", "compilation_passed": true, "time": 0.0008902549743652344, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize a Counter object to count words\n    word_count = Counter()\n\n    # Iterate over files with a '.txt' extension in the specified directory\n    for file in os.listdir(directory_path):\n        if file.endswith('.txt'):\n            filepath = os.path.join(directory_path, file)\n\n            # Open the file in read mode\n            with open(filepath, 'r') as f:\n                # Read the file content and split it into words\n                words = f.read().split()\n\n                # Exclude stop words from the count\n                words = [word for word in words if word.lower() not in STOPWORDS]\n\n                # Update the word count using the Counter object\n                word_count.update(words)\n\n    # Return the total count of unique words\n    return len(word_count)", "compilation_passed": true, "time": 0.0009510517120361328, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_counts = Counter()\n    for file in os.listdir(directory_path):\n        if file.endswith(\".txt\"):\n            with open(os.path.join(directory_path, file), \"r\", encoding=\"utf-8\") as f:\n                for line in f:\n                    words = line.strip().split()\n                    for word in words:\n                        if word not in STOPWORDS:\n                            word_counts[word] += 1\n    return len(word_counts)", "compilation_passed": true, "time": 0.0008771419525146484, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize an empty counter to accumulate word counts\n    total_counter = Counter()\n\n    # Iterate over all files in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):  # Only consider '.txt' files\n            file_path = os.path.join(directory_path, filename)  # Construct the full path to the file\n\n            # Read the content of the file\n            with open(file_path, 'r', encoding='utf-8') as file:\n                content = file.read().lower()  # Read the content and convert to lowercase for consistency\n\n            # Split the content into words\n            words = content.split()\n\n            # Remove stopwords from the words\n            non_stop_words = [word for word in words if word not in STOPWORDS]\n\n            # Update the total counter with the counts of non-stop words in the file\n            total_counter.update(non_stop_words)\n\n    return len(total_counter)  # Return the length of the counter, representing the number of unique non", "compilation_passed": true, "time": 0.0008802413940429688, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize a Counter object\n    counter = Counter()\n\n    # Iterate over all '.txt' files in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith(\".txt\"):\n            filepath = os.path.join(directory_path, filename)\n            with open(filepath, 'r', encoding='utf-8') as file:\n                # Read each file and convert the content to lowercase\n                text = file.read().lower()\n                # Split the text into words and exclude stop words\n                words = [word for word in text.split() if word not in STOPWORDS]\n                # Update the counter with the unique words in the file\n                counter.update(words)\n\n    # Return the total count of unique non-stop words across all files\n    return len(counter)", "compilation_passed": true, "time": 0.0009610652923583984, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_count = 0\n\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n\n            with open(file_path, 'r') as file:\n                text = file.read()\n                words = text.split()\n                words = [word for word in words if word.lower() not in STOPWORDS]\n\n            total_count += len(Counter(words))\n\n    return total_count", "compilation_passed": true, "time": 0.0008747577667236328, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create a Counter object to store the frequency of words\n    word_counter = Counter()\n\n    # Loop through all files in the directory\n    for filename in os.listdir(directory_path):\n        # Check if the file has a '.txt' extension\n        if filename.endswith('.txt'):\n            # Read the content of the file\n            with open(os.path.join(directory_path, filename), 'r') as file:\n                content = file.read()\n\n            # Split the content into words\n            words = content.split()\n\n            # Filter out stop words and add non-stop words to the Counter\n            word_counter.update([word for word in words if word.lower() not in STOPWORDS])\n\n    # Get the total count of unique non-stop words\n    total_unique_count = len(word_counter)\n\n    return total_unique_count", "compilation_passed": true, "time": 0.0008809566497802734, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create an empty Counter object to track the counts of non-stop words\n    counter = Counter()\n\n    # Iterate over all '.txt' files in the specified directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r') as file:\n                # Read the contents of the file\n                contents = file.read()\n                # Split the contents into words\n                words = contents.split()\n\n                # Count the non-stop words using Counter\n                for word in words:\n                    if word not in STOPWORDS:\n                        counter[word] += 1\n\n    # Return the total count of unique non-stop words\n    return len(counter)", "compilation_passed": true, "time": 0.0008740425109863281, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_count = 0\n\n    # Iterate over each file in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n\n            # Read the file content and split into words\n            with open(file_path, 'r') as file:\n                words = file.read().split()\n\n            # Remove stop words and count unique non-stop words\n            unique_non_stop_words = Counter(word for word in words if word.lower() not in STOPWORDS)\n            total_count += len(unique_non_stop_words)\n\n    return total_count", "compilation_passed": true, "time": 0.0008828639984130859, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files_paths = [directory_path + file for file in os.listdir(directory_path) if file.endswith(\".txt\")]\n    # 1. Create a list of all '.txt' file paths in the specified directory\n\n    non_stop_words = []\n    for file_path in files_paths:\n        with open(file_path, mode='r', encoding='utf-8') as file:\n            lines = file.readlines()\n        words = []\n        for line in lines:\n            words += line.replace(\"\\n\", \" \").replace(\"\\t\", \" \").split(\" \")\n        words = [word.strip() for word in words]\n        # 2. Extract non-stop words from each file and store them in a list\n\n        non_stop_words += [word for word in words if word.lower() not in STOPWORDS]\n    # 3. Combine all non-stop words into a single list\n\n    return len(Counter(non_stop_words))\n    # 4. Use collections.Counter", "compilation_passed": true, "time": 0.0009531974792480469, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "all_text = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            filepath = os.path.join(directory_path, filename)\n            with open(filepath, 'r', encoding='utf-8') as file:\n                text = file.read().lower()\n                words = text.split()\n                unique_words = set(word for word in words if word not in STOPWORDS)\n                all_text.update(unique_words)\n    return len(all_text)", "compilation_passed": true, "time": 0.0008969306945800781, "tests_passed": false, "error": "FileNotFoundError"}
