{"code": "if not os.path.isdir(directory_path):\n        raise ValueError(\"The directory does not exist\")\n\n    result_list = []\n    for file in os.listdir(directory_path):\n        filepath = os.path.join(directory_path, file)\n        if os.path.isfile(filepath):\n            stat = os.stat(filepath)\n            size = stat.st_size\n            ctime = datetime.fromtimestamp(\n                stat.st_ctime, tz=timezone.utc\n            ).isoformat()\n            mtime = datetime.fromtimestamp(\n                stat.st_mtime, tz=timezone.utc\n            ).isoformat()\n            result_list.append((file, size, ctime, mtime))\n    return result_list", "compilation_passed": true, "time": 0.011289834976196289, "tests_passed": true, "error": null}
{"code": "if not directory_path:\n        return []\n\n    directory_path = Path(directory_path)\n\n    if not directory_path.exists():\n        raise ValueError(f\"Directory {directory_path} does not exist.\")\n\n    result = []\n\n    for file_name in os.listdir(directory_path):\n        file_path = directory_path / file_name\n\n        if file_path.is_file():\n            file_size = os.path.getsize(file_path)\n\n            creation_time = datetime.fromtimestamp(file_path.stat().st_ctime)\n            creation_time = creation_time.astimezone(timezone.utc)\n            creation_time = creation_time.isoformat(timespec=\"seconds\")\n\n            modification_time = datetime.fromtimestamp(\n                os.path.getmtime(file_path)\n            )\n            modification_time = modification_time.astimezone(timezone.utc)\n            modification_time = modification_time.isoformat(timespec=\"seconds\")\n", "compilation_passed": true, "time": 0.002273082733154297, "tests_passed": false, "error": "TypeError"}
{"code": "try:\n        dir_path = Path(directory_path)\n        if not dir_path.is_dir():\n            raise ValueError(\"Directory does not exist\")\n        output = []\n        for file in os.listdir(dir_path):\n            file_path = dir_path / file\n            if file_path.is_file():\n                file_stats = file_path.stat()\n                output.append((\n                    file,\n                    file_stats.st_size,\n                    datetime.fromtimestamp(file_stats.st_ctime, tz=timezone.utc).isoformat(),\n                    datetime.fromtimestamp(file_stats.st_mtime, tz=timezone.utc).isoformat()\n                ))\n    except ValueError as e:\n        print(f\"An error occurred: {e}\")\n    return output", "compilation_passed": true, "time": 0.0035142898559570312, "tests_passed": false, "error": "UnboundLocalError"}
{"code": "result_list: list = []\n    # check if directory path is empty\n    if directory_path == \"\":\n        return result_list\n    # check if directory exists\n    if not os.path.isdir(directory_path):\n        raise ValueError(f\"Directory path does not exist: {directory_path}\")\n    # get files in directory\n    files_list = os.listdir(directory_path)\n    # iterate over files and get name, size, creation time, and last modification time\n    for filename in files_list:\n        file_path = os.path.join(directory_path, filename)\n        if os.path.isfile(file_path):\n            file_size = os.path.getsize(file_path)\n            create_time = os.path.getctime(file_path)\n            modify_time = os.path.getmtime(file_path)\n\n            # convert to datetime object in UTC\n            utc_create = datetime.utcfromtimestamp(create_time)\n            utc_modify = datetime.utcfromtimestamp(modify_time", "compilation_passed": false, "time": 0.0002307891845703125, "tests_passed": false, "error": "SyntaxError"}
{"code": "result = []\n    try:\n        files = os.listdir(directory_path)\n        for file_name in files:\n            file_path = os.path.join(directory_path, file_name)\n            if not os.path.isfile(file_path):\n                continue\n            file_size = os.path.getsize(file_path)\n            creation_time = datetime.fromtimestamp(\n                os.path.getctime(file_path), timezone.utc\n            ).isoformat()\n            modification_time = datetime.fromtimestamp(\n                os.path.getmtime(file_path), timezone.utc\n            ).isoformat()\n            result.append(\n                (file_name, file_size, creation_time, modification_time)\n            )\n    except FileNotFoundError:\n        raise ValueError(\"Directory not found\")\n    return result", "compilation_passed": true, "time": 0.009392738342285156, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "result = []\n\n    if not directory_path:\n        return result\n\n    dir_path = Path(directory_path)\n    if not dir_path.exists():\n        raise ValueError(f'The provided directory does not exist: {directory_path}')\n\n    for item in os.listdir(directory_path):\n        full_path = os.path.join(directory_path, item)\n\n        if os.path.isfile(full_path):\n            size = os.path.getsize(full_path)\n            ctime = datetime.fromtimestamp(\n                os.path.getctime(full_path), timezone.utc\n            ).replace(microsecond=0).isoformat()\n            mtime = datetime.fromtimestamp(\n                os.path.getmtime(full_path), timezone.utc\n            ).replace(microsecond=0).isoformat()\n            result.append((item, size, ctime, mtime))\n\n    return result", "compilation_passed": true, "time": 0.009670734405517578, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "if not directory_path:\n        return []\n\n    # Validate that the provided directory exists\n    if not os.path.isdir(directory_path):\n        raise ValueError(\"The directory does not exist\")\n\n    result = []\n\n    # Get a list of files in the directory\n    files = os.listdir(directory_path)\n\n    # Iterate through the list of files\n    for file in files:\n        # Get the path to the file\n        file_path = os.path.join(directory_path, file)\n\n        # Check if it is a file, not a directory\n        if os.path.isfile(file_path):\n            # Get the file size\n            file_size = os.path.getsize(file_path)\n\n            # Get the creation time and last modification time\n            # The times are reported in the system's time and UTC\n            file_ctime = datetime.fromtimestamp(\n                os.path.getctime(file_path), timezone.utc\n            )\n            file_mtime = datetime.fromtimestamp(\n                os.", "compilation_passed": false, "time": 0.0002079010009765625, "tests_passed": false, "error": "SyntaxError"}
{"code": "result = []\n    if directory_path == '':\n        return result\n    if not os.path.exists(directory_path):\n        raise ValueError(\"Directory does not exist\")\n    directory = Path(directory_path)\n    for file in directory.iterdir():\n        if not file.is_file():\n            continue\n        file_name = file.name\n        file_size = os.path.getsize(file)\n        creation_time = datetime.fromtimestamp(os.path.getctime(file), tz=timezone.utc)\n        modification_time = datetime.fromtimestamp(os.path.getmtime(file), tz=timezone.utc)\n        result.append((file_name, file_size, creation_time.isoformat(), modification_time.isoformat()))\n    return result", "compilation_passed": true, "time": 0.011468887329101562, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "if not os.path.isdir(directory_path):\n        raise ValueError(\"Directory does not exist\")\n\n    result = []\n\n    for file_name in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, file_name)\n        if os.path.isfile(file_path):\n            file_size = os.path.getsize(file_path)\n            ctime = os.path.getctime(file_path)\n            mtime = os.path.getmtime(file_path)\n            result.append((\n                file_name,\n                file_size,\n                datetime.fromtimestamp(ctime, tz=timezone.utc).isoformat(),\n                datetime.fromtimestamp(mtime, tz=timezone.utc).isoformat()\n            ))\n\n    return result", "compilation_passed": true, "time": 0.009620904922485352, "tests_passed": true, "error": null}
{"code": "if not directory_path:\n        return []\n\n    directory_path = Path(directory_path)\n\n    if not directory_path.exists():\n        raise ValueError(\"Directory does not exist.\")\n\n    files_info = []\n    for item in os.scandir(directory_path):\n        if item.is_file():\n            file_path = Path(item.path)\n            file_stats = file_path.stat()\n\n            files_info.append(\n                (\n                    file_path.name,\n                    file_stats.st_size,\n                    datetime.fromtimestamp(file_stats.st_ctime, tz=timezone.utc)\n                    .isoformat()\n                    .replace(\"+00:00\", \"Z\"),\n                    datetime.fromtimestamp(file_stats.st_mtime, tz=timezone.utc)\n                    .isoformat()\n                    .replace(\"+00:00\", \"Z\"),\n                )\n            )\n\n    return files_info\n", "compilation_passed": true, "time": 0.009318113327026367, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "try:\n        result = []\n\n        if os.path.exists(directory_path):\n\n            # Get a list of entries in the directory\n            entries = os.scandir(directory_path)\n\n            for entry in entries:\n\n                # Get information about the entry\n                stat_info = entry.stat()\n\n                # Convert timestamps to ISO format\n                creation_time = datetime.fromtimestamp(\n                    stat_info.st_ctime, tz=timezone.utc\n                ).isoformat()\n                modification_time = datetime.fromtimestamp(\n                    stat_info.st_mtime, tz=timezone.utc\n                ).isoformat()\n\n                # Append the results to the list\n                result.append(\n                    (\n                        entry.name,\n                        stat_info.st_size,\n                        creation_time,\n                        modification_time,\n                    )\n                )\n\n        return result\n    except OSError as e:\n        raise ValueError(f\"The specified directory does not exist: {directory_path}\"", "compilation_passed": false, "time": 0.00023436546325683594, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not os.path.isdir(directory_path):\n        raise ValueError(\"Directory does not exist.\")\n    output_data = []\n    for file_name in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, file_name)\n        if not os.path.isfile(file_path):\n            continue\n        file_size = os.path.getsize(file_path)\n        # Convert creation_time from epoch to ISO format\n        creation_time_utc = datetime.fromtimestamp(\n            os.path.getctime(file_path), tz=timezone.utc)\n        # Convert modification_time from epoch to ISO format\n        modification_time_utc = datetime.fromtimestamp(\n            os.path.getmtime(file_path), tz=timezone.utc)\n        output_data.append(\n            (file_name, file_size, creation_time_utc.isoformat(),\n             modification_time_utc.isoformat()))\n    return output_data\n", "compilation_passed": true, "time": 0.010127067565917969, "tests_passed": true, "error": null}
{"code": "if not directory_path:\n        return []\n    if not os.path.exists(directory_path):\n        raise ValueError(\"Provided directory does not exist!\")\n    results = []\n    for file_name in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, file_name)\n        file_size = Path(file_path).stat().st_size\n        creation_time = datetime.fromtimestamp(\n            os.path.getctime(file_path), timezone.utc\n        ).isoformat()\n        modified_time = datetime.fromtimestamp(\n            os.path.getmtime(file_path), timezone.utc\n        ).isoformat()\n        results.append((file_name, file_size, creation_time, modified_time))\n    return results", "compilation_passed": true, "time": 0.00904083251953125, "tests_passed": true, "error": null}
{"code": "try:\n        return [(file.name, file.stat().st_size,\n                datetime.fromtimestamp(file.stat().st_ctime, timezone.utc).isoformat(),\n                datetime.fromtimestamp(file.stat().st_mtime, timezone.utc).isoformat())\n                for file in Path(directory_path).iterdir() if file.is_file()]\n    except FileNotFoundError:\n        raise ValueError(\"The specified directory does not exist.\")", "compilation_passed": true, "time": 0.009517908096313477, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "# Check if the provided directory is an empty string\n    if directory_path == \"\":\n        return []\n\n    # Check if the directory exists\n    if not Path(directory_path).is_dir():\n        raise ValueError(\"Provided directory does not exist\")\n\n    # Initialize an empty list to store the results\n    result = []\n\n    # Iterate over each file in the directory\n    for file in os.listdir(directory_path):\n        # Construct the full path to the file\n        full_path = os.path.join(directory_path, file)\n\n        # Check if the current path is a file\n        if os.path.isfile(full_path):\n            # Retrieve the file size\n            file_size = os.path.getsize(full_path)\n\n            # Retrieve the file creation time\n            ctime = os.path.getctime(full_path)\n            ctime_iso = datetime.utcfromtimestamp(ctime).isoformat() + \"Z\"\n\n            # Retrieve the file modification time\n            mtime = os.path.get", "compilation_passed": true, "time": 0.002065896987915039, "tests_passed": false, "error": "AttributeError"}
{"code": "if directory_path:\n        path = Path(directory_path)\n        if not path.exists():\n            raise ValueError(\"Directory does not exist.\")\n\n        file_info = []\n        for file in os.listdir(directory_path):\n            file_path = os.path.join(directory_path, file)\n            if os.path.isfile(file_path):\n                file_stats = os.stat(file_path)\n                creation_time = datetime.fromtimestamp(\n                    file_stats.st_ctime, tz=timezone.utc).isoformat()\n                modification_time = datetime.fromtimestamp(\n                    file_stats.st_mtime, tz=timezone.utc).isoformat()\n                file_info.append(\n                    (file, file_stats.st_size, creation_time, modification_time)\n                )\n\n        return file_info\n    else:\n        return []", "compilation_passed": true, "time": 0.009120941162109375, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "if not os.path.exists(directory_path):\n        raise ValueError(\"The provided directory does not exist.\")\n\n    files = []\n    for filename in os.listdir(directory_path):\n        full_path = os.path.join(directory_path, filename)\n        if os.path.isfile(full_path):\n            filesize = os.path.getsize(full_path)\n            creation_time = datetime.fromtimestamp(os.path.getctime(full_path), timezone.utc).isoformat()\n            modification_time = datetime.fromtimestamp(os.path.getmtime(full_path), timezone.utc).isoformat()\n            files.append((filename, filesize, creation_time, modification_time))\n    return files", "compilation_passed": true, "time": 0.010057926177978516, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "result: list[tuple[str, int, str, str]] = []\n    path = Path(directory_path)\n\n    if not os.path.exists(directory_path):\n        raise ValueError(\"The directory does not exist.\")\n\n    if not os.path.isdir(directory_path):\n        raise ValueError(\"The specified path is not a directory.\")\n\n    if path.is_dir():\n        for file in os.listdir(directory_path):\n            file_path = os.path.join(directory_path, file)\n            file_stats = os.stat(file_path)\n\n            # Converting timestamp to UTC\n            creation_time = datetime.utcfromtimestamp(file_stats.st_ctime).isoformat() + \"Z\"\n            modification_time = datetime.utcfromtimestamp(file_stats.st_mtime).isoformat() + \"Z\"\n            result.append((file, file_stats.st_size, creation_time, modification_time))\n\n    return result", "compilation_passed": true, "time": 0.009048938751220703, "tests_passed": true, "error": null}
{"code": "if not directory_path:\n        return []\n\n    directory = Path(directory_path)\n    if not directory.is_dir():\n        raise ValueError(\"Provided directory does not exist.\")\n\n    output = []\n\n    for file in os.scandir(directory):\n        if file.is_file():\n            file_name = file.name\n            file_size = os.path.getsize(file)\n\n            file_creation_time = file.stat().st_ctime\n            file_creation_time_iso = datetime.fromtimestamp(\n                file_creation_time, timezone.utc\n            ).isoformat()\n\n            file_modification_time = file.stat().st_mtime\n            file_modification_time_iso = datetime.fromtimestamp(\n                file_modification_time, timezone.utc\n            ).isoformat()\n\n            output.append(\n                (\n                    file_name,\n                    file_size,\n                    file_creation_time_iso,\n                    file_modification_time_iso,", "compilation_passed": false, "time": 0.00026488304138183594, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not os.path.exists(directory_path):\n        raise ValueError(\"The directory does not exist.\")\n\n    file_info_list = []\n    directory = Path(directory_path)\n    for entry in directory.iterdir():\n        if entry.is_file():\n            stat = entry.stat()\n            file_info = (\n                entry.name,\n                stat.st_size,\n                datetime.fromtimestamp(stat.st_ctime, tz=timezone.utc).isoformat(),\n                datetime.fromtimestamp(stat.st_mtime, tz=timezone.utc).isoformat(),\n            )\n            file_info_list.append(file_info)\n\n    return file_info_list", "compilation_passed": true, "time": 0.009650945663452148, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "if not directory_path:\n        return []\n\n    result = []\n    try:\n        p = Path(directory_path)\n        files = os.scandir(p)\n        for file in files:\n            creation_time = datetime.fromtimestamp(file.stat().st_ctime, timezone.utc)\n            modification_time = datetime.fromtimestamp(\n                file.stat().st_mtime, timezone.utc\n            )\n            result.append(\n                (file.name, file.stat().st_size, creation_time, modification_time)\n            )\n    except FileNotFoundError:\n        raise ValueError(\"The directory does not exist.\")\n\n    return result", "compilation_passed": true, "time": 0.0030279159545898438, "tests_passed": false, "error": "TypeError"}
{"code": "if not directory_path:\n        return []\n\n    if not os.path.exists(directory_path):\n        raise ValueError(\"The directory does not exist.\")\n\n    result = []\n    for item in os.listdir(directory_path):\n        if os.path.isfile(os.path.join(directory_path, item)):\n            file_stats = os.stat(os.path.join(directory_path, item))\n\n            file_name = item\n            file_size = file_stats.st_size\n\n            create_time_timestamp = file_stats.st_ctime\n            create_time = datetime.fromtimestamp(\n                create_time_timestamp, tz=timezone.utc\n            ).isoformat()\n\n            modified_time_timestamp = file_stats.st_mtime\n            modified_time = datetime.fromtimestamp(\n                modified_time_timestamp, tz=timezone.utc\n            ).isoformat()\n\n            result.append((file_name, file_size, create_time, modified_time))\n    return result\n", "compilation_passed": true, "time": 0.009316682815551758, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "if not os.path.exists(directory_path):\n        raise ValueError(\"The provided directory does not exist.\")\n\n    # Get the list of files in the directory\n    file_list = os.listdir(directory_path)\n\n    result = []\n\n    # Loop through the files and gather the required data\n    for file_name in file_list:\n        # Get the full path of the file\n        file_path = os.path.join(directory_path, file_name)\n\n        # Get the file size in bytes\n        file_size = os.path.getsize(file_path)\n\n        # Get the creation time and modification time as POSIX timestamps\n        create_time = os.path.getctime(file_path)\n        modify_time = os.path.getmtime(file_path)\n\n        # Convert the POSIX timestamps to ISO format in UTC timezone\n        create_time = datetime.fromtimestamp(create_time, timezone.utc).isoformat()\n        modify_time = datetime.fromtimestamp(modify_time, timezone", "compilation_passed": false, "time": 0.0002219676971435547, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not os.path.exists(directory_path):\n        raise ValueError(f\"Directory '{directory_path}' does not exist.\")\n\n    result = []\n    for file in os.listdir(directory_path):\n        if os.path.isfile(os.path.join(directory_path, file)):\n            file_path = os.path.join(directory_path, file)\n            file_size = os.path.getsize(file_path)\n            creation_time = datetime.utcfromtimestamp(os.path.getctime(file_path)).isoformat() + 'Z'\n            modified_time = datetime.utcfromtimestamp(os.path.getmtime(file_path)).isoformat() + 'Z'\n            result.append((file, file_size, creation_time, modified_time))\n    return result", "compilation_passed": true, "time": 0.01168513298034668, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "if not os.path.exists(directory_path):\n        raise ValueError(\"Directory does not exist\")\n\n    files_info = []\n\n    for file in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, file)\n\n        if os.path.isfile(file_path):\n            file_size = os.path.getsize(file_path)\n\n            # Convert creation time to ISO format and UTC\n            creation_time = datetime.utcfromtimestamp(\n                os.path.getctime(file_path)\n            ).isoformat() + 'Z'\n\n            # Convert last modification time to ISO format and UTC\n            modification_time = datetime.utcfromtimestamp(\n                os.path.getmtime(file_path)\n            ).isoformat() + 'Z'\n\n            files_info.append((file, file_size, creation_time, modification_time))\n\n    return files_info", "compilation_passed": true, "time": 0.009307146072387695, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "if not directory_path:\n        return []\n    if not os.path.isdir(directory_path):\n        raise ValueError(\"Provided directory does not exist\")\n\n    output = []\n    for entry in os.listdir(directory_path):\n        entry_path = os.path.join(directory_path, entry)\n\n        if os.path.isfile(entry_path):\n            size_bytes = os.path.getsize(entry_path)\n\n            # Retrieve creation time\n            # Creation time might not be available on all systems\n            try:\n                create_ts = os.stat(entry_path).st_birthtime\n                create_iso_ts = datetime.fromtimestamp(\n                    create_ts, tz=timezone.utc\n                ).isoformat()\n            except AttributeError:\n                # Creation time unavailable, report last metadata change time\n                mtime = os.path.getmtime(entry_path)\n                create_iso_ts = datetime.fromtimestamp(\n                    mtime, tz=timezone.utc\n                ).", "compilation_passed": false, "time": 0.00024199485778808594, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not os.path.isdir(directory_path):\n        raise ValueError(\"The directory specified does not exist\")\n\n    # Create a Path object for the directory\n    path = Path(directory_path)\n\n    # Initialize an empty list to store the results\n    results = []\n\n    # Iterate through each file in the directory\n    for file_path in path.iterdir():\n        # Check if the path is a file and not a directory\n        if file_path.is_file():\n            # Get the file name\n            file_name = file_path.name\n\n            # Get the file size in bytes\n            file_size = file_path.stat().st_size\n\n            # Get the file creation time (UTC)\n            file_ctime = datetime.fromtimestamp(\n                file_path.stat().st_ctime, timezone.utc\n            ).isoformat()\n\n            # Get the file last modification time (UTC)\n            file_mtime = datetime.fromtimestamp(\n                file_path.stat().st_mtime, timezone.utc\n            )", "compilation_passed": true, "time": 0.002174854278564453, "tests_passed": false, "error": "TypeError"}
{"code": "if not directory_path:\n        return []\n\n    # Check if the directory exists\n    if not os.path.exists(directory_path):\n        raise ValueError(\"Directory does not exist.\")\n\n    result = []\n    for file_name in os.listdir(directory_path):\n        if os.path.isfile(os.path.join(directory_path, file_name)):\n            # Get file size in bytes\n            file_size = os.path.getsize(os.path.join(directory_path, file_name))\n\n            # Get creation time\n            create_timestamp = os.path.getctime(os.path.join(directory_path, file_name))\n            create_time = datetime.fromtimestamp(create_timestamp).astimezone(\n                timezone.utc\n            )\n\n            # Get last modification time\n            modify_timestamp = os.path.getmtime(os.path.join(directory_path, file_name))\n            modify_time = datetime.fromtimestamp(modify_timestamp).astimezone(\n                time", "compilation_passed": false, "time": 0.0002288818359375, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not os.path.isdir(directory_path):\n        raise ValueError(\"Directory not found\")\n\n    file_info_list = []\n    for file in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, file)\n\n        # Check if it is a file\n        if os.path.isfile(file_path):\n            stat = os.stat(file_path)\n            ctime = datetime.fromtimestamp(stat.st_ctime).astimezone(timezone.utc)\n            mtime = datetime.fromtimestamp(stat.st_mtime).astimezone(timezone.utc)\n\n            # Create the file info tuple\n            file_info = (file, stat.st_size, ctime.isoformat(), mtime.isoformat())\n            file_info_list.append(file_info)\n\n    return file_info_list", "compilation_passed": true, "time": 0.009299993515014648, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory_path):\n        raise ValueError(\"The specified directory does not exist\")\n\n    file_stats = []\n    for file_name in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, file_name)\n\n        if os.path.isfile(file_path):\n            file_size = os.stat(file_path).st_size\n            creation_time = datetime.fromtimestamp(os.stat(file_path).st_ctime, timezone.utc).isoformat()\n            last_modified_time = datetime.fromtimestamp(os.stat(file_path).st_mtime, timezone.utc).isoformat()\n\n            file_stats.append((file_name, file_size, creation_time, last_modified_time))\n\n    return file_stats", "compilation_passed": true, "time": 0.010197877883911133, "tests_passed": true, "error": null}
