{"code": "fruit = [name for name, _ in fruit_data]\n    unique_fruit = np.unique(fruit)\n    counts = [count for _, count in fruit_data]\n\n    total_counts = np.zeros_like(unique_fruit, dtype=np.int64)\n    for idx, name in enumerate(unique_fruit):\n        total_counts[idx] = sum(np.array(counts)[np.array(fruit) == name])\n\n    average_counts = np.zeros_like(unique_fruit, dtype=np.float64)\n    for idx, name in enumerate(unique_fruit):\n        average_counts[idx] = total_counts[idx] / sum(np.array(fruit) == name)\n\n    # return DataFrame\n    df = pd.DataFrame({\n        'Total Count': total_counts,\n        'Average Count': average_counts,\n    }, index=unique_fruit)\n    return df", "compilation_passed": true, "time": 0.0034859180450439453, "tests_passed": true, "error": null}
{"code": "if len(fruit_data) == 0:\n        return pd.DataFrame({'Total Count': [], 'Average Count': []})\n\n    # Initialize a dictionary to store the total count and average count of each fruit type\n    fruit_counts = {}\n\n    # Iterate through the list of fruits and update the fruit_counts dictionary\n    for fruit in fruit_data:\n        fruit_name = fruit[0]\n        fruit_count = fruit[1]\n        fruit_counts.setdefault(fruit_name, {'Total Count': 0, 'Average Count': 0})\n        fruit_counts[fruit_name]['Total Count'] += fruit_count\n        fruit_counts[fruit_name]['Average Count'] += fruit_count\n\n    # Convert the fruit_counts dictionary into a pandas DataFrame\n    fruit_dataframe = pd.DataFrame.from_dict(fruit_counts, orient='index')\n\n    # Calculate the Average Count column using the Total Count column\n    fruit_dataframe['Average Count'] /= np.array(fruit_dataframe['Total Count'])\n\n    return fruit_dataframe", "compilation_passed": true, "time": 0.002663850784301758, "tests_passed": true, "error": null}
{"code": "if not fruit_data:\n        return pd.DataFrame(columns=[\"Total Count\", \"Average Count\"])\n    fruits = {}\n    for fruit in fruit_data:\n        name, count = fruit\n        fruits.setdefault(name, []).append(count)\n    for name, counts in fruits.items():\n        fruits[name] = pd.Series(counts)\n    return pd.DataFrame(\n        {\n            \"Total Count\": fruits.values().sum(),\n            \"Average Count\": fruits.values().mean(),\n        }\n    ).T.rename_axis(fruit_data[0][0])", "compilation_passed": true, "time": 0.0016167163848876953, "tests_passed": false, "error": "AttributeError"}
{"code": "if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    # initialize dictionaries to store fruit counts\n    fruit_counts = {}\n    fruit_averages = {}\n\n    # iterate over each fruit and its count in fruit_data\n    for fruit in fruit_data:\n        # if the fruit is not already in the dictionary, add it and set the count to 0\n        fruit_counts.setdefault(fruit[0], 0)\n        # add the count for the current fruit to the total count for its type\n        fruit_counts[fruit[0]] += fruit[1]\n\n    # convert fruit_counts to a numpy array and calculate the average\n    fruit_np = np.array([fruit_counts[x] for x in fruit_counts])\n    fruit_averages = fruit_np / len(fruit_data)\n\n    # create a pandas DataFrame with the total counts and averages\n    report = pd.DataFrame({'Total Count': fruit_np}, index=fruit_counts.keys())\n    report['Average Count'] = fruit_averages\n    return report", "compilation_passed": true, "time": 0.0025429725646972656, "tests_passed": true, "error": null}
{"code": "if len(fruit_data) == 0:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    df = pd.DataFrame(fruit_data, columns=['fruit name', 'fruit count'])\n    fruit_groups = df.groupby('fruit name')\n    fruit_totals = fruit_groups['fruit count'].sum()\n    fruit_averages = fruit_groups['fruit count'].mean()\n    return pd.concat([fruit_totals, fruit_averages], axis=1, sort=False).rename(columns={'fruit count': 'Total Count', 'fruit count.1': 'Average Count'})", "compilation_passed": true, "time": 0.002889871597290039, "tests_passed": true, "error": null}
{"code": "if not fruit_data:\n        return pd.DataFrame(\n            data=None, columns=[\"Total Count\", \"Average Count\"]\n        )\n\n    df = pd.DataFrame(fruit_data, columns=[\"Fruit\", \"Count\"])\n    grouped_counts = df.groupby(\"Fruit\", as_index=False)[\"Count\"].agg(\n        [\"sum\", \"mean\"]\n    )\n    return grouped_counts.rename(\n        columns={\n            \"sum\": \"Total Count\",\n            \"mean\": \"Average Count\",\n        }\n    )", "compilation_passed": true, "time": 0.0022618770599365234, "tests_passed": true, "error": null}
{"code": "# Check if the input is an empty list\n    if not fruit_data:\n        return pd.DataFrame()\n\n    # Create a dictionary to store the counts for each fruit\n    fruit_counts = {}\n\n    # Iterate through the fruit data and update the counts\n    for fruit in fruit_data:\n        fruit_name, count = fruit\n        if fruit_name in fruit_counts:\n            fruit_counts[fruit_name] += count\n        else:\n            fruit_counts[fruit_name] = count\n\n    # Convert the dictionary into a pandas DataFrame with two columns: 'Total Count' and 'Average Count'\n    fruit_report = pd.DataFrame(\n        {\"Total Count\": list(fruit_counts.values())}, index=list(fruit_counts.keys())\n    )\n    fruit_report[\"Average Count\"] = np.round(\n        fruit_report[\"Total Count\"] / len(fruit_data)\n    )\n\n    return fruit_report", "compilation_passed": true, "time": 0.0024492740631103516, "tests_passed": true, "error": null}
{"code": "if len(fruit_data) == 0:\n        return pd.DataFrame(columns=[\"Total Count\", \"Average Count\"])\n    else:\n        fruit_dict = {}\n        for name, count in fruit_data:\n            fruit_dict[name] = fruit_dict.get(name, []) + [count]\n        for name in fruit_dict:\n            fruit_dict[name] = np.array(fruit_dict[name])\n        total_counts = [np.sum(fruit_dict[name]) for name in fruit_dict]\n        avg_counts = [np.mean(fruit_dict[name]) for name in fruit_dict]\n        fruit_report = pd.DataFrame(\n            {\n                \"Total Count\": total_counts,\n                \"Average Count\": avg_counts,\n            }\n        )\n        fruit_report.index = [name for name in fruit_dict]\n        return fruit_report", "compilation_passed": true, "time": 0.003815889358520508, "tests_passed": true, "error": null}
{"code": "# if no data, return empty DataFrame\n    if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    # create an empty DataFrame with columns for total count and average count\n    report = pd.DataFrame(columns=['Total Count', 'Average Count'], index=pd.Index([], name='Fruit'))\n\n    # iterate through the input data and populate the report DataFrame\n    for fruit_type, fruit_count in fruit_data:\n        if fruit_type not in report.index:\n            # if the fruit is not yet in the DataFrame, add a new row\n            report.loc[fruit_type, 'Total Count'] = 0\n            report.loc[fruit_type, 'Average Count'] = 0\n        report.loc[fruit_type, 'Total Count'] += fruit_count\n        report.loc[fruit_type, 'Average Count'] = report.loc[fruit_type, 'Total Count'] / len(report.loc[fruit_type, 'Total Count'])\n\n    return report", "compilation_passed": true, "time": 0.001878976821899414, "tests_passed": false, "error": "TypeError"}
{"code": "if len(fruit_data) == 0:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    fruit_names = set([fruit for fruit, _ in fruit_data])\n\n    total_counts = {fruit: 0 for fruit in fruit_names}\n    for fruit, count in fruit_data:\n        total_counts[fruit] += count\n\n    report = pd.DataFrame({'Total Count': total_counts.values()}, index=total_counts.keys())\n    report['Average Count'] = report['Total Count'] / np.where(report.index == 'banana', 3, 1)\n\n    return report", "compilation_passed": true, "time": 0.0025467872619628906, "tests_passed": true, "error": null}
{"code": "if not fruit_data:\n        return pd.DataFrame({'Total Count': [], 'Average Count': []}, index=pd.Index([], name='Fruit'))\n\n    counts = {}\n    fruit_set = set()\n\n    for fruit_count in fruit_data:\n        fruit = fruit_count[0]\n        count = fruit_count[1]\n\n        fruit_set.add(fruit)\n        counts[fruit] = counts.get(fruit, 0) + count\n\n    total_counts = [counts[fruit] for fruit in fruit_set]\n    avg_counts = [counts[fruit] / len(fruit_data) for fruit in fruit_set]\n\n    fruit = list(fruit_set)\n    total_counts = np.array(total_counts)\n    avg_counts = np.array(avg_counts)\n\n    return pd.DataFrame({'Total Count': total_counts, 'Average Count': avg_counts}, index=fruit)", "compilation_passed": true, "time": 0.0023927688598632812, "tests_passed": true, "error": null}
{"code": "# If fruit_data is empty, return an empty DataFrame\n    if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    # Create a list of tuples with fruit name as the key and count as the value\n    fruits = [(f, c) for f, c in fruit_data]\n\n    # Create a pandas DataFrame from the list of tuples\n    df = pd.DataFrame(fruits, columns=['Fruit', 'Count'])\n\n    # Group by fruit name and sum the counts within each group\n    fruit_counts = df.groupby('Fruit').sum()\n\n    # Calculate the total count and average count for each fruit\n    fruit_counts['Total Count'] = fruit_counts['Count']\n    fruit_counts['Average Count'] = fruit_counts['Count'] / fruit_counts['Count'].count()\n\n    return fruit_counts[['Total Count', 'Average Count']]", "compilation_passed": true, "time": 0.002672910690307617, "tests_passed": true, "error": null}
{"code": "# check if fruit_data is an empty list, if so, return an empty DataFrame\n    if fruit_data == []:\n        return pd.DataFrame()\n\n    # create a list of tuples to use to create the pandas DataFrame\n    results_list = []\n\n    # create a dictionary to store counts for each fruit\n    fruit_count = {}\n\n    # loop through each fruit tuple in fruit_data and add the count to the fruit_count dict\n    for fruit in fruit_data:\n        if fruit[0] in fruit_count:\n            fruit_count[fruit[0]] += fruit[1]\n        else:\n            fruit_count[fruit[0]] = fruit[1]\n\n    # create a list of tuples from the fruit_count dictionary to use to create a DataFrame\n    for key, value in fruit_count.items():\n        results_list.append((key, value))\n\n    # convert the results list into a pandas DataFrame\n    fruit_df = pd.DataFrame(results_list, columns=['Fruit','Total Count'])\n\n    # calculate the average counts for each fruit", "compilation_passed": true, "time": 0.001644134521484375, "tests_passed": false, "error": "AttributeError"}
{"code": "# if list is empty return an empty dataframe\n    if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n    # create a dictionary to store the total count and the average count of each fruit\n    fruit_counts = {}\n\n    # loop over the list of fruit data\n    for fruit, count in fruit_data:\n        # if the fruit is not in the dictionary, initialize its total and average count to the current count\n        if fruit not in fruit_counts:\n            fruit_counts[fruit] = {'Total Count': count, 'Average Count': count}\n        # otherwise, add the count to the total count and calculate the new average count\n        else:\n            fruit_counts[fruit]['Total Count'] += count\n            fruit_counts[fruit]['Average Count'] = np.mean([fruit_counts[fruit]['Average Count'], count])\n\n    # create a pandas DataFrame from the dictionary\n    fruit_report = pd.DataFrame.from_dict(fruit_counts, orient='index')\n\n    # set the index name to 'Fruit'\n    fruit_report.index.name = '", "compilation_passed": false, "time": 9.489059448242188e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "if fruit_data:\n        fruit_counts = {}\n        for fruit in fruit_data:\n            fruit_name, fruit_count = fruit\n            if fruit_name not in fruit_counts:\n                fruit_counts[fruit_name] = []\n            fruit_counts[fruit_name].append(fruit_count)\n        total_counts = {}\n        average_counts = {}\n        for fruit_name, fruit_counts in fruit_counts.items():\n            total_counts[fruit_name] = sum(fruit_counts)\n            average_counts[fruit_name] = np.mean(fruit_counts)\n        report = pd.DataFrame.from_dict({'Total Count': total_counts, 'Average Count': average_counts})\n        return report\n    else:\n        return pd.DataFrame({'Total Count': [], 'Average Count': []})", "compilation_passed": true, "time": 0.0036420822143554688, "tests_passed": true, "error": null}
{"code": "# create empty dictionary to store fruit counts\n    fruit_counts = dict()\n\n    # add counts to dictionary\n    for fruit in fruit_data:\n        fruit_counts.setdefault(fruit[0], list())\n        fruit_counts[fruit[0]].append(fruit[1])\n\n    # create dictionary of sum and average counts\n    fruit_results = dict()\n    for fruit in fruit_counts:\n        fruit_results[fruit] = {'Total Count': sum(fruit_counts[fruit]),\n                                'Average Count': np.mean(fruit_counts[fruit])}\n\n    # create pandas dataframe from dictionary\n    return pd.DataFrame.from_dict(fruit_results, orient='index')", "compilation_passed": true, "time": 0.0034379959106445312, "tests_passed": true, "error": null}
{"code": "# return empty dataframe if fruit_data is an empty list\n    if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    fruit_counts = {}\n\n    # iterate over each fruit and update its count in fruit_counts dictionary\n    for fruit, count in fruit_data:\n        if fruit in fruit_counts:\n            fruit_counts[fruit][0] += count\n            fruit_counts[fruit][1] += 1\n        else:\n            fruit_counts[fruit] = [count, 1]\n\n    # create a pandas dataframe using fruit_counts dictionary and calculate total count and average count for each fruit\n    report = pd.DataFrame(fruit_counts, index=['Total Count', 'Average Count'])\n    report['Total Count'] = report['Total Count'].astype(np.int64)\n    report['Average Count'] = report['Average Count'].astype(np.float64)\n\n    # transpose the dataframe to have each fruit as a row instead of each category as a row\n    report = report.T\n\n    return report\n\n", "compilation_passed": true, "time": 0.0018019676208496094, "tests_passed": false, "error": "KeyError"}
{"code": "if not fruit_data:\n        return pd.DataFrame()\n\n    fruit_dict = {}\n    fruit_types = []\n\n    # Calculate total counts for each fruit\n    for fruit in fruit_data:\n        fruit_name = fruit[0]\n        if fruit_name in fruit_dict:\n            fruit_dict[fruit_name] += fruit[1]\n        else:\n            fruit_dict[fruit_name] = fruit[1]\n            fruit_types.append(fruit_name)\n\n    # Sort fruit types alphabetically\n    fruit_types.sort()\n\n    # Create a dictionary to hold the counts and average counts\n    count_dict = {}\n    for fruit in fruit_types:\n        total = fruit_dict[fruit]\n        count_dict[fruit] = {'Total Count': total, 'Average Count': total}\n\n    # Convert count_dict into a pandas DataFrame\n    df = pd.DataFrame.from_dict(count_dict, orient='index')\n    return df", "compilation_passed": true, "time": 0.0022618770599365234, "tests_passed": true, "error": null}
{"code": "if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    fruit_dict = {}\n    for fruit, count in fruit_data:\n        if fruit in fruit_dict:\n            fruit_dict[fruit][0] += count\n            fruit_dict[fruit][1] += 1\n        else:\n            fruit_dict[fruit] = [count, 1]\n\n    total_counts = [fruit_dict[fruit][0] for fruit in fruit_dict]\n    avg_counts = [fruit_dict[fruit][0]/fruit_dict[fruit][1] for fruit in fruit_dict]\n\n    fruit_counts = np.array([total_counts, avg_counts]).T\n    return pd.DataFrame(fruit_counts, index=list(fruit_dict.keys()), columns=['Total Count', 'Average Count'])", "compilation_passed": true, "time": 0.003383159637451172, "tests_passed": true, "error": null}
{"code": "if fruit_data:\n        # Convert the list of tuples to a Pandas DataFrame\n        fruit_dataframe = pd.DataFrame(fruit_data, columns=[\"Fruit Name\", \"Count\"])\n        # Group the dataframe by the fruit name and calculate the total count and the average count for each group\n        grouped = fruit_dataframe.groupby('Fruit Name')\n        results = grouped.agg({'Count': ['sum', 'mean']}).round(2)\n        results.columns = ['Total Count', 'Average Count']\n        # Return the results DataFrame\n        return results\n    else:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])", "compilation_passed": true, "time": 0.002537965774536133, "tests_passed": true, "error": null}
{"code": "if len(fruit_data) == 0:\n        return pd.DataFrame({\"Total Count\": np.array([], dtype=int), \"Average Count\": np.array([], dtype=float)})\n\n    result = {}\n\n    for tuples in fruit_data:\n        fruit, count = tuples\n        if fruit in result:\n            result[fruit] += count\n        else:\n            result[fruit] = count\n\n    result_df = pd.DataFrame.from_dict(result, orient='index', columns=['Total Count'])\n    result_df['Average Count'] = result_df['Total Count'] / result_df['Total Count'].count()\n\n    return result_df", "compilation_passed": true, "time": 0.002595186233520508, "tests_passed": true, "error": null}
{"code": "if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    fruit_dict = {}\n    fruit_list = [i[0] for i in fruit_data]\n    for fruit in fruit_list:\n        if fruit not in fruit_dict:\n            fruit_dict[fruit] = []\n\n    for fruit, count in fruit_data:\n        fruit_dict[fruit].append(count)\n\n    total_counts = [np.sum(fruit_dict[fruit]) for fruit in fruit_dict]\n    average_counts = [np.mean(fruit_dict[fruit]) for fruit in fruit_dict]\n    return pd.DataFrame({\n        'Total Count': total_counts,\n        'Average Count': average_counts\n    }, index=list(fruit_dict.keys()))", "compilation_passed": true, "time": 0.003710031509399414, "tests_passed": true, "error": null}
{"code": "# Create an empty dataFrame with the desired columns\n    fruit_report = pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    if not fruit_data:\n        return fruit_report\n\n    # Use pandas' groupby method to sum and count each fruit's counts\n    fruit_report = pd.DataFrame(fruit_data, columns=['Fruit', 'Count'])\n    fruit_report = fruit_report.groupby(['Fruit'])['Count'].agg(['sum', 'count']).reset_index()\n    fruit_report.rename(columns={'sum': 'Total Count', 'count': 'Fruit Count'}, inplace=True)\n\n    # Calculate the average count and add it as a new column\n    fruit_report['Average Count'] = np.floor(fruit_report['Total Count'] / fruit_report['Fruit Count'])\n    fruit_report.drop(columns=['Fruit Count'], inplace=True)\n\n    # Set the fruit as the index of the dataFrame to improve readability\n    fruit_report = fruit_report.set_index('Fruit')\n\n    #", "compilation_passed": true, "time": 0.002716064453125, "tests_passed": false, "error": "AttributeError"}
{"code": "if not fruit_data:\n        # return empty dataframe if list is empty\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    # initialize dictionary to store counts for each fruit\n    counts_dict = {}\n    # loop through each tuple in the list\n    for item in fruit_data:\n        fruit = item[0]\n        count = item[1]\n        # if the fruit already exists in the dictionary, increment its count\n        if fruit in counts_dict:\n            counts_dict[fruit] += count\n        # if not, add the fruit to the dictionary with its count\n        else:\n            counts_dict[fruit] = count\n\n    # convert dictionary to pandas dataframe\n    fruit_counts = pd.DataFrame.from_dict(counts_dict, orient='index', columns=['Total Count'])\n    # calculate average count for each fruit\n    fruit_counts['Average Count'] = fruit_counts['Total Count'] / len(fruit_counts)\n    return fruit_counts", "compilation_passed": true, "time": 0.002438783645629883, "tests_passed": true, "error": null}
{"code": "if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n    data = [{'name': name, 'count': count} for name, count in fruit_data]\n    df = pd.DataFrame(data)\n    fruit_counts = df.groupby('name')['count'].agg(['sum', 'mean']).round()\n    fruit_counts = fruit_counts.reset_index()\n    fruit_counts = fruit_counts.rename(columns={'sum': 'Total Count', 'mean': 'Average Count'})\n    return fruit_counts.set_index('name')", "compilation_passed": true, "time": 0.002610921859741211, "tests_passed": true, "error": null}
{"code": "# create empty dictionary\n    fruit_dict = {}\n\n    # go through each fruit in fruit_data, add its count to the dictionary\n    for fruit, count in fruit_data:\n        fruit_dict.setdefault(fruit, 0)\n        fruit_dict[fruit] += count\n\n    # create empty dictionary to hold total count and average count\n    fruit_counts = {'Total Count': [], 'Average Count': []}\n\n    # add total count and average count for each fruit to fruit_counts dictionary\n    for fruit, total in fruit_dict.items():\n        fruit_counts['Total Count'].append(total)\n        fruit_counts['Average Count'].append(total / fruit_data.count(fruit))\n\n    # create a pandas DataFrame with fruit_counts dictionary\n    fruit_counts_df = pd.DataFrame(fruit_counts, index=fruit_dict.keys())\n    fruit_counts_df.columns = ['Total Count', 'Average Count']\n\n    # return pandas DataFrame\n    return fruit_counts_df", "compilation_passed": true, "time": 0.0014636516571044922, "tests_passed": false, "error": "ZeroDivisionError"}
{"code": "# Check if fruit_data is an empty list\n    if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    # Initialize an empty dictionary to hold the counts for each fruit\n    fruit_counts = {}\n\n    # Loop through the list of tuples\n    for fruit_name, count in fruit_data:\n        # If the fruit is already in the dictionary, add the count to the existing value\n        if fruit_name in fruit_counts:\n            fruit_counts[fruit_name] += count\n        # If the fruit is not yet in the dictionary, add it and initialize its count\n        else:\n            fruit_counts[fruit_name] = count\n\n    # Create a pandas DataFrame with two columns, one for the total count and one for the average count\n    report = pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    # Loop through the dictionary and fill in the data for each fruit\n    for fruit_name, count in fruit_counts.items():\n        report.loc[fruit_name, 'Total Count'] = count\n        report.loc[fruit_", "compilation_passed": false, "time": 0.0002288818359375, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Check if fruit_data is an empty list, return an empty dataFrame if so\n    if not fruit_data:\n        return pd.DataFrame()\n    # Create a dataframe from the input list\n    df = pd.DataFrame(fruit_data, columns=['fruit', 'count'])\n    # Group the dataframe by fruit and calculate the total and average count for each fruit\n    df = df.groupby('fruit')['count'].agg(['sum', 'mean'])\n    # Rename the columns\n    df.columns = ['Total Count', 'Average Count']\n    # Set the index to the fruit name\n    df.set_index('fruit', inplace=True)\n\n    return df", "compilation_passed": true, "time": 0.002094745635986328, "tests_passed": false, "error": "KeyError"}
{"code": "if not fruit_data:\n        return pd.DataFrame(columns=[\"Total Count\", \"Average Count\"])\n\n    fruit_dict = {}\n    for fruit_type, count in fruit_data:\n        if fruit_type in fruit_dict:\n            fruit_dict[fruit_type]['Total Count'] += count\n            fruit_dict[fruit_type]['Average Count'] = np.mean(fruit_dict[fruit_type]['Average Count'])\n        else:\n            fruit_dict[fruit_type] = {'Total Count': count, 'Average Count': count}\n\n    return pd.DataFrame(fruit_dict).T", "compilation_passed": true, "time": 0.004294872283935547, "tests_passed": true, "error": null}
{"code": "if not fruit_data:\n        return pd.DataFrame(columns=['Total Count', 'Average Count'])\n\n    fruit_dict = {}\n\n    for item in fruit_data:\n        fruit_name = item[0]\n        fruit_count = item[1]\n        if fruit_name not in fruit_dict:\n            fruit_dict[fruit_name] = []\n        fruit_dict[fruit_name].append(fruit_count)\n\n    fruit_count_dict = {}\n\n    for key, value in fruit_dict.items():\n        fruit_count_dict[key] = sum(value)\n\n    # Calculate total count for each type of fruit\n    fruit_count_dict = {key: value for key, value in fruit_count_dict.items() if value > 0}\n    fruit_count_df = pd.DataFrame(fruit_count_dict.items(), columns=['Fruit', 'Total Count'])\n\n    # Calculate average count for each type of fruit\n    fruit_avg_counts = {}\n    for fruit_name, fruit_counts in fruit_dict.items():\n        avg", "compilation_passed": true, "time": 0.0016431808471679688, "tests_passed": false, "error": "NameError"}
