{"code": "# Create the backup directory if it does not exist\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Get a list of all JSON files in the directory\n    files_to_copy = [file for file in os.listdir(directory) if file.endswith('.json')]\n\n    # Copy each file to the backup directory\n    copied_files = []\n    for file in files_to_copy:\n        src = os.path.join(directory, file)\n        dest = os.path.join(backup_directory, file)\n        shutil.copy(src, dest)\n        copied_files.append(dest)\n\n    return copied_files", "compilation_passed": true, "time": 0.0034770965576171875, "tests_passed": true, "error": null}
{"code": "try:\n        if not os.path.exists(backup_directory):\n            os.makedirs(backup_directory)\n\n        json_files = [\n            os.path.join(root, file)\n            for root, dirs, files in os.walk(directory)\n            for file in files\n            if file.endswith(\".json\")\n        ]\n\n        copied_files = []\n        for file in json_files:\n            shutil.copy2(file, backup_directory)\n            copied_files.append(os.path.join(backup_directory, os.path.basename(file)))\n\n        return copied_files\n\n    except Exception as e:\n        raise RuntimeError(\"Failed to backup JSON files\") from e", "compilation_passed": true, "time": 0.0024666786193847656, "tests_passed": true, "error": null}
{"code": "file_names = os.listdir(directory)\n    backup_file_names = []\n    for file_name in file_names:\n        if file_name.endswith(\".json\"):\n            source_path = os.path.join(directory, file_name)\n            dest_path = os.path.join(backup_directory, file_name)\n            shutil.copy2(source_path, dest_path)\n            backup_file_names.append(dest_path)\n    return backup_file_names", "compilation_passed": true, "time": 0.0012617111206054688, "tests_passed": true, "error": null}
{"code": "# Check if backup directory exists and create it if not\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Initialize list to store file paths of copied files\n    copied_files = []\n\n    # Iterate over files in the directory\n    for file_name in os.listdir(directory):\n        file_path = os.path.join(directory, file_name)\n\n        # Check if the file is a JSON file\n        if file_path.endswith(\".json\"):\n            # Copy the JSON file to the backup directory\n            backup_path = os.path.join(backup_directory, file_name)\n            shutil.copy2(file_path, backup_path)\n            copied_files.append(backup_path)\n\n    # Return the list of copied file paths\n    return copied_files", "compilation_passed": true, "time": 0.0033919811248779297, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.mkdir(backup_directory)\n    file_names = os.listdir(directory)\n    json_files = []\n    for file in file_names:\n        if file.endswith('.json'):\n            file_path = os.path.join(directory, file)\n            shutil.copy(file_path, backup_directory)\n            json_files.append(file)\n    return os.listdir(backup_directory)", "compilation_passed": true, "time": 0.003323793411254883, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n    file_paths = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.endswith('.json'):\n                src = os.path.join(root, file)\n                dst = os.path.join(backup_directory, file)\n                shutil.copy(src, dst)\n                file_paths.append(dst)\n    return file_paths", "compilation_passed": true, "time": 0.0022230148315429688, "tests_passed": true, "error": null}
{"code": "# Create the backup directory if it doesn't exist\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Get the list of files in the specified directory\n    files = os.listdir(directory)\n\n    # Copy the JSON files to the backup directory\n    copied_files = []\n    for file in files:\n        if file.endswith('.json'):\n            source_path = os.path.join(directory, file)\n            destination_path = os.path.join(backup_directory, file)\n            shutil.copy2(source_path, destination_path)\n            copied_files.append(destination_path)\n\n    return copied_files", "compilation_passed": true, "time": 0.0032291412353515625, "tests_passed": true, "error": null}
{"code": "# Initialize a list to store the paths of the JSON files\n    json_files = []\n    # Check if the source directory exists\n    if os.path.exists(directory):\n        # Get a list of all the files in the source directory\n        files = os.listdir(directory)\n        # Loop through each file in the source directory\n        for file in files:\n            # Check if the file is a JSON file\n            if file.endswith(\".json\"):\n                # Get the path of the file in the source directory\n                file_path = os.path.join(directory, file)\n                # Check if the backup directory exists\n                if not os.path.exists(backup_directory):\n                    # Create the backup directory\n                    os.makedirs(backup_directory)\n                # Copy the JSON file to the backup directory\n                shutil.copy(file_path, backup_directory)\n                # Append the path of the copied file in the backup directory to the list of JSON files\n                json_files.append(os.path.join(backup_directory, file))\n    return json_files", "compilation_passed": true, "time": 0.00121307373046875, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    copied_files = []\n\n    for filename in os.listdir(directory):\n        if filename.endswith('.json'):\n            src_path = os.path.join(directory, filename)\n            dst_path = os.path.join(backup_directory, filename)\n            shutil.copy(src_path, dst_path)\n            copied_files.append(dst_path)\n\n    return copied_files", "compilation_passed": true, "time": 0.003287076950073242, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.mkdir(backup_directory)\n\n    json_files = [file for file in os.listdir(directory) if file.endswith(\".json\")]\n\n    copied_files = []\n    for file in json_files:\n        shutil.copy(os.path.join(directory, file), os.path.join(backup_directory, file))\n        copied_files.append(os.path.join(backup_directory, file))\n\n    return copied_files", "compilation_passed": true, "time": 0.0032329559326171875, "tests_passed": true, "error": null}
{"code": "# Create the backup directory if it doesn't exist\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Scan the specified directory for JSON files\n    json_files = [file for file in os.listdir(directory) if file.endswith('.json')]\n\n    # Copy each JSON file to the backup directory\n    copied_files = []\n    for file in json_files:\n        source = os.path.join(directory, file)\n        destination = os.path.join(backup_directory, file)\n        shutil.copy(source, destination)\n        copied_files.append(destination)\n\n    return copied_files", "compilation_passed": true, "time": 0.003253936767578125, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    copied_files = []\n    for filename in os.listdir(directory):\n        if filename.endswith('.json'):\n            src_file = os.path.join(directory, filename)\n            dst_file = os.path.join(backup_directory, filename)\n            shutil.copy(src_file, dst_file)\n            copied_files.append(dst_file)\n    return copied_files", "compilation_passed": true, "time": 0.003143310546875, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n    copied_files = []\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for file in filenames:\n            if file.endswith('.json'):\n                src = os.path.join(dirpath, file)\n                dst = os.path.join(backup_directory, file)\n                shutil.copy(src, dst)\n                copied_files.append(dst)\n    return copied_files", "compilation_passed": true, "time": 0.002192258834838867, "tests_passed": true, "error": null}
{"code": "# Create backup directory if it does not exist\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Initialize list to store paths of copied files\n    copied_files = []\n\n    # Scan directory for JSON files and copy them to backup directory\n    for file in os.listdir(directory):\n        if file.endswith('.json'):\n            src_path = os.path.join(directory, file)\n            dst_path = os.path.join(backup_directory, file)\n            shutil.copy2(src_path, dst_path)\n            copied_files.append(dst_path)\n\n    return copied_files", "compilation_passed": true, "time": 0.0032927989959716797, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.mkdir(backup_directory)\n    files_list = [os.path.join(backup_directory, file)\n                  for file in os.listdir(directory) if file.endswith('.json')]\n    for file_path in files_list:\n        shutil.copy(file_path, os.path.join(backup_directory,\n                   os.path.basename(file_path)))\n    return files_list", "compilation_passed": true, "time": 0.002775907516479492, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create the backup directory if it doesn't exist\n    os.makedirs(backup_directory, exist_ok=True)\n\n    # Find all JSON files in the directory and its subdirectories\n    json_files = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.endswith('.json'):\n                json_files.append(os.path.join(root, file))\n\n    # Copy each JSON file to the backup directory\n    copied_files = []\n    for file in json_files:\n        shutil.copy2(file, backup_directory)\n        copied_files.append(os.path.join(backup_directory, os.path.basename(file)))\n\n    return copied_files", "compilation_passed": true, "time": 0.002502918243408203, "tests_passed": true, "error": null}
{"code": "copied_files = []\n    if not os.path.exists(backup_directory):\n        os.mkdir(backup_directory)\n    for file in os.listdir(directory):\n        if file.endswith(\".json\"):\n            shutil.copy(os.path.join(directory, file), os.path.join(backup_directory, file))\n            copied_files.append(os.path.join(backup_directory, file))\n    return copied_files", "compilation_passed": true, "time": 0.003244161605834961, "tests_passed": true, "error": null}
{"code": "# Initialize a list to store the copied files\n    copied_files = []\n\n    # Check if the backup directory exists, if not, create it\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Iterate over files in the directory and copy JSON files to the backup directory\n    for file_name in os.listdir(directory):\n        if file_name.endswith('.json'):\n            source_file = os.path.join(directory, file_name)\n            target_file = os.path.join(backup_directory, file_name)\n            shutil.copy(source_file, target_file)\n            copied_files.append(target_file)\n\n    # Return the list of copied files\n    return copied_files", "compilation_passed": true, "time": 0.0037009716033935547, "tests_passed": true, "error": null}
{"code": "# If the backup directory doesn't exist, create it\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # List the JSON files in the source directory\n    json_files = [file for file in os.listdir(directory) if file.endswith('.json')]\n\n    # Copy the JSON files to the backup directory\n    copied_files = []\n    for file in json_files:\n        source = os.path.join(directory, file)\n        destination = os.path.join(backup_directory, file)\n        shutil.copy2(source, destination)\n        copied_files.append(destination)\n\n    return copied_files", "compilation_passed": true, "time": 0.004678964614868164, "tests_passed": true, "error": null}
{"code": "# Create backup directory if it does not exist\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Initialize a list to store the paths to the copied files\n    copied_files = []\n\n    # Walk through the source directory and find JSON files\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.endswith('.json'):\n                # Construct the source and destination file paths\n                source_file = os.path.join(root, file)\n                destination_file = os.path.join(backup_directory, file)\n\n                # Copy the file and store the destination path in the list\n                shutil.copy(source_file, destination_file)\n                copied_files.append(destination_file)\n\n    return copied_files", "compilation_passed": true, "time": 0.0027840137481689453, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    files = [file for file in os.listdir(directory) if file.endswith('.json')]\n    copied_files = [os.path.join(backup_directory, file) for file in files]\n\n    for source, destination in zip(files, copied_files):\n        shutil.copyfile(os.path.join(directory, source), os.path.join(destination))\n\n    return copied_files", "compilation_passed": true, "time": 0.003607034683227539, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    json_files = []\n    for file in os.listdir(directory):\n        if file.endswith(\".json\"):\n            source = os.path.join(directory, file)\n            destination = os.path.join(backup_directory, file)\n            shutil.copy(source, destination)\n            json_files.append(destination)\n\n    return json_files", "compilation_passed": true, "time": 0.003228902816772461, "tests_passed": true, "error": null}
{"code": "# Create backup directory if it does not exist\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # List all files in the source directory\n    files = os.listdir(directory)\n\n    # Filter only JSON files\n    json_files = [file for file in files if file.endswith('.json')]\n\n    # Copy each JSON file to the backup directory\n    copied_files = []\n    for file in json_files:\n        src_path = os.path.join(directory, file)\n        dst_path = os.path.join(backup_directory, file)\n        shutil.copy(src_path, dst_path)\n        copied_files.append(dst_path)\n\n    return copied_files", "compilation_passed": true, "time": 0.0032567977905273438, "tests_passed": true, "error": null}
{"code": "file_list = []\n\n    # Check if the backup directory exists\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Check if the source directory exists\n    if os.path.exists(directory):\n        # Create a list of all JSON files in the directory\n        file_list = [file for file in os.listdir(directory) if file.endswith('.json')]\n        for file in file_list:\n            shutil.copy(os.path.join(directory, file), os.path.join(backup_directory, file))\n\n    return file_list", "compilation_passed": true, "time": 0.0021560192108154297, "tests_passed": true, "error": null}
{"code": "# Create the backup directory if it does not exist\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # Get a list of JSON files in the source directory\n    json_files = [file for file in os.listdir(directory) if file.endswith('.json')]\n\n    # Copy each JSON file to the backup directory\n    backup_paths = []\n    for json_file in json_files:\n        src_path = os.path.join(directory, json_file)\n        dst_path = os.path.join(backup_directory, json_file)\n        shutil.copy2(src_path, dst_path)\n        backup_paths.append(dst_path)\n\n    return backup_paths", "compilation_passed": true, "time": 0.0031812191009521484, "tests_passed": true, "error": null}
{"code": "# Ensure backup directory exists\n    if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    # List of files in the backup directory\n    files = []\n\n    # Walk through the directory\n    for root, _, filenames in os.walk(directory):\n        # Filter out JSON files\n        for filename in filenames:\n            if filename.endswith(\".json\"):\n                # Construct the path to the file in the backup directory\n                new_path = os.path.join(backup_directory, filename)\n\n                # Copy the file to the backup directory\n                shutil.copyfile(os.path.join(root, filename), new_path)\n\n                # Append the path to the list of files\n                files.append(new_path)\n\n    return files", "compilation_passed": true, "time": 0.002207040786743164, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n    json_files = [f for f in os.listdir(directory) if f.endswith('.json')]\n    copied_files = []\n    for file in json_files:\n        source = os.path.join(directory, file)\n        target = os.path.join(backup_directory, file)\n        shutil.copy(source, target)\n        copied_files.append(target)\n    return copied_files", "compilation_passed": true, "time": 0.0032660961151123047, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n\n    copied_files = []\n\n    for file in os.listdir(directory):\n        if file.endswith(\".json\"):\n            source_path = os.path.join(directory, file)\n            backup_path = os.path.join(backup_directory, file)\n            shutil.copy(source_path, backup_path)\n            copied_files.append(backup_path)\n\n    return copied_files", "compilation_passed": true, "time": 0.0031850337982177734, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.makedirs(backup_directory)\n    files = [f for f in os.listdir(directory) if f.endswith('.json')]\n    backup_paths = []\n    for file in files:\n        src = os.path.join(directory, file)\n        dst = os.path.join(backup_directory, file)\n        shutil.copy(src, dst)\n        backup_paths.append(dst)\n    return backup_paths", "compilation_passed": true, "time": 0.003229856491088867, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(backup_directory):\n        os.mkdir(backup_directory)\n    # Get a list of all JSON files in the source directory and its subdirectories\n    files = [os.path.join(root, file)\n             for root, _, files in os.walk(directory)\n             for file in files if file.endswith('.json')]\n    # Copy each JSON file to the backup directory\n    copied_files = []\n    for file in files:\n        shutil.copy(file, backup_directory)\n        copied_files.append(os.path.join(backup_directory, os.path.basename(file)))\n    return copied_files", "compilation_passed": true, "time": 0.002218008041381836, "tests_passed": true, "error": null}
