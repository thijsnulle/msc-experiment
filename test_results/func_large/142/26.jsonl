{"code": "# Create figure and axes\n    fig, axs = plt.subplots(2, 1)\n\n    # Create an evenly spaced array of values on the interval [0, 2pi]\n    x = np.arange(0, 2 * np.pi, 0.1)\n\n    # Generate the sine and cosine functions\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n\n    # Plot the sine and cosine functions\n    axs[0].plot(x, y_sin, label='Sine function')\n    axs[1].plot(x, y_cos, label='Cosine function')\n\n    # Set titles and axis labels\n    axs[0].set_title('Sine function')\n    axs[1].set_title('Cosine function')\n    for ax in axs:\n        ax.set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[1].set_ylabel('cos(x)')\n\n    # Show the figure", "compilation_passed": true, "time": 0.02228403091430664, "tests_passed": false, "error": "TypeError"}
{"code": "fig, axs = plt.subplots(1, 2, figsize=(12, 5))\n\n    x = np.linspace(0, 2 * np.pi, 1000)\n    y1 = np.sin(x)\n    y2 = np.cos(x)\n\n    # Plot the sine function\n    axs[0].plot(x, y1, label=\"Sine function\")\n    axs[0].set_title(\"Sine Function\")\n    axs[0].set_xlabel(\"x\")\n    axs[0].set_ylabel(\"sin(x)\")\n    axs[0].grid(True)\n\n    # Plot the cosine function\n    axs[1].plot(x, y2, label=\"Cosine function\")\n    axs[1].set_title(\"Cosine Function\")\n    axs[1].set_xlabel(\"x\")\n    axs[1].set_ylabel(\"cos(x)\")\n    axs[1", "compilation_passed": false, "time": 0.00026106834411621094, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Generate x values for plotting\n    x = np.linspace(0, 2 * np.pi, 100)\n\n    # Create a figure and subplots\n    fig, axs = plt.subplots(2, 1, figsize=(8, 6))\n\n    # Plot the sine function\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].legend()\n\n    # Plot the cosine function\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n    axs[1].legend()\n\n    # Display the plot\n    plt.tight_layout()\n\n    # Return the figure and axes objects\n    return fig, axs", "compilation_passed": true, "time": 0.14785099029541016, "tests_passed": true, "error": null}
{"code": "x = np.linspace(0, 2*np.pi, 100)\n    y1 = np.sin(x)\n    y2 = np.cos(x)\n\n    fig, axs = plt.subplots(2)\n    axs[0].plot(x, y1)\n    axs[0].set_title(\"Sine function\")\n    axs[0].set_xlabel(\"x\")\n    axs[0].set_ylabel(\"sin(x)\")\n\n    axs[1].plot(x, y2)\n    axs[1].set_title(\"Cosine function\")\n    axs[1].set_xlabel(\"x\")\n    axs[1].set_ylabel(\"cos(x)\")\n\n    return fig, axs", "compilation_passed": true, "time": 0.3297600746154785, "tests_passed": true, "error": null}
{"code": "# Create an empty figure and axes\n    fig, axs = plt.subplots(2, 1, figsize=(10, 7))\n\n    # Get x-axis values\n    x = np.linspace(0, 2 * np.pi, 100)\n\n    # Plot sin(x)\n    axs[0].plot(x, np.sin(x))\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot cos(x)\n    axs[1].plot(x, np.cos(x))\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    # Adjust plot layout\n    fig.tight_layout()\n\n    return fig, axs", "compilation_passed": true, "time": 0.2623457908630371, "tests_passed": true, "error": null}
{"code": "# Generate x values\n    x = np.linspace(0, 2 * np.pi, 1000)\n\n    # Initialize Figure and Axes\n    fig, axs = plt.subplots(1, 2, figsize=(12, 6))\n    fig.tight_layout(pad=4)\n\n    # Plot sine function\n    axs[0].plot(x, np.sin(x), 'b-')\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot cosine function\n    axs[1].plot(x, np.cos(x), 'r-')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.21857404708862305, "tests_passed": true, "error": null}
{"code": "x = np.linspace(0, 2 * np.pi, 50)\n    sine = np.sin(x)\n    cosine = np.cos(x)\n\n    # Create a new figure and axes\n    fig, axs = plt.subplots(1, 2, figsize=(10, 5))\n    fig.suptitle('Sine and Cosine Functions')\n\n    # Plot Sine\n    axs[0].plot(x, sine, label='Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot Cosine\n    axs[1].plot(x, cosine, label='Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.05895090103149414, "tests_passed": true, "error": null}
{"code": "# Initialize variables\n    x = np.linspace(0, 2 * np.pi, 100)\n\n    # Initialize subplot figure and axes\n    fig, axs = plt.subplots(1, 2)\n\n    # Plot the sine function\n    axs[0].plot(x, np.sin(x))\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot the cosine function\n    axs[1].plot(x, np.cos(x))\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    # Return the figure and subplots\n    return fig, axs", "compilation_passed": true, "time": 0.0972590446472168, "tests_passed": true, "error": null}
{"code": "x = np.linspace(0, 2 * np.pi, 100)  # Generate x-axis values from 0 to 2\u03c0 with 100 points\n    y_sin = np.sin(x)  # Calculate y-axis values for sine function\n    y_cos = np.cos(x)  # Calculate y-axis values for cosine function\n\n    # Create a figure with two subplots, sharing the x-axis\n    fig, axs = plt.subplots(1, 2, sharex=True, figsize=(10, 5))\n\n    # Plot the sine function\n    axs[0].plot(x, y_sin)\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot the cosine function\n    axs[1].plot(x, y_cos)\n    axs[1].set_title('Cosine function')\n    axs[1].set_", "compilation_passed": true, "time": 0.01911783218383789, "tests_passed": false, "error": "AttributeError"}
{"code": "x = np.arange(0, 2 * np.pi, 0.1)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n\n    # Create a figure\n    fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(9, 3))\n    axs[0].plot(x, y_sin)\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[1].plot(x, y_cos)\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.09767389297485352, "tests_passed": true, "error": null}
{"code": "# Create the figure and axes\n    fig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n    # Set the number of points to generate\n    n = 1000\n\n    # Create the x-axis values\n    x = np.linspace(0, 2 * np.pi, n)\n\n    # Plot the sine function\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].set_xlim(0, 2 * np.pi)\n\n    # Plot the cosine function\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].", "compilation_passed": false, "time": 0.00024771690368652344, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Define the range of x values\n    x = np.arange(0, 2 * np.pi, 0.1)\n\n    # Create a new figure\n    fig, axs = plt.subplots(2, 1, figsize=(8, 6))\n\n    # Plot the sine function\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].legend()\n\n    # Plot the cosine function\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n    axs[1].legend()\n\n    return fig, axs", "compilation_passed": true, "time": 0.05832791328430176, "tests_passed": true, "error": null}
{"code": "x = np.linspace(0, 2*np.pi, 100)\n\n    fig, axs = plt.subplots(1, 2)\n\n    axs[0].plot(x, np.sin(x))\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    axs[1].plot(x, np.cos(x))\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.09045076370239258, "tests_passed": true, "error": null}
{"code": "# Create an array of 200 evenly spaced numbers between 0 and 2pi\n    x = np.linspace(0, 2 * np.pi, 200)\n\n    # Create a figure and subplots\n    fig, axs = plt.subplots(2, 1)\n\n    # Plot sine and cosine functions\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n\n    # Set plot titles and labels\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    # Set plot legends\n    axs[0].legend()\n    axs[1]", "compilation_passed": true, "time": 0.018399953842163086, "tests_passed": false, "error": "TypeError"}
{"code": "# Create figure and axes\n    fig, axs = plt.subplots(nrows=2, sharex=True)\n\n    # Plot sine function\n    x = np.linspace(0, 2*np.pi, 1000)\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot cosine function\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    plt.tight_layout()  # Adjust spacing between subplots\n    return fig, axs", "compilation_passed": true, "time": 0.5137457847595215, "tests_passed": true, "error": null}
{"code": "fig, axs = plt.subplots(2, 1, figsize=(15, 10))\n\n    # Sine\n    x = np.linspace(0, 2 * np.pi, 50)\n    y = np.sin(x)\n    axs[0].plot(x, y, linewidth=3)\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Cosine\n    x = np.linspace(0, 2 * np.pi, 50)\n    y = np.cos(x)\n    axs[1].plot(x, y, linewidth=3)\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    plt.tight_layout()\n    return fig, axs", "compilation_passed": true, "time": 0.2894859313964844, "tests_passed": true, "error": null}
{"code": "# Create a figure and subplots\n    fig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n    # Sine function plot\n    x = np.linspace(0, 2 * np.pi, 1000)\n    y_sin = np.sin(x)\n    axs[0].plot(x, y_sin, label=\"Sine function\", color=\"red\")\n    axs[0].set_xlabel(\"x\")\n    axs[0].set_ylabel(\"sin(x)\")\n\n    # Cosine function plot\n    y_cos = np.cos(x)\n    axs[1].plot(x, y_cos, label=\"Cosine function\", color=\"blue\")\n    axs[1].set_xlabel(\"x\")\n    axs[1].set_ylabel(\"cos(x)\")\n\n    # Set titles for each subplot\n    axs[0].set_title(\"Sine Function\")\n    ax", "compilation_passed": true, "time": 0.024759769439697266, "tests_passed": false, "error": "NameError"}
{"code": "x = np.linspace(0, 2 * np.pi, 1000)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n\n    fig, axs = plt.subplots(2, 1, sharex=True)\n    axs[0].plot(x, y_sin, label=\"Sine function\")\n    axs[1].plot(x, y_cos, label=\"Cosine function\")\n\n    axs[0].set_title(\"Sine and Cosine Functions\")\n\n    axs[0].set_ylabel(\"sin(x)\")\n    axs[1].set_ylabel(\"cos(x)\")\n    axs[1].set_xlabel(\"x\")\n\n    axs[0].legend()\n    axs[1].legend()\n\n    return fig, axs", "compilation_passed": true, "time": 0.024326086044311523, "tests_passed": true, "error": null}
{"code": "x = np.linspace(0, 2 * np.pi, 1000)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n\n    fig, axs = plt.subplots(2, 1, figsize=(8, 8))\n    axs[0].plot(x, y_sin)\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    axs[1].plot(x, y_cos)\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.09768414497375488, "tests_passed": true, "error": null}
{"code": "# Define the interval [0, 2\u03c0]\n    x = np.linspace(0, 2 * np.pi, 1000)\n\n    # Create the figure and subplots\n    fig, axs = plt.subplots(1, 2, figsize=(10, 6))\n\n    # Plot the sine function\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[0].set_title('Sine Function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot the cosine function\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n    axs[1].set_title('Cosine Function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    # Return the figure and axes objects\n    return fig, axs", "compilation_passed": true, "time": 0.05892491340637207, "tests_passed": true, "error": null}
{"code": "# Create an empty figure\n    fig, axs = plt.subplots()\n\n    # Define the interval [0, 2\u03c0] for x\n    x = np.linspace(0, 2 * np.pi, 100)\n\n    # Plot the sine function\n    axs.plot(x, np.sin(x), label='Sine function')\n    axs.set_xlabel('x')\n    axs.set_ylabel('sin(x)')\n\n    # Plot the cosine function\n    axs.plot(x, np.cos(x), label='Cosine function')\n    axs.set_xlabel('x')\n    axs.set_ylabel('cos(x)')\n\n    # Add a legend\n    axs.legend()\n\n    return fig, axs", "compilation_passed": true, "time": 0.01778388023376465, "tests_passed": false, "error": "TypeError"}
{"code": "# Create the figure and axes\n    fig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n    # Create x values\n    x = np.linspace(0, 2 * np.pi, 1000)\n\n    # Plot sine function\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].set_title('Sine function')\n    axs[0].legend()\n\n    # Plot cosine function\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n    axs[1].set_title('Cosine function')\n    axs[1].legend()\n\n    return fig, axs", "compilation_passed": true, "time": 0.09809422492980957, "tests_passed": true, "error": null}
{"code": "x = np.arange(0, 2 * np.pi, 0.1)\n    y = np.sin(x)\n    y1 = np.cos(x)\n\n    fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(16, 4))\n\n    axs[0].plot(x, y)\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    axs[1].plot(x, y1)\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.09149312973022461, "tests_passed": true, "error": null}
{"code": "x = np.arange(0, 2*np.pi, 0.01)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n\n    fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(12, 5))\n\n    axs[0].plot(x, y_sin)\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    axs[1].plot(x, y_cos)\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.09159398078918457, "tests_passed": true, "error": null}
{"code": "# Create an empty figure\n    fig, axs = plt.subplots(nrows=2)\n\n    # Calculate values for x\n    x = np.linspace(0, 2*np.pi, 1000)\n\n    # Generate the sine function plot\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Generate the cosine function plot\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    # Adjust the layout of subplots\n    fig.tight_layout()\n\n    return fig, axs", "compilation_passed": true, "time": 0.14517498016357422, "tests_passed": true, "error": null}
{"code": "fig, axs = plt.subplots(1, 2, figsize=(12, 6))\n    fig.tight_layout(pad=4.5, h_pad=2)\n    x = np.arange(0, 2 * np.pi, 0.1)\n    axs[0].plot(x, np.sin(x), label='Sine function')\n    axs[0].set_title('Sine Function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].legend()\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n    axs[1].set_title('Cosine Function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n    axs[1].legend()\n    return fig, axs", "compilation_passed": true, "time": 0.1374669075012207, "tests_passed": true, "error": null}
{"code": "fig, axes = plt.subplots(1, 2, figsize=(8, 6))\n    x = np.linspace(0, 2 * np.pi, 300)\n\n    axes[0].plot(x, np.sin(x))\n    axes[0].set_title('Sine function')\n    axes[0].set_xlabel('x')\n    axes[0].set_ylabel('sin(x)')\n\n    axes[1].plot(x, np.cos(x))\n    axes[1].set_title('Cosine function')\n    axes[1].set_xlabel('x')\n    axes[1].set_ylabel('cos(x)')\n\n    fig.tight_layout()\n\n    return fig, axes", "compilation_passed": true, "time": 0.25546813011169434, "tests_passed": true, "error": null}
{"code": "# Create the data to plot\n    x = np.linspace(0, 2 * np.pi, 100)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n\n    # Create the figure and axes\n    fig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n    # Plot the sine function\n    axs[0].plot(x, y_sin, label=\"Sine function\")\n    axs[0].set_title(\"Sine function\")\n    axs[0].set_xlabel(\"x\")\n    axs[0].set_ylabel(\"sin(x)\")\n\n    # Plot the cosine function\n    axs[1].plot(x, y_cos, label=\"Cosine function\")\n    axs[1].set_title(\"Cosine function\")\n    axs[1].set_xlabel(\"x\")\n    axs[1].set_ylabel(\"cos(x)\"", "compilation_passed": false, "time": 0.00028014183044433594, "tests_passed": false, "error": "SyntaxError"}
{"code": "x = np.linspace(0, 2 * np.pi, 100)\n    sine_function = np.sin(x)\n    cosine_function = np.cos(x)\n    fig, axes = plt.subplots(1, 2, figsize=(10, 5))\n    axes[0].plot(x, sine_function, label='Sine function')\n    axes[1].plot(x, cosine_function, label='Cosine function')\n    axes[0].set_xlabel('x')\n    axes[0].set_ylabel('sin(x)')\n    axes[1].set_xlabel('x')\n    axes[1].set_ylabel('cos(x)')\n    return fig, axes", "compilation_passed": true, "time": 0.061897993087768555, "tests_passed": true, "error": null}
{"code": "# Create a figure with two subplots\n    fig, axs = plt.subplots(1, 2, figsize=(8, 4))\n\n    # Generate x values for the functions\n    x = np.linspace(0, 2 * np.pi, 200)\n\n    # Generate sine and cosine values\n    sin_values = np.sin(x)\n    cos_values = np.cos(x)\n\n    # Plot the sine function\n    axs[0].plot(x, sin_values, label='Sine function')\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].grid()\n\n    # Plot the cosine function\n    axs[1].plot(x, cos_values, label='Cosine function')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].", "compilation_passed": false, "time": 0.0002532005310058594, "tests_passed": false, "error": "SyntaxError"}
