{"code": "try:\n        for filename in os.listdir(directory):\n            if re.search(pattern, filename):\n                new_filename = re.sub(pattern, replacement, filename)\n                os.rename(filename, new_filename)\n        return True\n    except Exception:\n        return False", "compilation_passed": true, "time": 0.0014121532440185547, "tests_passed": true, "error": null}
{"code": "if pattern and replacement:\n        for file in os.listdir(directory):\n            if re.search(pattern, file):\n                new_name = re.sub(pattern, replacement, file)\n                os.rename(os.path.join(directory, file), os.path.join(directory, new_name))\n        return True\n    return False", "compilation_passed": true, "time": 0.0026149749755859375, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.isdir(directory):\n        return False\n\n    try:\n        for filename in os.listdir(directory):\n            if re.match(pattern, filename):\n                new_filename = filename.replace(pattern, replacement)\n                os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n        return True\n    except:\n        return False", "compilation_passed": true, "time": 0.0017478466033935547, "tests_passed": true, "error": null}
{"code": "# List all files in the directory\n    files = os.listdir(directory)\n    # Initialize a flag to keep track of the successful operation\n    flag = True\n\n    # Loop through each file\n    for file in files:\n        # Check if the file matches the pattern\n        if re.search(pattern, file):\n            # Rename the file with the replacement string\n            try:\n                os.rename(os.path.join(directory, file),\n                          os.path.join(directory, re.sub(pattern, replacement, file)))\n            except Exception as e:\n                print(f\"Error: {e}\")\n                flag = False\n                continue\n\n    # Return the flag indicating the successfulness of the operation\n    return flag", "compilation_passed": true, "time": 0.0024330615997314453, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# check if directory exists and is a directory\n    if not os.path.exists(directory) or not os.path.isdir(directory):\n        return False\n\n    # loop over files in directory\n    for filename in os.listdir(directory):\n        # check if filename matches pattern\n        if re.search(pattern, filename):\n            # replace pattern with replacement\n            new_filename = re.sub(pattern, replacement, filename)\n            # rename file\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n\n    return True", "compilation_passed": true, "time": 0.0030469894409179688, "tests_passed": true, "error": null}
{"code": "try:\n        os.chdir(directory)\n        for file in os.listdir(directory):\n            if re.search(pattern, file):\n                os.rename(file, file.replace(pattern, replacement))\n        return True\n    except Exception as e:\n        print(f'Exception occurred: {e}')\n        return False", "compilation_passed": true, "time": 0.0030188560485839844, "tests_passed": true, "error": null}
{"code": "regex = re.compile(pattern)\n    files = os.listdir(directory)\n    matched_files = [file for file in files if regex.search(file)]\n    for file in matched_files:\n        new_name = re.sub(pattern, replacement, file)\n        os.rename(os.path.join(directory, file), os.path.join(directory, new_name))\n    return True", "compilation_passed": true, "time": 0.0023508071899414062, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Check if the directory is valid\n    if not os.path.isdir(directory):\n        return False\n\n    # Loop through all the files in the directory\n    for filename in os.listdir(directory):\n        # Check if the filename contains the pattern\n        if re.search(pattern, filename):\n            # Replace the pattern with the replacement string\n            new_filename = re.sub(pattern, replacement, filename)\n            # Rename the file\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n\n    return True", "compilation_passed": true, "time": 0.0031349658966064453, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory) or not os.path.isdir(directory):\n        return False\n    try:\n        pattern_regex = re.compile(pattern)\n        for filename in os.listdir(directory):\n            if pattern_regex.match(filename):\n                new_filename = re.sub(pattern_regex, replacement, filename)\n                os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n        return True\n    except Exception as e:\n        print(f\"Error occurred: {str(e)}\")\n        return False", "compilation_passed": true, "time": 0.0017352104187011719, "tests_passed": true, "error": null}
{"code": "# Check if the directory is valid\n    if os.path.isdir(directory):\n        # Get all the files in the directory\n        files = os.listdir(directory)\n        # Loop through each file\n        for file in files:\n            # Check if the file name contains the pattern\n            if pattern in file:\n                # Replace the pattern with the replacement string\n                new_name = file.replace(pattern, replacement)\n                # Rename the file\n                os.rename(f'{directory}/{file}', f'{directory}/{new_name}')\n        # Return True if the operation was successful\n        return True\n    # Return False if the directory is not valid\n    else:\n        return False", "compilation_passed": true, "time": 0.00315093994140625, "tests_passed": true, "error": null}
{"code": "if os.path.isdir(directory):\n        for file in os.listdir(directory):\n            if re.match(pattern, file):\n                new_name = re.sub(pattern, replacement, file)\n                os.rename(os.path.join(directory, file), os.path.join(directory, new_name))\n        return True\n    return False", "compilation_passed": true, "time": 0.001641988754272461, "tests_passed": true, "error": null}
{"code": "# Check if the directory exists\n    if not os.path.exists(directory):\n        return False\n    # Loop through all the files in the directory\n    for filename in os.listdir(directory):\n        # Check if the filename matches the pattern\n        if re.search(pattern, filename):\n            # Replace the pattern with the replacement string\n            new_filename = re.sub(pattern, replacement, filename)\n            # Rename the file\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n    return True", "compilation_passed": true, "time": 0.0031218528747558594, "tests_passed": true, "error": null}
{"code": "try:\n        # List all files in the specified directory\n        files = os.listdir(directory)\n\n        # Loop over each file\n        for file in files:\n            # Search for the pattern in the filename\n            if re.search(pattern, file):\n                # Construct the new filename\n                new_file = re.sub(pattern, replacement, file)\n                # Rename the file\n                os.rename(os.path.join(directory, file), os.path.join(directory, new_file))\n\n        return True\n    except Exception as e:\n        print(f\"Error: {e}\")\n        return False", "compilation_passed": true, "time": 0.0030128955841064453, "tests_passed": true, "error": null}
{"code": "try:\n        files = os.listdir(directory)\n        for file in files:\n            if re.search(pattern, file):\n                os.rename(os.path.join(directory, file), os.path.join(directory, re.sub(pattern, replacement, file)))\n        return True\n    except:\n        return False", "compilation_passed": true, "time": 0.002981901168823242, "tests_passed": true, "error": null}
{"code": "if re.search(r'[^0-9a-zA-Z\\-_]', pattern) or re.search(r'[^0-9a-zA-Z\\-_]', replacement):\n        return False\n\n    pattern_regex = re.compile(pattern)\n    for file_name in os.listdir(directory):\n        if pattern_regex.search(file_name):\n            new_file_name = pattern_regex.sub(replacement, file_name)\n            os.rename(os.path.join(directory, file_name), os.path.join(directory, new_file_name))\n    return True", "compilation_passed": true, "time": 0.002443075180053711, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        for filename in os.listdir(directory):\n            if re.search(pattern, filename):\n                new_filename = re.sub(pattern, replacement, filename)\n                os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n        return True\n    except Exception as err:\n        print(f'Error: {err}')\n        return False", "compilation_passed": true, "time": 0.003545045852661133, "tests_passed": true, "error": null}
{"code": "files = os.listdir(directory)\n\n    if not files:\n        return False\n\n    for file in files:\n        if re.search(pattern, file):\n            new_name = re.sub(pattern, replacement, file)\n            os.rename(os.path.join(directory, file), os.path.join(directory, new_name))\n\n    return True", "compilation_passed": true, "time": 0.0019080638885498047, "tests_passed": true, "error": null}
{"code": "# Check that the directory is a valid path\n    if not os.path.isdir(directory):\n        return False\n\n    # Iterate over all files in the directory\n    for filename in os.listdir(directory):\n        # Check if the filename matches the pattern\n        if re.match(pattern, filename):\n            # Rename the file\n            new_filename = filename.replace(pattern, replacement)\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n\n    # Return True to indicate success\n    return True", "compilation_passed": true, "time": 0.0016672611236572266, "tests_passed": true, "error": null}
{"code": "try:\n        if not os.path.isdir(directory):\n            return False\n        for filename in os.listdir(directory):\n            if re.search(pattern, filename):\n                new_filename = re.sub(pattern, replacement, filename)\n                os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n        return True\n    except Exception as e:\n        print(e)\n        return False", "compilation_passed": true, "time": 0.0030531883239746094, "tests_passed": true, "error": null}
{"code": "for filename in os.listdir(directory):\n        if re.search(pattern, filename):\n            new_filename = re.sub(pattern, replacement, filename)\n            old_path = os.path.join(directory, filename)\n            new_path = os.path.join(directory, new_filename)\n            os.rename(old_path, new_path)\n    return True", "compilation_passed": true, "time": 0.0023081302642822266, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        for filename in os.listdir(directory):\n            if re.search(pattern, filename):\n                new_name = re.sub(pattern, replacement, filename)\n                os.rename(os.path.join(directory, filename), os.path.join(directory, new_name))\n        return True\n    except:\n        return False", "compilation_passed": true, "time": 0.0029718875885009766, "tests_passed": true, "error": null}
{"code": "try:\n        # Change the current working directory to the specified directory\n        os.chdir(directory)\n        # Get a list of all files in the current directory\n        files = os.listdir('.')\n        for file in files:\n            # Check if the file matches the pattern\n            if re.match(pattern, file):\n                # Rename the file replacing the pattern with the replacement string\n                os.rename(file, file.replace(pattern, replacement))\n        return True\n    except:\n        return False", "compilation_passed": true, "time": 0.0017611980438232422, "tests_passed": true, "error": null}
{"code": "# Set the flag to False\n    flag = False\n\n    # Get a list of all files in the directory\n    file_list = os.listdir(directory)\n\n    # Loop through the files and replace the pattern in the filenames\n    for file in file_list:\n        # Get the full path to the file\n        file_path = os.path.join(directory, file)\n        # Check if the file is a regular file\n        if os.path.isfile(file_path):\n            # Check if the filename contains the pattern\n            if pattern in file:\n                # Replace the pattern in the filename\n                new_name = re.sub(pattern, replacement, file)\n                # Get the new file path\n                new_path = os.path.join(directory, new_name)\n                # Rename the file\n                os.rename(file_path, new_path)\n                # Set the flag to True\n                flag = True\n\n    # Return the flag\n    return flag", "compilation_passed": true, "time": 0.001954793930053711, "tests_passed": true, "error": null}
{"code": "# check if directory is valid\n    if os.path.isdir(directory):\n        files = os.listdir(directory)\n    else:\n        print(\"ERROR: directory is not valid\")\n        return False\n\n    for filename in files:\n        # check if the file matches the pattern\n        if re.search(pattern, filename):\n            # create the new name with the replacement pattern\n            new_name = re.sub(pattern, replacement, filename)\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_name))\n    print(\"Operation completed successfully\")\n    return True", "compilation_passed": true, "time": 0.0035550594329833984, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        return False\n\n    pattern = re.compile(pattern)\n\n    for file_name in os.listdir(directory):\n        if pattern.search(file_name):\n            new_file_name = pattern.sub(replacement, file_name)\n            os.rename(os.path.join(directory, file_name), os.path.join(directory, new_file_name))\n\n    return True", "compilation_passed": true, "time": 0.0029366016387939453, "tests_passed": true, "error": null}
{"code": "try:\n        for filename in os.listdir(directory):\n            if pattern in filename:\n                new_filename = filename.replace(pattern, replacement)\n                os.rename(directory + filename, directory + new_filename)\n        return True\n    except Exception as e:\n        print(\"An error occurred: \", str(e))\n        return False", "compilation_passed": true, "time": 0.0016541481018066406, "tests_passed": true, "error": null}
{"code": "try:\n        # Set the working directory\n        os.chdir(directory)\n\n        # Loop through all files in the directory\n        for file in os.listdir(directory):\n\n            # Search for the pattern in the filename\n            if re.search(pattern, file):\n\n                # Replace the pattern with the replacement string\n                new_name = re.sub(pattern, replacement, file)\n                print(f\"Renaming {file} to {new_name}\")\n\n                # Rename the file\n                os.rename(file, new_name)\n\n        # Return True if the operation was successful\n        return True\n\n    except:\n\n        # Return False if an error occurred\n        return False", "compilation_passed": true, "time": 0.0030891895294189453, "tests_passed": true, "error": null}
{"code": "try:\n        for file in os.listdir(directory):\n            if re.search(pattern, file):\n                os.rename(os.path.join(directory, file),\n                          os.path.join(directory, file.replace(pattern, replacement)))\n        return True\n    except Exception:\n        return False", "compilation_passed": true, "time": 0.0030469894409179688, "tests_passed": true, "error": null}
{"code": "files = os.listdir(directory)\n\n    for file_name in files:\n        if re.search(pattern, file_name):\n            new_file_name = file_name.replace(pattern, replacement)\n            os.rename(os.path.join(directory, file_name), os.path.join(directory, new_file_name))\n            print(f\"Renamed {file_name} to {new_file_name}\")\n            return True\n\n    print(f\"No files matching pattern '{pattern}' were found in directory '{directory}'\")\n    return False", "compilation_passed": true, "time": 0.0015759468078613281, "tests_passed": true, "error": null}
{"code": "try:\n        for file in os.listdir(directory):\n            if re.search(pattern, file):\n                os.rename(os.path.join(directory, file), os.path.join(directory, re.sub(pattern, replacement, file)))\n        return True\n    except Exception as e:\n        print(e)\n        return False", "compilation_passed": true, "time": 0.0030112266540527344, "tests_passed": true, "error": null}
