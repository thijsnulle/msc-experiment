{"code": "# your task code here\n    total_count = 0\n    dict_files = os.listdir(FILE_DIR)\n    word_count = Counter()\n    for file in dict_files:\n        file_path = os.path.join(FILE_DIR, file)\n        with open(file_path, 'r') as f:\n            words = f.read().lower().split()\n            word_count.update(words)\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writerow([\"Word\", \"Count\"])\n        for word, count in word_count.items():\n            writer.writerow([word, count])\n            total_count += count\n    return total_count\n\n    pass", "compilation_passed": true, "time": 0.0013267993927001953, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        # Check if output_file and test_directory are strings\n        if not isinstance(output_file, str) or not isinstance(test_directory, str):\n            raise TypeError(\"Invalid file names\")\n        if not os.path.exists(test_directory):\n            raise FileNotFoundError(\"Invalid test directory\")\n\n        word_counter = Counter()\n\n        for filename in os.listdir(test_directory):\n            if filename.endswith(\".txt\"):\n                with open(os.path.join(test_directory, filename), \"r\") as file:\n                    for line in file:\n                        # Remove punctuation characters\n                        line = re.sub(r'[^\\w\\s]', '', line)\n\n                        # Update the word counter\n                        word_counter.update(line.split())\n\n        total_words = sum(word_counter.values())\n\n        with open(output_file, 'w', newline='') as csvfile:\n            writer = csv.writer(csvfile)\n            writer.writer", "compilation_passed": false, "time": 0.0002548694610595703, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Initialize an empty dictionary to store word counts\n    word_counts = {}\n\n    # Check if the test_directory exists and is a directory\n    if not os.path.isdir(test_directory):\n        return 0\n\n    # Iterate through all files in the directory\n    for filename in os.listdir(test_directory):\n        # Check if the file has a .txt extension\n        if filename.endswith('.txt'):\n            # Open the file in read mode\n            with open(os.path.join(test_directory, filename), 'r') as file:\n                # Read the contents of the file\n                contents = file.read()\n                # Split the contents into individual words\n                words = contents.split()\n                # Iterate through each word\n                for word in words:\n                    # If the word already exists in the word_counts dictionary, increment its count\n                    if word in word_counts:\n                        word_counts[word] += 1\n                    # Otherwise, add it to the dictionary with a count of 1\n                    else:\n                        word_counts[word", "compilation_passed": false, "time": 0.00018095970153808594, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Initialize an empty Counter object to store the word counts\n    word_counts = Counter()\n    # Loop through each file in the directory\n    for filename in os.listdir(test_directory):\n        # Check if the file has a .txt extension\n        if filename.endswith(\".txt\"):\n            # Open the file in read mode\n            with open(os.path.join(test_directory, filename), 'r') as f:\n                # Split the content of the file into words\n                words = f.read().split()\n                # Update the Counter object with the word counts\n                word_counts.update(words)\n    # Open the output file in write mode\n    with open(output_file, 'w') as f:\n        # Create a CSV writer object\n        writer = csv.writer(f)\n        # Write the header for the CSV file\n        writer.writerow(['Word', 'Count'])\n        # Loop through each unique word in the Counter object and write the count to the CSV file\n        for word, count in word_counts.items():\n            writer.writerow([", "compilation_passed": false, "time": 0.00021123886108398438, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Initialize counter\n    counter = Counter()\n\n    # Check if output file and test directory are valid\n    if not output_file or not test_directory:\n        return 0\n\n    # Check if output file exists and remove if it does\n    if os.path.isfile(output_file):\n        os.remove(output_file)\n\n    # Get list of all .txt files in test_directory\n    files = [f for f in os.listdir(test_directory) if f.endswith('.txt')]\n\n    # Count words in each .txt file\n    for filename in files:\n        try:\n            with open(os.path.join(test_directory, filename), 'r', encoding='utf-8') as f:\n                counter.update(word for line in f for word in line.split())\n        except FileNotFoundError:\n            print(f\"File {filename} not found.\")\n            return 0\n\n    # Write word counts to csv file\n    with open(output_file, 'w', newline='', encoding='utf-8", "compilation_passed": false, "time": 0.00010609626770019531, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Your task implementation code here\n    pass", "compilation_passed": true, "time": 0.0010533332824707031, "tests_passed": true, "error": null}
{"code": "if not isinstance(output_file, str):\n        print('Invalid output_file')\n        return 0\n    if not isinstance(test_directory, str):\n        print('Invalid test_directory')\n        return 0\n    if not os.path.isdir(test_directory):\n        print('Invalid test_directory')\n        return 0\n\n    try:\n        word_counts = Counter()\n        for filename in os.listdir(test_directory):\n            if filename.endswith('.txt'):\n                with open(os.path.join(test_directory, filename), 'r') as f:\n                    for line in f:\n                        word_counts.update(line.strip().split())\n\n        with open(output_file, 'w', newline='') as f:\n            writer = csv.writer(f)\n            writer.writerow(['Word', 'Count'])\n            for word, count in word_counts.items():\n                writer.writerow([word, count])\n\n        return sum(word_counts.values())\n    except Exception as e:\n", "compilation_passed": false, "time": 0.0002689361572265625, "tests_passed": false, "error": "IndentationError"}
{"code": "try:\n        counter = Counter()\n\n        # Open each file in the specified directory, read the content, split the text into words,\n        # update the word count for each word in the counter object\n        for filename in os.listdir(FILE_DIR):\n            if filename.endswith('.txt'):\n                with open(os.path.join(FILE_DIR, filename), 'r') as f:\n                    text = f.read().replace('\\n', '')\n                    words = text.split(' ')\n                    for word in words:\n                        if word not in [' ', '\\n']:\n                            counter[word] += 1\n\n        # Create a dictionary from the counter object with the word and count values, and save it as CSV\n        with open(output_file, 'w') as f:\n            writer = csv.writer(f)\n            writer.writerow(['Word', 'Count'])\n            for word, count in counter.items():\n                writer.writerow([word, count])\n\n        return len(counter)\n\n    except:\n        ", "compilation_passed": false, "time": 0.00021409988403320312, "tests_passed": false, "error": "IndentationError"}
{"code": "try:\n        # Check for valid filename and test_directory\n        if not isinstance(output_file, str) or not output_file.endswith('.csv'):\n            raise ValueError('Invalid output file name.')\n        if not isinstance(test_directory, str) or not os.path.isdir(test_directory):\n            raise ValueError('Invalid test directory name.')\n\n        # Initialize dictionary and get list of all .txt files in the directory\n        word_counts = Counter()\n        txt_files = [file for file in os.listdir(test_directory) if file.endswith('.txt')]\n\n        # Iterate through each .txt file and count the words using Counter\n        for file in txt_files:\n            with open(os.path.join(test_directory, file), 'r') as f:\n                word_counts += Counter(f.read().split())\n\n        # Write the word counts to the output CSV file\n        with open(output_file, 'w', newline='') as f:\n            writer = csv.writer(f", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}
{"code": "total_word_count = 0\n    words_dict = {}\n\n    # Check if test_directory is a string and a valid directory\n    if not isinstance(test_directory, str):\n        return 0\n    if not os.path.isdir(test_directory):\n        return 0\n\n    # Count the number of words in each file and store the counts in words_dict\n    for filename in os.listdir(test_directory):\n        if filename.endswith(\".txt\"):\n            filepath = os.path.join(test_directory, filename)\n            with open(filepath, 'r') as f:\n                word_counter = Counter(f.read().split())\n                for word, count in word_counter.items():\n                    if word not in words_dict:\n                        words_dict[word] = count\n                    else:\n                        words_dict[word] += count\n\n    # Sort the words by the count and then the word alphabetically\n    sorted_words = sorted(words_dict.items(), key=lambda x: (x[1],", "compilation_passed": false, "time": 0.00021910667419433594, "tests_passed": false, "error": "SyntaxError"}
{"code": "word_count_dict = {}\n    for filename in os.listdir(test_directory):\n        # Check if the file ends with .txt\n        if filename.endswith(\".txt\"):\n            file_path = os.path.join(test_directory, filename)\n            with open(file_path, 'r') as f:\n                text = f.read()\n                # Replace newline characters with a space\n                text = text.replace('\\n', ' ')\n                # Split the text into words\n                words = text.split()\n                # Count the occurrences of each word using collections.Counter\n                counter = Counter(words)\n                # Update the dictionary with the counts from this file\n                word_count_dict.update(counter)\n\n    # Write the counts to the CSV file\n    try:\n        with open(output_file, 'w', newline='') as f:\n            writer = csv.writer(f)\n            # Write the header\n            writer.writerow(['Word', 'Count'])\n            # Write the word counts to the CSV file\n            for word", "compilation_passed": false, "time": 0.00019788742065429688, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Check if the output file is a valid CSV file\n    if not os.path.splitext(output_file)[1] == '.csv':\n        return 0\n\n    # Check if the test_directory is a valid directory\n    if not os.path.isdir(test_directory):\n        return 0\n\n    try:\n        # Initialize a Counter object to store word counts\n        word_count = Counter()\n\n        # Iterate over all files in the test_directory\n        for file in os.listdir(test_directory):\n            # Check if the file is a text file (.txt)\n            if file.endswith('.txt'):\n                with open(os.path.join(test_directory, file), 'r', encoding='utf-8') as f:\n                    # Update word_count by counting words in each line of the file\n                    word_count.update(word for line in f for word in line.strip().split())\n\n        # Write the word counts to a CSV file\n        with open(output_file, 'w', newline='')", "compilation_passed": false, "time": 0.00017309188842773438, "tests_passed": false, "error": "SyntaxError"}
{"code": "total_words = 0\n    word_counts = Counter()\n\n    try:\n        with open(output_file, 'w', newline='') as csvfile:\n            writer = csv.writer(csvfile)\n            writer.writerow(['Word', 'Count'])\n\n            for file_name in os.listdir(test_directory):\n                if file_name.endswith(\".txt\"):\n                    with open(test_directory + file_name) as f:\n                        file_word_counts = Counter(f.read().split())\n                        for word, count in file_word_counts.items():\n                            word_counts[word] += count\n\n            for word, count in word_counts.items():\n                total_words += count\n                writer.writerow([word, count])\n\n    except Exception:\n        total_words = 0\n\n    return total_words", "compilation_passed": true, "time": 0.0044116973876953125, "tests_passed": true, "error": null}
{"code": "try:\n        # Initialize counter to count the words\n        word_counter = Counter()\n\n        # Iterate over all files in the directory\n        for filename in os.listdir(test_directory):\n            filepath = os.path.join(test_directory, filename)\n\n            # Check if the file is a .txt file and if it exists\n            if filename.endswith(\".txt\") and os.path.isfile(filepath):\n                with open(filepath, 'r', encoding='utf-8') as file:\n                    # Read the content of each file\n                    text = file.read()\n\n                    # Split the content into words and update the counter\n                    word_counter.update(text.split())\n\n        # Write the word count data to a CSV file\n        with open(output_file, 'w', newline='') as csv_file:\n            csv_writer = csv.writer(csv_file)\n\n            # Write the header\n            csv_writer.writerow(['Word', 'Count'])\n\n            # Write the word count data\n", "compilation_passed": false, "time": 0.00020599365234375, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Check if the input directory is valid\n    if not os.path.isdir(FILE_DIR + test_directory):\n        return 0\n\n    # Count the word occurrences in the dictionary files\n    counter = Counter()\n    for filename in os.listdir(FILE_DIR + test_directory):\n        if filename.endswith('.txt'):\n            with open(FILE_DIR + test_directory + '/' + filename, 'r') as file:\n                lines = file.read().splitlines()\n                for word in lines:\n                    counter[word] += 1\n\n    # Export the word counts to a CSV file\n    with open(output_file, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(['Word', 'Count'])\n        for word, count in counter.items():\n            writer.writerow([word, count])\n\n    # Return the total number of words\n    return sum(counter.values())", "compilation_passed": true, "time": 0.003968954086303711, "tests_passed": true, "error": null}
{"code": "# check if the input is valid\n    if not isinstance(output_file, str) or not isinstance(test_directory, str):\n        return 0\n\n    # get a list of all the file names in the directory\n    try:\n        file_list = os.listdir(test_directory)\n    except FileNotFoundError:\n        return 0\n\n    # iterate over the file names and count the words in each file\n    total_count = 0\n    word_counts = Counter()\n    for filename in file_list:\n        # skip if not .txt file\n        if not filename.endswith('.txt'):\n            continue\n        # count the words in the file\n        with open(test_directory + filename, 'r', encoding='utf-8') as f:\n            words = f.read().split()\n            total_count += len(words)\n            word_counts.update(words)\n\n    # export the counts to a CSV file\n    with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:\n        writer", "compilation_passed": true, "time": 0.0012900829315185547, "tests_passed": false, "error": "NameError"}
{"code": "total_words = 0\n\n    try:\n        # Get all .txt files in the directory\n        files = [f for f in os.listdir(test_directory) if f.endswith('.txt')]\n        if not files:\n            raise ValueError(f\"No .txt files found in directory: {test_directory}\")\n\n        word_counts = Counter()  # Initialize a Counter object to store word counts\n\n        for filename in files:\n            file_path = os.path.join(test_directory, filename)\n            try:\n                with open(file_path, 'r') as f:\n                    file_words = f.read().split()  # Split the file content into words\n                    word_counts.update(file_words)  # Update the Counter object with the file's words\n            except FileNotFoundError:\n                raise ValueError(f\"File not found: {file_path}\")\n            except IOError as e:\n                raise ValueError(f\"Error reading file: {file_path}\\n{e}\")\n\n        # Export the word counts to", "compilation_passed": false, "time": 0.00021982192993164062, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Check if the input filename or test_directory is None or empty string\n    if not output_file or not test_directory:\n        return 0\n\n    # Check if test_directory is a valid directory\n    if not os.path.isdir(test_directory):\n        return 0\n\n    # Create a dictionary to store the word counts\n    word_counts = Counter()\n\n    # Loop through each file in the test_directory\n    for filename in os.listdir(test_directory):\n        # Check if the file is a text file\n        if filename.endswith('.txt'):\n            # Open the text file and read its content\n            with open(os.path.join(test_directory, filename)) as f:\n                # Count the words in the text file\n                word_counts.update(f.read().split())\n\n    # Sort the word counts in descending order\n    sorted_word_counts = word_counts.most_common()\n\n    # Write the word counts to the output CSV file\n    with open(output_file, 'w') as f:\n        writer = csv", "compilation_passed": true, "time": 0.0012891292572021484, "tests_passed": true, "error": null}
{"code": "try:\n        # Check if the directory exists\n        if not os.path.isdir(FILE_DIR):\n            return 0\n        if not test_directory:\n            return 0\n        # Initialize an empty Counter\n        word_counts = Counter()\n        # Loop through all files in the directory\n        for filename in os.listdir(test_directory):\n            if filename.endswith(\".txt\"):\n                # Open the file in read mode\n                with open(os.path.join(test_directory, filename), \"r\") as f:\n                    # Update the counter with the words in the file\n                    word_counts.update(f.read().split())\n        # Write the word counts to the CSV file\n        with open(output_file, 'w', newline='') as csvfile:\n            # Use the DictWriter to write the header and data rows\n            writer = csv.DictWriter(csvfile, fieldnames=[\"Word\", \"Count\"])\n            writer.writeheader()\n            for word, count in word_counts.items():\n                writer.", "compilation_passed": false, "time": 0.00023293495178222656, "tests_passed": false, "error": "SyntaxError"}
{"code": "try:\n        # Create an empty counter object to store the word counts\n        word_counter = Counter()\n\n        # Get a list of all files in the specified directory with .txt extension\n        files = [file for file in os.listdir(test_directory) if file.endswith('.txt')]\n\n        # Iterate over each file in the directory\n        for file in files:\n            # Open the file and read its contents\n            with open(test_directory + file, 'r', encoding='utf-8') as f:\n                file_content = f.read()\n\n            # Split the file contents into words and update the word counter\n            word_counter.update(file_content.split())\n\n        # Write the word counts to the CSV file\n        with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:\n            writer = csv.writer(csvfile)\n            writer.writerow([\"Word\", \"Count\"])\n            for word, count in word_counter.most_common():\n                writer.writerow([word,", "compilation_passed": false, "time": 0.00020766258239746094, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Implement your logic here\n    word_counts = Counter()\n    words = []\n    counter = 0\n    # word_counts_csv = open('word_counts.csv', 'w')\n    try:\n        for filename in os.listdir(test_directory):\n            if filename.endswith('.txt'):\n                with open(test_directory + filename, 'r') as txt_file:\n                    reader = txt_file.read()\n                    for word in reader.split():\n                        word_counts[word] += 1\n                    for word in word_counts.keys():\n                        words.append(word)\n        word_counts.most_common(len(word_counts))\n\n        for filename in os.listdir(test_directory):\n            if filename.endswith('.txt'):\n                counter += 1\n    except:\n        return 0\n    try:\n        with open(output_file, \"w\", newline='') as file:\n            writer = csv.writer(file)\n            writer.writerow([\"Word\"", "compilation_passed": false, "time": 0.00022983551025390625, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Implement your logic here\n    # -------------------------------------------------------------------------\n    # Add your code here\n\n    # Check if the directory exists\n    if not os.path.exists(FILE_DIR + test_directory):\n        return 0\n\n    # Check if the output file is writable\n    if not os.access(FILE_DIR + output_file, os.W_OK):\n        return 0\n\n    # Count the number of words in the dictionary files\n    word_counts = Counter()\n    for filename in os.listdir(FILE_DIR + test_directory):\n        if filename.endswith('.txt'):\n            try:\n                with open(os.path.join(FILE_DIR + test_directory, filename)) as f:\n                    for line in f:\n                        for word in line.split():\n                            word_counts[word] += 1\n            except IOError:\n                pass\n\n    # Write the word counts to the CSV file\n    try:\n        with open(FILE_", "compilation_passed": false, "time": 0.00018215179443359375, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Initialize a Counter object to store word counts\n    word_count = Counter()\n    try:\n        # List all .txt files in the test_directory\n        for file in os.listdir(test_directory):\n            if file.endswith('.txt'):\n                with open(f\"{test_directory}/{file}\", 'r') as f:\n                    # Update the Counter object with word counts from the current file\n                    word_count.update(word for line in f for word in line.split())\n\n        # Open the output_file in write mode, use newline to remove extra line while writing\n        with open(output_file, 'w', newline='') as f:\n            # Create a writer object to write CSV data to the output_file\n            writer = csv.writer(f)\n\n            # Write the header to the CSV file\n            writer.writerow([\"Word\", \"Count\"])\n\n            # Loop over the most common words and their counts in the word_count Counter object\n            for word, count in word_count.most_common():\n                # Write the", "compilation_passed": false, "time": 0.0001800060272216797, "tests_passed": false, "error": "IndentationError"}
{"code": "# Check input filename\n    if not isinstance(output_file, str) or not isinstance(test_directory, str):\n        return 0\n    # Check file format\n    if not output_file.endswith('.csv'):\n        return 0\n    # Check directory\n    if not os.path.isdir(FILE_DIR+test_directory):\n        return 0\n\n    try:\n        # Count words in the directory\n        counts = Counter()\n        for file_name in os.listdir(FILE_DIR+test_directory):\n            if file_name.endswith('.txt'):\n                with open(os.path.join(FILE_DIR+test_directory, file_name), 'r') as f:\n                    for line in f:\n                        counts.update(line.split())\n\n        # Write counts to a CSV file\n        with open(output_file, 'w') as f:\n            writer = csv.writer(f)\n            writer.writerow(['Word', 'Count'])\n            for word, count in counts.items():\n                writer.writer", "compilation_passed": false, "time": 0.0002129077911376953, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Check if the file directory is a directory, and it exists\n    if not os.path.isdir(test_directory):\n        raise ValueError(\"Invalid directory\")\n\n    # Check if the file name is a valid string\n    if not isinstance(output_file, str) or not output_file.strip():\n        raise ValueError(\"Invalid file name\")\n\n    # Check if the file is not a directory and is a valid text file\n    file_count = {}\n    for file in os.listdir(test_directory):\n        file_path = os.path.join(test_directory, file)\n        if os.path.isfile(file_path) and file_path.endswith('.txt'):\n            with open(file_path, 'r', encoding='utf-8') as f:\n                # Using a dictionary comprehension to count the number of words\n                file_count.update({word: file_count.get(word, 0) + 1 for word in f.read().split()})\n\n    # Sorting the dictionary in descending order of frequency\n    sorted_", "compilation_passed": true, "time": 0.0011560916900634766, "tests_passed": false, "error": "NameError"}
{"code": "try:\n        # Create an empty Counter object to store word counts\n        total_words = Counter()\n\n        # List all files in the directory\n        file_list = os.listdir(test_directory)\n\n        # Iterate over all .txt files in the directory\n        for file in file_list:\n            # If the file has a .txt extension\n            if file.endswith(\".txt\"):\n                # Open the file in read mode\n                with open(os.path.join(test_directory, file), 'r') as f:\n                    # Read the entire file content as a string\n                    file_content = f.read()\n                    # Split the string into words and create a list\n                    words = file_content.split()\n                    # Create a Counter object for the words\n                    file_counter = Counter(words)\n                    # Update the total_words counter with the word counts from this file\n                    total_words += file_counter\n\n        # Create a dictionary with the total word counts\n        word_counts = dict(total_words)\n\n        # Write the", "compilation_passed": false, "time": 0.0001499652862548828, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Check the output file path\n    if not os.path.exists(output_file):\n        print('The output file path is not valid!')\n        return 0\n\n    # Check the test directory path\n    if not os.path.isdir(test_directory):\n        print('The test directory path is not valid!')\n        return 0\n\n    # Count the number of words in all dictionary files\n    try:\n        counts = Counter()\n        for file_name in os.listdir(test_directory):\n            if file_name.endswith('.txt'):\n                with open(os.path.join(test_directory, file_name)) as file:\n                    counts += Counter(file.read().split())\n\n        # Export the counts to the CSV file\n        with open(output_file, 'w', newline='') as csv_file:\n            writer = csv.writer(csv_file)\n            writer.writerow([\"Word\", \"Count\"])\n            for word, count in counts.items():\n                writer.writerow([word, count])\n", "compilation_passed": false, "time": 0.00020503997802734375, "tests_passed": false, "error": "SyntaxError"}
{"code": "# TODO: Implement this function\n    return 0", "compilation_passed": true, "time": 0.0042040348052978516, "tests_passed": true, "error": null}
{"code": "# Initialize the Counter object to store the word counts\n    word_counts = Counter()\n\n    # List of .txt files in the directory\n    txt_files = [f for f in os.listdir(test_directory) if f.endswith('.txt')]\n\n    # Loop through each .txt file\n    for txt_file in txt_files:\n        file_path = os.path.join(test_directory, txt_file)\n\n        # Read the file and count the words\n        with open(file_path, 'r') as file:\n            words = file.read().split()\n            word_counts.update(words)\n\n    # Sort the word counts by count in descending order\n    sorted_word_counts = sorted(word_counts.items(), key=lambda x: x[1], reverse=True)\n\n    # Save the word counts to a CSV file\n    with open(output_file, 'w', newline='') as file:\n        writer = csv.writer(file)\n        writer.writerow(['Word', 'Count'])", "compilation_passed": true, "time": 0.00151824951171875, "tests_passed": true, "error": null}
{"code": "# Validate input\n    if not os.path.isdir(FILE_DIR):\n        print(\"Directory does not exist or is not a directory\")\n        return 0\n\n    try:\n        with open(output_file, 'w') as f:\n            # Create CSV writer\n            writer = csv.writer(f)\n\n            # Write header to CSV file\n            writer.writerow([\"Word\", \"Count\"])\n\n            # Count words in each .txt file in the directory\n            word_counts = Counter()\n            for filename in os.listdir(FILE_DIR):\n                if filename.endswith('.txt'):\n                    with open(os.path.join(FILE_DIR, filename), 'r') as file:\n                        word_counts.update(file.read().split())\n\n            # Write word counts to CSV file\n            for word, count in word_counts.items():\n                writer.writerow([word, count])\n\n        # Return total number of words\n        return sum(word_counts.values())\n\n    except:\n        ", "compilation_passed": false, "time": 0.00022602081298828125, "tests_passed": false, "error": "IndentationError"}
