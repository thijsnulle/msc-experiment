{"code": "if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n    count = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename):\n            shutil.move(\n                os.path.join(source_directory, filename),\n                os.path.join(target_directory, filename),\n            )\n            count += 1\n    return count", "compilation_passed": true, "time": 0.0046842098236083984, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_directory):\n        return 0\n\n    if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    count = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename):\n            source_path = os.path.join(source_directory, filename)\n            target_path = os.path.join(target_directory, filename)\n            shutil.move(source_path, target_path)\n            count += 1\n\n    return count", "compilation_passed": true, "time": 0.004497051239013672, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    moved_files = 0\n\n    for filename in os.listdir(source_directory):\n        match = re.search(pattern, filename)\n        if match:\n            source_path = os.path.join(source_directory, filename)\n            target_path = os.path.join(target_directory, filename)\n\n            shutil.move(source_path, target_path)\n            moved_files += 1\n\n    return moved_files", "compilation_passed": true, "time": 0.004548072814941406, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    regex = re.compile(pattern)\n    files_moved = 0\n\n    for file_name in os.listdir(source_directory):\n        if regex.search(file_name):\n            source_path = os.path.join(source_directory, file_name)\n            target_path = os.path.join(target_directory, file_name)\n            shutil.move(source_path, target_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.0045909881591796875, "tests_passed": true, "error": null}
{"code": "if os.path.isdir(source_directory):\n        if not os.path.isdir(target_directory):\n            os.makedirs(target_directory)\n        file_count = 0\n        for file in os.listdir(source_directory):\n            if re.match(pattern, file):\n                shutil.move(os.path.join(source_directory, file), target_directory)\n                file_count += 1\n        return file_count\n    else:\n        return 0", "compilation_passed": true, "time": 0.0020940303802490234, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    pattern_obj = re.compile(pattern)\n    files_to_move = [\n        file for file in os.listdir(source_directory) if pattern_obj.search(file)\n    ]\n    files_moved = 0\n\n    for file_to_move in files_to_move:\n        source_path = os.path.join(source_directory, file_to_move)\n        target_path = os.path.join(target_directory, file_to_move)\n\n        try:\n            shutil.move(source_path, target_path)\n            files_moved += 1\n        except Exception as e:\n            print(f\"Failed to move file '{file_to_move}': {str(e)}\")\n\n    return files_moved", "compilation_passed": true, "time": 0.004615068435668945, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    files_moved = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename) and os.path.isfile(os.path.join(source_directory, filename)):\n            shutil.move(os.path.join(source_directory, filename), os.path.join(target_directory, filename))\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.00450897216796875, "tests_passed": true, "error": null}
{"code": "# Check if the source directory exists and is a directory\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # Create the target directory if it doesn't exist\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Iterate through files in the source directory and move files matching the pattern\n    count = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename):\n            shutil.move(os.path.join(source_directory, filename), target_directory)\n            count += 1\n\n    return count", "compilation_passed": true, "time": 0.005426883697509766, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    if os.path.isdir(source_directory):\n        if not os.path.isdir(target_directory):\n            os.makedirs(target_directory)\n\n        for filename in os.listdir(source_directory):\n            if re.match(pattern, filename):\n                shutil.move(os.path.join(source_directory, filename), target_directory)\n                files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.002398252487182617, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    num_files_moved = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename):\n            shutil.move(os.path.join(source_directory, filename), os.path.join(target_directory, filename))\n            num_files_moved += 1\n    return num_files_moved", "compilation_passed": true, "time": 0.004872798919677734, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        print(f\"Source directory {source_directory} does not exist or is not a directory\")\n        return 0\n    if not os.path.isdir(target_directory):\n        print(f\"Target directory {target_directory} does not exist, creating it now\")\n        os.makedirs(target_directory, exist_ok=True)\n    num_files_moved = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename):\n            source_file_path = os.path.join(source_directory, filename)\n            target_file_path = os.path.join(target_directory, filename)\n            shutil.move(source_file_path, target_file_path)\n            num_files_moved += 1\n    return num_files_moved", "compilation_passed": true, "time": 0.004554033279418945, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    pattern_re = re.compile(pattern)\n\n    moved_count = 0\n\n    for filename in os.listdir(source_directory):\n        if pattern_re.search(filename):\n            source_file = os.path.join(source_directory, filename)\n            target_file = os.path.join(target_directory, filename)\n            shutil.move(source_file, target_file)\n            moved_count += 1\n\n    return moved_count", "compilation_passed": true, "time": 0.0045452117919921875, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    regex = re.compile(pattern)\n    files = os.listdir(source_directory)\n    moved = 0\n    for file in files:\n        if regex.search(file):\n            source = os.path.join(source_directory, file)\n            target = os.path.join(target_directory, file)\n            shutil.move(source, target)\n            moved += 1\n    return moved", "compilation_passed": true, "time": 0.004563093185424805, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n\n    # If the target directory doesn't exist, create it\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    for file in os.listdir(source_directory):\n        if re.match(pattern, file):\n            source_path = os.path.join(source_directory, file)\n            target_path = os.path.join(target_directory, file)\n            shutil.move(source_path, target_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.002065896987915039, "tests_passed": true, "error": null}
{"code": "# Check if source_directory is valid\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # Check if target_directory is valid\n    if not os.path.isdir(target_directory):\n        os.mkdir(target_directory)\n\n    # Initialize count of files moved\n    count = 0\n\n    # Get list of files in source_directory\n    files = os.listdir(source_directory)\n\n    # Move files matching the pattern to target_directory\n    for filename in files:\n        if re.search(pattern, filename):\n            source_file = os.path.join(source_directory, filename)\n            target_file = os.path.join(target_directory, filename)\n            shutil.move(source_file, target_file)\n            count += 1\n\n    return count", "compilation_passed": true, "time": 0.004427194595336914, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    files_moved = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename) and os.path.isfile(os.path.join(source_directory, filename)):\n            shutil.move(os.path.join(source_directory, filename), target_directory)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004656791687011719, "tests_passed": true, "error": null}
{"code": "# Check if source_directory exists and is a directory\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n\n        # Check if target_directory exists. If not, create it.\n        if not os.path.exists(target_directory):\n            os.makedirs(target_directory)\n\n        # Counter for successful moves\n        count = 0\n\n        # Iterate over files in source_directory\n        for file_name in os.listdir(source_directory):\n\n            # Check if file matches the pattern\n            if re.search(pattern, file_name):\n\n                # Join source and target directories with the file name\n                source_path = os.path.join(source_directory, file_name)\n                target_path = os.path.join(target_directory, file_name)\n\n                # Move the file and increment the count\n                shutil.move(source_path, target_path)\n                count += 1\n\n        # Return the count of moved files\n        return count\n\n    # If source_directory does not exist or is", "compilation_passed": true, "time": 0.0046460628509521484, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    pattern = re.compile(pattern)\n    moved_files = 0\n\n    for filename in os.listdir(source_directory):\n        if pattern.search(filename):\n            source_file = os.path.join(source_directory, filename)\n            target_file = os.path.join(target_directory, filename)\n\n            shutil.move(source_file, target_file)\n            moved_files += 1\n\n    return moved_files", "compilation_passed": true, "time": 0.005354881286621094, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    count = 0\n    regex = re.compile(pattern)\n    for filename in os.listdir(source_directory):\n        if regex.search(filename):\n            shutil.move(os.path.join(source_directory, filename),\n                        os.path.join(target_directory, filename))\n            count += 1\n    return count", "compilation_passed": true, "time": 0.005640983581542969, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    pattern_re = re.compile(pattern)\n    num_moves = 0\n\n    for filename in os.listdir(source_directory):\n        if pattern_re.search(filename):\n            src_path = os.path.join(source_directory, filename)\n            target_path = os.path.join(target_directory, filename)\n            shutil.move(src_path, target_path)\n            num_moves += 1\n\n    return num_moves", "compilation_passed": true, "time": 0.004647970199584961, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    moved_count = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename):\n            source_path = os.path.join(source_directory, filename)\n            target_path = os.path.join(target_directory, filename)\n            shutil.move(source_path, target_path)\n            moved_count += 1\n    return moved_count", "compilation_passed": true, "time": 0.004693031311035156, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n\n    matching_files = [file for file in os.listdir(source_directory) if re.search(pattern, file)]\n    moved_files = 0\n\n    for file in matching_files:\n        source_file = os.path.join(source_directory, file)\n        target_file = os.path.join(target_directory, file)\n        shutil.move(source_file, target_file)\n        moved_files += 1\n\n    return moved_files", "compilation_passed": true, "time": 0.004596233367919922, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        print(f\"Source directory does not exist or is not a directory: {source_directory}\")\n        return 0\n    if not os.path.isdir(target_directory):\n        os.mkdir(target_directory)\n    file_count = 0\n    for file_name in os.listdir(source_directory):\n        if re.search(pattern, file_name):\n            shutil.move(os.path.join(source_directory, file_name), target_directory)\n            file_count += 1\n    return file_count", "compilation_passed": true, "time": 0.004585981369018555, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Get the list of filenames in the source directory that match the pattern\n    filenames = [fn for fn in os.listdir(source_directory) if re.match(pattern, fn)]\n\n    # Move the matching filenames to the target directory\n    for fn in filenames:\n        shutil.move(os.path.join(source_directory, fn), os.path.join(target_directory, fn))\n\n    # Return the number of files moved\n    return len(filenames)", "compilation_passed": true, "time": 0.0021429061889648438, "tests_passed": true, "error": null}
{"code": "# Ensure the source directory exists and is a directory.\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # If the target directory does not exist, create it.\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Move files matching the pattern from source_directory to target_directory.\n    num_moved = 0\n    for file_name in os.listdir(source_directory):\n        if re.search(pattern, file_name) and os.path.isfile(os.path.join(source_directory, file_name)):\n            shutil.move(os.path.join(source_directory, file_name), os.path.join(target_directory, file_name))\n            num_moved += 1\n    return num_moved", "compilation_passed": true, "time": 0.004529714584350586, "tests_passed": true, "error": null}
{"code": "# Check if the source directory exists and is a directory\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # Check if the target directory exists and create it if necessary\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Count of successfully moved files\n    moved_files_count = 0\n\n    # Iterate through each file in the source directory\n    for filename in os.listdir(source_directory):\n        # Check if the filename matches the pattern\n        if re.search(pattern, filename):\n            # Construct the source and target file paths\n            source_file = os.path.join(source_directory, filename)\n            target_file = os.path.join(target_directory, filename)\n\n            # Move the file from the source to the target directory\n            shutil.move(source_file, target_file)\n            moved_files_count += 1\n\n    return moved_files_count", "compilation_passed": true, "time": 0.00507807731628418, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    pattern = re.compile(pattern)\n    count = 0\n    for filename in os.listdir(source_directory):\n        if pattern.search(filename):\n            src_path = os.path.join(source_directory, filename)\n            dst_path = os.path.join(target_directory, filename)\n            shutil.move(src_path, dst_path)\n            count += 1\n    return count", "compilation_passed": true, "time": 0.005752086639404297, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n\n    regex_pattern = re.compile(pattern)\n    files_moved = 0\n\n    for filename in os.listdir(source_directory):\n        if regex_pattern.search(filename):\n            shutil.move(os.path.join(source_directory, filename), target_directory)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.0054967403411865234, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n    count = 0\n    for filename in os.listdir(source_directory):\n        if re.match(pattern, filename):\n            shutil.move(os.path.join(source_directory, filename), os.path.join(target_directory, filename))\n            count += 1\n    return count", "compilation_passed": true, "time": 0.002138853073120117, "tests_passed": true, "error": null}
{"code": "# If the source directory doesn't exist or isn't a directory, return 0.\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # If the target directory doesn't exist, create it.\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Iterate through files in the source directory and move files that match the pattern.\n    counter = 0\n    for filename in os.listdir(source_directory):\n        if re.search(pattern, filename):\n            source = os.path.join(source_directory, filename)\n            destination = os.path.join(target_directory, filename)\n            shutil.move(source, destination)\n            counter += 1\n\n    return counter", "compilation_passed": true, "time": 0.004672050476074219, "tests_passed": true, "error": null}
