{"code": "try:\n        wiki = wikipedia.page(title=page_title)\n        text = wiki.content\n        wc = WordCloud(width=600, height=400)\n        wc.generate(text)\n        plt.figure()\n        plt.imshow(wc, interpolation='bilinear')\n        plt.axis(\"off\")\n        plt.savefig('wc.png')\n        plt.show()\n    except:\n        print('There is no wikipedia page with title ' + page_title)\n        return None\n    finally:\n        pass", "compilation_passed": true, "time": 1.5782983303070068, "tests_passed": true, "error": null}
{"code": "try:\n        page = wikipedia.page(page_title)\n        text = page.content\n    except Exception as e:\n        print('Error:\\n', e, '\\nNo Wikipedia page with title \\'', page_title, '\\'\\n\\n', sep = '')\n        return None\n\n    cloud = WordCloud(collocations=False, width=1600, height=800).generate(text)\n\n    plt.figure(figsize=(20, 20))\n    plt.imshow(cloud, interpolation='bilinear')\n    plt.axis('off')\n    plt.show()\n\n    return plt.gca()", "compilation_passed": true, "time": 1.003079891204834, "tests_passed": true, "error": null}
{"code": "try:\n        page = wikipedia.page(page_title)\n        text = page.content\n        wordcloud = WordCloud(background_color=\"white\", max_font_size=40).generate(text)\n        plt.imshow(wordcloud, interpolation=\"bilinear\")\n        plt.axis(\"off\")\n        plt.show()\n    except:\n        print(f\"No page found with title {page_title}.\")\n    return ax", "compilation_passed": true, "time": 0.009348154067993164, "tests_passed": false, "error": "NameError"}
{"code": "try:\n        page = wikipedia.page(page_title)\n        wiki_text = page.content\n        wordcloud = WordCloud(background_color=\"white\").generate(wiki_text)\n        plt.imshow(wordcloud, interpolation='bilinear')\n        plt.axis(\"off\")\n        plt.show()\n        return plt.gca()\n    except wikipedia.exceptions.DisambiguationError as error:\n        print(error.options)\n    except wikipedia.exceptions.PageError:\n        pass", "compilation_passed": true, "time": 0.8454101085662842, "tests_passed": true, "error": null}
{"code": "try:\n        wiki_text = wikipedia.page(page_title).content\n    except:\n        ax = None\n    else:\n        wc = WordCloud(collocations = False, width = 600, height = 400).generate(wiki_text)\n        plt.figure()\n        plt.imshow(wc, interpolation=\"bilinear\")\n        plt.axis('off')\n        plt.margins(x = 0, y = 0)\n        plt.tight_layout()\n        ax = plt.gca()\n    return ax", "compilation_passed": true, "time": 0.9685571193695068, "tests_passed": true, "error": null}
{"code": "try:\n        article = wikipedia.page(page_title)\n    except:\n        print(f\"No page found for title: {page_title}\")\n        return None\n\n    text = article.content\n\n    cloud = WordCloud(width=1300, height=750, max_words=250, background_color=\"white\", collocations=False)\n    cloud.generate(text)\n\n    plt.figure(figsize=(15, 10))\n    plt.imshow(cloud, interpolation=\"bilinear\")\n    plt.axis('off')\n    plt.show()\n\n    return plt.gca()", "compilation_passed": true, "time": 1.0041611194610596, "tests_passed": true, "error": null}
{"code": "try:\n        page = wikipedia.page(page_title)\n    except wikipedia.exceptions.DisambiguationError:\n        pass\n    except wikipedia.exceptions.PageError:\n        pass\n    else:\n        text = page.content.lower()\n        cloud = WordCloud(background_color=\"white\").generate(text)\n\n        fig = plt.figure()\n        ax = plt.gca()\n        ax.imshow(cloud)\n        ax.axis(\"off\")\n        return ax", "compilation_passed": true, "time": 0.8406610488891602, "tests_passed": true, "error": null}
{"code": "try:\n        page = wikipedia.page(page_title)\n        text = page.content\n        wc = WordCloud(background_color=\"white\", max_words=500).generate(text)\n        fig, ax = plt.subplots(figsize=(10, 10))\n        ax.imshow(wc)\n        ax.set_axis_off()\n        plt.show()\n    except wikipedia.exceptions.DisambiguationError:\n        print(\"The given title is ambiguous. Please try another title.\")\n    except wikipedia.exceptions.PageError:\n        print(\"No Wikipedia page found with the title given as input.\")\n    return ax", "compilation_passed": true, "time": 0.816230297088623, "tests_passed": false, "error": "UnboundLocalError"}
{"code": "try:\n        # get text from wikipedia page\n        page = wikipedia.page(page_title)\n        text = page.content\n\n        # create a wordcloud from the text\n        wordcloud = WordCloud(stopwords=stopwords.words('english'),\n                                background_color=\"white\").generate(text)\n\n        # plot the wordcloud\n        fig = plt.figure()\n        plt.imshow(wordcloud, interpolation=\"bilinear\")\n        plt.axis(\"off\")\n        plt.show()\n\n        # return the figure handle for further use\n        return fig.axes[0]\n\n    except wikipedia.exceptions.DisambiguationError:\n        print('Wikipedia Disambiguation Error: Try another search term')\n        return\n    except wikipedia.exceptions.PageError:\n        print('Wikipedia Page Error: Try another search term')\n        return", "compilation_passed": true, "time": 0.0032067298889160156, "tests_passed": false, "error": "NameError"}
{"code": "try:\n        page = wikipedia.page(page_title)\n    except wikipedia.exceptions.DisambiguationError as e:\n        print(e)\n        page = wikipedia.page(e.options[0])\n    except Exception as e:\n        print(f\"No wikipedia page exists with title '{page_title}'\")\n        return None\n    text = page.content\n    wordcloud = WordCloud(collocations=False).generate(text)\n    ax = plt.subplot(111)\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n    plt.margins(x=0, y=0)\n    return ax", "compilation_passed": true, "time": 1.018629789352417, "tests_passed": false, "error": "requests.exceptions.ReadTimeout"}
{"code": "try:\n        page_text = wikipedia.page(page_title).content\n        wc = WordCloud(background_color=\"white\", max_words=1000).generate(page_text)\n        plt.figure()\n        plt.imshow(wc, interpolation=\"bilinear\")\n        plt.axis(\"off\")\n        plt.savefig(\"wordcloud.png\")\n        plt.close()\n        ax = plt.axes()\n        ax.imshow(wc, interpolation=\"bilinear\")\n        return ax\n    except wikipedia.exceptions.DisambiguationError:\n        print(f\"Multiple pages found for {page_title}\")\n    except wikipedia.exceptions.PageError:\n        print(f\"No page found for {page_title}\")\n    return None", "compilation_passed": true, "time": 1.0112030506134033, "tests_passed": false, "error": "requests.exceptions.ReadTimeout"}
{"code": "try:\n        page_text = wikipedia.page(page_title).content\n        wordcloud = WordCloud(collocations=False)\n        wordcloud = wordcloud.generate(page_text)\n        plt.figure()\n        plt.imshow(wordcloud, interpolation=\"bilinear\")\n        plt.axis(\"off\")\n        plt.margins(x=0, y=0)\n        ax = plt.show()\n        return ax\n    except wikipedia.exceptions.DisambiguationError as e:\n        print('A disambiguation page has been retrieved. You could use the following options:\\n')\n        print(e.options)\n    except wikipedia.exceptions.PageError as e:\n        print('Wikipedia does not have a page with the given title')", "compilation_passed": true, "time": 0.8324410915374756, "tests_passed": true, "error": null}
{"code": "try:\n        page = wikipedia.page(page_title)\n        text = page.content\n    except wikipedia.exceptions.DisambiguationError as e:\n        page = wikipedia.page(e.options[0])\n        text = page.content\n    except Exception as e:\n        print(f\"An error occurred while retrieving the Wikipedia page: {e}\")\n        return None\n\n    wordcloud = WordCloud(width=800, height=400, background_color=\"white\").generate(text)\n    plt.figure(figsize=(8, 4))\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n    plt.tight_layout(pad=0)\n    plt.show()\n    return plt.gca()", "compilation_passed": true, "time": 1.0042469501495361, "tests_passed": true, "error": null}
{"code": "try:\n        page_text = wikipedia.page(page_title).content\n\n        wordcloud = WordCloud().generate(page_text)\n\n        # Display the generated image:\n        plt.imshow(wordcloud, interpolation='bilinear')\n        plt.axis(\"off\")\n        plt.show()\n\n        return plt.gca()\n\n    except Exception as e:\n        print(e)\n        return None", "compilation_passed": true, "time": 0.7324669361114502, "tests_passed": true, "error": null}
{"code": "# get the text of the page\n    page_content = wikipedia.page(page_title)\n    text = page_content.content\n\n    # create the word cloud\n    wordcloud = WordCloud(stopwords=set(), background_color=\"white\", width=1000, height=600).generate(text)\n\n    # show the word cloud\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.axis('off')\n    plt.savefig('wordcloud.png')\n\n    return plt.gca() # return the ax", "compilation_passed": true, "time": 1.0047807693481445, "tests_passed": false, "error": "TimeoutError"}
{"code": "try:\n        page_text = wikipedia.page(page_title).content\n        wordcloud = WordCloud().generate(page_text)\n\n        plt.imshow(wordcloud, interpolation=\"bilinear\")\n        plt.axis(\"off\")\n        plt.show()\n\n        return plt.gca()\n    except:\n        print(\"There is no wikipedia page with that title.\")\n        return None", "compilation_passed": true, "time": 0.7340719699859619, "tests_passed": true, "error": null}
{"code": "try:\n        text = wikipedia.page(page_title).content\n        cloud = WordCloud(collocations=False).generate(text)\n        plt.figure(figsize=(40, 30))\n        plt.imshow(cloud.to_array(), interpolation=\"bilinear\")\n        plt.axis('off')\n        return plt.gca()\n    except wikipedia.exceptions.DisambiguationError as e:\n        print('Error: Disambiguation. There is more than one page with the title:', page_title)\n        print(e.options)\n        return None\n    except wikipedia.exceptions.PageError:\n        print('Error: Page with the title', page_title, 'does not exist')\n        return None\n    except:\n        print('Error: Unknown error')\n        return None", "compilation_passed": true, "time": 0.8194758892059326, "tests_passed": true, "error": null}
{"code": "try:\n        wiki_text = wikipedia.page(page_title).content\n    except:\n        print(f'There is no wikipedia page with title: {page_title}')\n        return None\n\n    # create a word cloud based on the text of the wikipedia page\n    wordcloud = WordCloud(width = 800, height = 800,\n                background_color ='white',\n                min_font_size = 10).generate(wiki_text)\n\n    # plot the WordCloud object\n    plt.figure(figsize = (8, 8), facecolor = None)\n    plt.imshow(wordcloud)\n    plt.axis(\"off\")\n    plt.tight_layout(pad = 0)\n    plt.show()\n\n    # return the Axes object of the plotted data\n    return plt.gca()", "compilation_passed": true, "time": 1.0031108856201172, "tests_passed": true, "error": null}
{"code": "try:\n        text = wikipedia.page(page_title).content\n    except wikipedia.exceptions.DisambiguationError as e:\n        print(f'DisambiguationError: {e}')\n        return None\n    except wikipedia.exceptions.PageError as e:\n        print(f'PageError: {e}')\n        return None\n\n    wc = WordCloud(background_color=\"white\", max_words=1000)\n    wc.generate(text)\n\n    plt.imshow(wc, interpolation='bilinear')\n    plt.axis(\"off\")\n    plt.show()\n    return plt.gca()", "compilation_passed": true, "time": 0.8386938571929932, "tests_passed": true, "error": null}
{"code": "page_content = wikipedia.page(page_title).content\n\n    if page_content is None:\n        print('no result')\n        return None\n\n    # remove \"\\n\"\n    page_content = page_content.replace('\\n', ' ')\n\n    wc = WordCloud(\n        background_color='white',\n        width=1000, height=600\n    ).generate(page_content)\n\n    plt.figure(figsize=(20, 16))\n    plt.imshow(wc)\n    plt.axis(\"off\")\n    plt.savefig('wordcloud.png')\n    # plt.show()\n    plt.close()", "compilation_passed": true, "time": 1.0119731426239014, "tests_passed": false, "error": "TimeoutError"}
{"code": "# get text of page\n    text = wikipedia.page(page_title).content\n    # create wordcloud object\n    wordcloud = WordCloud(width = 3000, height = 2000).generate(text)\n    # plot wordcloud\n    plt.figure(figsize=(40, 30))\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n    ax = plt.show()\n    return ax", "compilation_passed": true, "time": 1.005629062652588, "tests_passed": false, "error": "TimeoutError"}
{"code": "try:\n        wiki_text = wikipedia.page(page_title).content\n        wordcloud = WordCloud(background_color='white', width=1200, height=800).generate(wiki_text)\n        plt.figure(figsize=(10, 8), facecolor=None)\n        plt.imshow(wordcloud)\n        plt.axis(\"off\")\n        plt.tight_layout(pad=0)\n        plt.show()\n        return plt.gca()\n    except:\n        return None", "compilation_passed": true, "time": 1.0010919570922852, "tests_passed": true, "error": null}
{"code": "try:\n        page_text = wikipedia.page(title=page_title).content\n        wc = WordCloud(max_words=100, stopwords='english', background_color='white')\n        wc.generate(page_text)\n        plt.imshow(wc, interpolation='bilinear')\n        plt.axis('off')\n        plt.show()\n        return plt.gca()\n    except Exception as e:\n        print(f'Something went wrong. Error: {e}')", "compilation_passed": true, "time": 0.6634180545806885, "tests_passed": true, "error": null}
{"code": "try:\n        wikipage = wikipedia.page(page_title)\n    except wikipedia.DisambiguationError as e:\n        # Choose the first page in the disambiguation list\n        wikipage = wikipedia.page(e.options[0])\n    except wikipedia.PageError as e:\n        # Return None if the page doesn't exist\n        print(f\"Page with title '{page_title}' does not exist.\")\n        return None\n    text = wikipage.content\n    wordcloud = WordCloud(max_font_size=30, max_words=10000, background_color=\"white\", relative_scaling=0.6).generate(text)\n    plt.figure(figsize=(8, 8))\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n    plt.margins(x=0, y=0)\n    return plt.gca()", "compilation_passed": true, "time": 1.011847972869873, "tests_passed": false, "error": "requests.exceptions.ReadTimeout"}
{"code": "try:\n        wiki_text = wikipedia.page(page_title).content\n        wiki_text = \"\".join([i for i in wiki_text if not i.isdigit()])\n        wc = WordCloud(background_color=\"white\", width=5000, height=3500, max_words=1000)\n        wc_obj = wc.generate(wiki_text)\n        plt.figure(figsize=(10, 6))\n        plt.imshow(wc_obj, interpolation=\"bilinear\")\n        plt.axis(\"off\")\n        plt.title(page_title)\n        plt.show()\n        ax = plt\n    except wikipedia.exceptions.DisambiguationError as e:\n        print(e.options)\n        ax = None\n    except wikipedia.exceptions.PageError:\n        ax = None\n    return ax", "compilation_passed": true, "time": 1.0134050846099854, "tests_passed": false, "error": "TimeoutError"}
{"code": "try:\n        page_text = wikipedia.page(page_title).content\n    except wikipedia.exceptions.DisambiguationError as e:\n        print(\"Disambiguation error:\", e.options)\n        return None\n    except wikipedia.exceptions.PageError as e:\n        print(\"Page error:\", e)\n        return None\n\n    wordcloud = WordCloud(background_color=\"white\").generate(page_text)\n\n    plt.figure(figsize=(8, 8))\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n    plt.margins(x=0, y=0)\n    plt.show()\n\n    ax = plt.gca()\n    return ax", "compilation_passed": true, "time": 0.8415319919586182, "tests_passed": true, "error": null}
{"code": "try:\n        text = wikipedia.page(page_title).content\n        wc = WordCloud()\n        wc.generate(text)\n        fig, ax = plt.subplots()\n        ax.imshow(wc, interpolation=\"bilinear\")\n        plt.axis('off')\n        return ax\n    except wikipedia.exceptions.DisambiguationError:\n        print(f\"Wikipedia disambiguation error: Please provide an exact title for the page.\")\n    except wikipedia.exceptions.PageError:\n        print(f\"Wikipedia page error: The specified page could not be found.\")", "compilation_passed": true, "time": 0.9209117889404297, "tests_passed": true, "error": null}
{"code": "try:\n        page = wikipedia.page(page_title)\n    except wikipedia.exceptions.DisambiguationError as e:\n        page = wikipedia.page(e.options[0])\n    except wikipedia.exceptions.PageError:\n        return None\n\n    text = page.content\n    wordcloud = WordCloud(max_font_size=40).generate(text)\n\n    # plot the word cloud\n    plt.figure()\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n\n    # return the Axes object of the plotted data\n    return plt.gca()", "compilation_passed": true, "time": 1.0094001293182373, "tests_passed": false, "error": "requests.exceptions.ReadTimeout"}
{"code": "try:\n        wiki_page = wikipedia.page(page_title)\n    except:\n        ax = None\n    else:\n        wordcloud = WordCloud(\n            max_font_size=40,\n            collocations = False,\n            stopwords={}\n        ).generate(wiki_page.content)\n\n        # Display the generated image:\n        ax = plt.subplot()\n        ax.imshow(wordcloud, interpolation='bilinear')\n        ax.axis(\"off\")\n        ax.grid(\"off\")\n        ax.margins(0)\n        return ax", "compilation_passed": true, "time": 0.6246528625488281, "tests_passed": true, "error": null}
{"code": "try:\n        page = wikipedia.page(title=page_title)\n    except Exception:\n        return None\n\n    text = page.content\n\n    cloud = WordCloud()\n    cloud.generate_from_text(text)\n\n    cloud.to_file('wordcloud.png')\n\n    ax = plt.gca()\n    ax.imshow(cloud)\n    ax.set_title('WordCloud')\n    ax.axis('off')\n    plt.show()\n\n    return ax", "compilation_passed": true, "time": 0.925300121307373, "tests_passed": true, "error": null}
