{"code": "if not Path(source_dir).is_dir():\n        raise ValueError(f\"{source_dir} is not a valid directory\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(f\"{target_dir} is not a valid directory\")\n\n    files_to_move = [\n        file for file in Path(source_dir).iterdir()\n        if file.suffix in extensions\n    ]\n\n    for file in files_to_move:\n        shutil.move(file, target_dir)\n\n    return len(files_to_move)", "compilation_passed": true, "time": 0.022410869598388672, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).is_dir():\n        raise ValueError(f\"The source directory '{source_dir}' does not exist.\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(f\"The target directory '{target_dir}' does not exist.\")\n\n    moved_files = 0\n    for extension in extensions:\n        if not extension.startswith('.'):\n            extension = '.' + extension\n        for file_path in Path(source_dir).glob(f'*{extension}'):\n            shutil.move(file_path, target_dir)\n            moved_files += 1\n\n    return moved_files", "compilation_passed": true, "time": 0.019176006317138672, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).is_dir():\n        raise ValueError(f\"Source directory '{source_dir}' does not exist\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(f\"Target directory '{target_dir}' does not exist\")\n\n    num_moved_files = 0\n    for ext in extensions:\n        for file in Path(source_dir).glob(f\"*{ext}\"):\n            shutil.move(str(file), target_dir)\n            num_moved_files += 1\n\n    return num_moved_files", "compilation_passed": true, "time": 0.019376277923583984, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).is_dir() or not Path(target_dir).is_dir():\n        raise ValueError('source_dir or target_dir does not exist')\n\n    files = [file for file in Path(source_dir).iterdir() if file.suffix in extensions]\n    moved_files_count = 0\n\n    for file in files:\n        shutil.move(str(file), target_dir)\n        moved_files_count += 1\n\n    return moved_files_count", "compilation_passed": true, "time": 0.01889777183532715, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_dir):\n        raise ValueError(\"Source directory does not exist\")\n    if not os.path.exists(target_dir):\n        raise ValueError(\"Target directory does not exist\")\n\n    moved_files = 0\n    for extension in extensions:\n        files = Path(source_dir).rglob(f'*{extension}')\n        for file in files:\n            if os.path.isfile(file):\n                shutil.move(file, target_dir)\n                moved_files += 1\n    return moved_files", "compilation_passed": true, "time": 0.019166946411132812, "tests_passed": true, "error": null}
{"code": "source_path = Path(source_dir)\n    target_path = Path(target_dir)\n\n    if not source_path.is_dir():\n        raise ValueError('The source directory does not exist.')\n\n    if not target_path.is_dir():\n        raise ValueError('The target directory does not exist.')\n\n    moved_files = 0\n    for extension in extensions:\n        for file in source_path.glob(f'*{extension}'):\n            shutil.move(file, target_path)\n            moved_files += 1\n\n    return moved_files", "compilation_passed": true, "time": 0.019263029098510742, "tests_passed": true, "error": null}
{"code": "# Check that source and target directories exist\n    source_dir_path = Path(source_dir)\n    target_dir_path = Path(target_dir)\n    if not source_dir_path.is_dir():\n        raise ValueError(\"The source directory does not exist\")\n    if not target_dir_path.is_dir():\n        raise ValueError(\"The target directory does not exist\")\n\n    # Initialize variables\n    moved_count = 0\n\n    # Iterate through files in source directory\n    for file_path in source_dir_path.iterdir():\n        # Check if file has the right extension\n        if file_path.suffix in extensions:\n            # Move file to target directory\n            shutil.move(file_path, target_dir_path)\n            # Increment the number of moved files\n            moved_count += 1\n\n    return moved_count", "compilation_passed": true, "time": 0.018198013305664062, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists():\n        raise ValueError('The directory does not exist')\n    if not Path(target_dir).exists():\n        raise ValueError('The directory does not exist')\n\n    source_files = [f for f in Path(source_dir).iterdir() if f.suffix in extensions]\n    moved_files = 0\n    for file in source_files:\n        shutil.move(file, target_dir)\n        moved_files += 1\n    return moved_files", "compilation_passed": true, "time": 0.018716812133789062, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError('Source or target directory does not exist.')\n    moved_files_count = 0\n    for ext in extensions:\n        for file_path in Path(source_dir).rglob(f'*{ext}'):\n            shutil.move(file_path, target_dir)\n            moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01943206787109375, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).is_dir():\n        raise ValueError(\"Source directory does not exist.\")\n\n    if not Path(target_dir).is_dir():\n        raise ValueError(\"Target directory does not exist.\")\n\n    moved_files = 0\n    for ext in extensions:\n        if ext[0] != \".\":\n            ext = f\".{ext}\"\n\n        for filename in os.listdir(source_dir):\n            filepath = Path(source_dir, filename)\n            if filename.endswith(ext) and filepath.is_file():\n                shutil.move(filepath, Path(target_dir, filename))\n                moved_files += 1\n    return moved_files", "compilation_passed": true, "time": 0.018497943878173828, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError('Source or target directory does not exist.')\n\n    moved_files_count = 0\n    for ext in extensions:\n        for file in Path(source_dir).iterdir():\n            if file.suffix == ext:\n                shutil.move(str(file), target_dir)\n                moved_files_count += 1\n\n    return moved_files_count", "compilation_passed": true, "time": 0.01906895637512207, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists():\n        raise ValueError(\"Source directory does not exist\")\n\n    if not Path(target_dir).exists():\n        raise ValueError(\"Target directory does not exist\")\n\n    count = 0\n    for ext in extensions:\n        count += sum(1 for file in Path(source_dir).rglob(f'*{ext}') if file.is_file())\n        shutil.move(source_dir, target_dir)\n\n    return count", "compilation_passed": true, "time": 0.002680063247680664, "tests_passed": false, "error": "shutil.Error"}
{"code": "if not Path(source_dir).is_dir() or not Path(target_dir).is_dir():\n        raise ValueError(\"One of the specified paths does not exist.\")\n\n    number_of_moved_files = 0\n    for extension in extensions:\n        source_path = Path(source_dir) / extension[1:]\n        for file in source_path.rglob('*'):\n            if file.suffix == extension:\n                target_path = Path(target_dir) / file.name\n                shutil.move(str(file), str(target_path))\n                number_of_moved_files += 1\n    return number_of_moved_files", "compilation_passed": true, "time": 0.002179861068725586, "tests_passed": true, "error": null}
{"code": "source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n\n    if not source_dir.is_dir() or not target_dir.is_dir():\n        raise ValueError(\"Both source_dir and target_dir should be valid directory paths\")\n\n    moved_files_count = 0\n\n    for extension in extensions:\n        for file in source_dir.glob(f\"*{extension}\"):\n            target_file = target_dir / file.name\n            if not target_file.exists():\n                shutil.move(file, target_file)\n                moved_files_count += 1\n\n    return moved_files_count", "compilation_passed": true, "time": 0.01812291145324707, "tests_passed": true, "error": null}
{"code": "if not (Path(source_dir).exists() and Path(target_dir).exists()):\n        raise ValueError(\"Source directory or target directory does not exist.\")\n    count = 0\n    for extension in extensions:\n        for file_name in os.listdir(source_dir):\n            if file_name.endswith(extension):\n                shutil.move(\n                    os.path.join(source_dir, file_name),\n                    os.path.join(target_dir, file_name))\n                count += 1\n    return count", "compilation_passed": true, "time": 0.018485069274902344, "tests_passed": true, "error": null}
{"code": "source_path = Path(source_dir)\n    target_path = Path(target_dir)\n\n    if not source_path.exists():\n        raise ValueError(f\"Source directory {source_dir} does not exist\")\n\n    if not target_path.exists():\n        raise ValueError(f\"Target directory {target_dir} does not exist\")\n\n    moved_files_count = 0\n\n    for ext in extensions:\n        # Ensure the extension starts with a dot\n        ext = ext if ext.startswith(\".\") else f\".{ext}\"\n        # Get a list of files with the specified extension in the source directory\n        files_to_move = [file for file in source_path.iterdir() if file.is_file() and file.suffix == ext]\n        # Move each file to the target directory\n        for file in files_to_move:\n            shutil.move(file, target_path)\n            moved_files_count += 1\n\n    return moved_files_count", "compilation_passed": true, "time": 0.018604040145874023, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError(\"Source directory or target directory does not exist.\")\n\n    count = 0\n\n    for ext in extensions:\n        for file in Path(source_dir).glob(f'**/*{ext}'):\n            shutil.move(str(file), target_dir)\n            count += 1\n\n    return count", "compilation_passed": true, "time": 0.01821303367614746, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists():\n        raise ValueError('Directory does not exist!')\n    if not Path(target_dir).exists():\n        raise ValueError('Directory does not exist!')\n\n    files_moved = 0\n\n    for ext in extensions:\n        for file in Path(source_dir).glob(f'*{ext}'):\n            shutil.move(file, target_dir)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.01885700225830078, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError('source_dir or target_dir does not exist.')\n    num_moved = 0\n    for ext in extensions:\n        if ext.startswith('.'):\n            ext = ext[1:]\n        for file in Path(source_dir).iterdir():\n            if file.suffix == f'.{ext}' and file.is_file():\n                shutil.move(file, target_dir)\n                num_moved += 1\n    return num_moved", "compilation_passed": true, "time": 0.018341064453125, "tests_passed": true, "error": null}
{"code": "source = Path(source_dir)\n    target = Path(target_dir)\n\n    if not source.exists() or not source.is_dir():\n        raise ValueError(\"The directory specified by source_dir does not exist.\")\n    if not target.exists() or not target.is_dir():\n        raise ValueError(\"The directory specified by target_dir does not exist.\")\n\n    moved_files = 0\n    for ext in extensions:\n        for file in source.iterdir():\n            if file.suffix == ext:\n                shutil.move(file, target)\n                moved_files += 1\n\n    return moved_files", "compilation_passed": true, "time": 0.018373966217041016, "tests_passed": true, "error": null}
{"code": "source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n\n    if not source_dir.is_dir():\n        raise ValueError(\"Source directory does not exist.\")\n\n    if not target_dir.is_dir():\n        raise ValueError(\"Target directory does not exist.\")\n\n    moved_files = 0\n\n    for extension in extensions:\n        files_to_move = source_dir.glob(f\"*{extension}\")\n\n        for file in files_to_move:\n            shutil.move(file, target_dir)\n            moved_files += 1\n\n    return moved_files", "compilation_passed": true, "time": 0.018545866012573242, "tests_passed": true, "error": null}
{"code": "# Check if the source directory and target directory exist.\n    source_path = Path(source_dir)\n    target_path = Path(target_dir)\n    if not source_path.is_dir():\n        raise ValueError(\"Source directory does not exist.\")\n    if not target_path.is_dir():\n        raise ValueError(\"Target directory does not exist.\")\n    # Find files in the source directory with matching extensions\n    files = list(source_path.glob(f\"*{extensions[0]}\"))\n    for ext in extensions[1:]:\n        files += list(source_path.glob(f\"*{ext}\"))\n    # Move the files to the target directory\n    moved_count = 0\n    for file in files:\n        shutil.move(file, target_path)\n        moved_count += 1\n    return moved_count", "compilation_passed": true, "time": 0.01724410057067871, "tests_passed": true, "error": null}
{"code": "# Check if the source and target directories exist\n    if not Path(source_dir).exists():\n        raise ValueError(f\"Source directory '{source_dir}' does not exist.\")\n    if not Path(target_dir).exists():\n        raise ValueError(f\"Target directory '{target_dir}' does not exist.\")\n\n    # Initialize a counter for moved files\n    moved_files_count = 0\n\n    # Iterate through the files in the source directory\n    for file in Path(source_dir).iterdir():\n        # Check if the file is a file and its extension is in the specified extensions\n        if file.is_file() and file.suffix.lower() in extensions:\n            # Construct the new path for the file in the target directory\n            target_file = Path(target_dir) / file.name\n            # Move the file\n            shutil.move(file, target_file)\n            # Increment the counter\n            moved_files_count += 1\n\n    # Return the count of moved files\n    return moved_files_count", "compilation_passed": true, "time": 0.01902604103088379, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists():\n        raise ValueError(f\"Source directory '{source_dir}' does not exist.\")\n\n    if not Path(target_dir).exists():\n        raise ValueError(f\"Target directory '{target_dir}' does not exist.\")\n\n    count_moved_files = 0\n    for extension in extensions:\n        files = Path(source_dir).glob(f\"*{extension}\")\n        for file in files:\n            shutil.move(file, Path(target_dir, file.name))\n            count_moved_files += 1\n\n    return count_moved_files", "compilation_passed": true, "time": 0.017955780029296875, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError(\"Source or target directory does not exist.\")\n    moved_files_count = 0\n    for ext in extensions:\n        for file in Path(source_dir).rglob(f'*{ext}'):\n            if file.is_file():\n                shutil.move(str(file), target_dir)\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.017816781997680664, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(source_dir) or not os.path.exists(target_dir):\n        raise ValueError(\"Source and target directories must exist.\")\n\n    moved_count = 0\n    for ext in extensions:\n        moved_count += move_files_by_ext(source_dir, target_dir, ext)\n\n    return moved_count", "compilation_passed": true, "time": 0.002118825912475586, "tests_passed": false, "error": "NameError"}
{"code": "if not Path(source_dir).is_dir() or not Path(target_dir).is_dir():\n        raise ValueError(\"source_dir or target_dir does not exist.\")\n    count = 0\n    for ext in extensions:\n        for file in Path(source_dir).rglob(f'*{ext}'):\n            shutil.move(file, target_dir)\n            count += 1\n    return count", "compilation_passed": true, "time": 0.01936793327331543, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).is_dir() or not Path(target_dir).is_dir():\n        raise ValueError(\"source_dir or target_dir does not exist\")\n\n    moved_files_count = 0\n\n    for extension in extensions:\n        for file in os.listdir(source_dir):\n            if file.endswith(extension):\n                source_path = os.path.join(source_dir, file)\n                target_path = os.path.join(target_dir, file)\n                shutil.move(source_path, target_path)\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01637125015258789, "tests_passed": true, "error": null}
{"code": "if not Path(source_dir).is_dir():\n        raise ValueError(\"Source directory does not exist!\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(\"Target directory does not exist!\")\n    if not extensions:\n        raise ValueError(\"Extensions list is empty!\")\n\n    files_to_move = [\n        file_path for file_path in Path(source_dir).rglob(\"*\")\n        if file_path.suffix in extensions\n    ]\n\n    moved_files = 0\n    for file_path in files_to_move:\n        if Path(target_dir).is_dir():\n            shutil.move(file_path, target_dir)\n            moved_files += 1\n            print(\n                f\"Moved file '{file_path.name}' from '{file_path.parent}' to '{Path(target_dir).resolve()}'.\"\n            )\n        else:\n            print(f\"Target directory '{Path(target_dir).resolve()", "compilation_passed": false, "time": 0.0001163482666015625, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not Path(source_dir).is_dir():\n        raise ValueError(f\"source_dir '{source_dir}' is not a valid directory\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(f\"target_dir '{target_dir}' is not a valid directory\")\n\n    # Calculate the number of files before moving.\n    total_files = sum(1 for file in Path(target_dir).iterdir())\n\n    # Move the files with the specified extensions.\n    for extension in extensions:\n        for file in Path(source_dir).iterdir():\n            if file.suffix == extension:\n                shutil.move(file, target_dir)\n\n    # Calculate the number of files after moving.\n    moved_files = sum(1 for file in Path(target_dir).iterdir()) - total_files\n\n    return moved_files", "compilation_passed": true, "time": 0.019192218780517578, "tests_passed": true, "error": null}
