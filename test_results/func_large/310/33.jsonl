{"code": "# Generate random data\n    people = []\n    for i in range(PEOPLE_COUNT):\n        name = f\"Person {i+1}\"\n        age = random.randint(18, 65)\n        height = round(random.uniform(1.7, 2.0), 2)\n        weight = round(random.uniform(60, 90), 2)\n        people.append([name, age, height, weight])\n\n    # Write data to CSV file\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(COLUMNS)\n        for person in people:\n            writer.writerow(person)\n\n    # Calculate and append averages to CSV file\n    averages = [f\"Average\"]\n    for i in range(1, len(COLUMNS)):\n        values = [row[i] for row in people]\n        avg = round(mean(values), 2) if values else None\n        averages.append(avg)", "compilation_passed": true, "time": 0.0018172264099121094, "tests_passed": false, "error": "TypeError"}
{"code": "with open(filename, 'w', newline='') as csv_file:\n        writer = csv.writer(csv_file)\n        writer.writerow(COLUMNS)\n\n        # Generate random data for people\n        people = []\n        for _ in range(PEOPLE_COUNT):\n            name = 'Person'\n            age = random.randint(18, 50)\n            height = random.randint(150, 200)\n            weight = random.randint(45, 120)\n            people.append([name, age, height, weight])\n            writer.writerow([name, age, height, weight])\n\n        # Calculate and append averages\n        averages = ['Average'] + [mean(values) for values in zip(*people)]\n        writer.writerow(averages)\n\n    return filename", "compilation_passed": true, "time": 0.0022079944610595703, "tests_passed": false, "error": "TypeError"}
{"code": "# Generate random data\n    people_data = []\n    for i in range(PEOPLE_COUNT):\n        name = f\"Person {i+1}\"\n        age = random.randint(20, 80)\n        height = random.randint(160, 220)\n        weight = random.randint(50, 120)\n        people_data.append([name, age, height, weight])\n\n    # Calculate averages\n    averages = [\"Average\"] + [mean([row[i] for row in people_data]) for i in range(1, len(COLUMNS))]\n\n    # Write CSV file\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(COLUMNS)\n        writer.writerows(people_data)\n        writer.writerow(averages)\n\n    # Return file path\n    return os.path.abspath(filename)", "compilation_passed": true, "time": 0.0032498836517333984, "tests_passed": true, "error": null}
{"code": "people_data = generate_people_data(PEOPLE_COUNT)\n    write_data_to_file(filename, people_data, COLUMNS)\n    avg_row = generate_average_row(people_data, COLUMNS[1:])\n    append_data_to_file(filename, [avg_row], append=True)\n    return os.path.abspath(filename)", "compilation_passed": true, "time": 0.0010409355163574219, "tests_passed": false, "error": "NameError"}
{"code": "with open(filename, 'w', newline='') as f:\n        writer = csv.writer(f)\n\n        # Write the header row\n        writer.writerow(COLUMNS)\n\n        # Generate random data for each person\n        for i in range(PEOPLE_COUNT):\n            age = random.randint(20, 60)\n            height = random.randint(150, 200)\n            weight = random.randint(50, 100)\n            writer.writerow([f'Person {i+1}', age, height, weight])\n\n    # Calculate average age, height, and weight\n    with open(filename, 'r') as f:\n        reader = csv.DictReader(f, skipinitialspace=True)\n        ages = [int(row['Age']) for row in reader if row['Age']]\n        heights = [int(row['Height']) for row in reader if row['Height']]\n        weights = [int(row['Weight']) for row in reader if row['Weight']]\n\n    # Write average values to", "compilation_passed": true, "time": 0.0016369819641113281, "tests_passed": false, "error": "TypeError"}
{"code": "assert isinstance(filename, str), \"Filename must be a string\"\n\n    # Generate people data\n    people = [generate_person() for _ in range(PEOPLE_COUNT)]\n\n    # Append average age, height, and weight to the people list\n    avg_age, avg_height, avg_weight = calculate_average(people)\n    people.append([f\"Average ({PEOPLE_COUNT})\", avg_age, avg_height, avg_weight])\n\n    # Write people data to the CSV file\n    with open(filename, mode='w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(COLUMNS)\n        writer.writerows(people)\n\n    return os.path.abspath(filename)", "compilation_passed": true, "time": 0.001188039779663086, "tests_passed": false, "error": "NameError"}
{"code": "with open(filename, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writerow(COLUMNS)\n\n        people = generate_people(PEOPLE_COUNT)\n        writer.writerows(people)\n\n        avg_age, avg_height, avg_weight = get_average_attributes(people)\n\n        writer.writerow(['Average'])\n        writer.writerow(['', avg_age, avg_height, avg_weight])\n\n    return os.path.abspath(filename)", "compilation_passed": true, "time": 0.0011749267578125, "tests_passed": false, "error": "NameError"}
{"code": "# Create directory if it does not exist\n    dir_name = 'data'\n    if not os.path.exists(dir_name):\n        os.makedirs(dir_name)\n\n    # Generate CSV file\n    full_path = os.path.join(dir_name, filename)\n    with open(full_path, 'w') as csv_file:\n        writer = csv.writer(csv_file)\n        writer.writerow(COLUMNS)\n        for _ in range(PEOPLE_COUNT):\n            name = ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=random.randint(5, 10)))\n            age = random.randint(18, 65)\n            height = round(random.uniform(1.7, 2.2), 2)\n            weight = round(random.uniform(50, 90), 2)\n            writer.writerow([name, age, height, weight])\n        writer.writerow(['Average'] + [mean([row[i]", "compilation_passed": false, "time": 0.00026488304138183594, "tests_passed": false, "error": "SyntaxError"}
{"code": "with open(filename, 'w', newline='') as f:\n        writer = csv.writer(f)\n\n        # Write column names\n        writer.writerow(COLUMNS)\n\n        # Write person data\n        for i in range(PEOPLE_COUNT):\n            name = ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=random.randint(4, 10)))\n            age = random.randint(20, 60)\n            height = random.randint(150, 200)\n            weight = random.randint(50, 100)\n            writer.writerow([name, age, height, weight])\n\n    # Append average data\n    with open(filename, 'a', newline='') as f:\n        writer = csv.writer(f)\n        writer.writerow([])  # Empty row to separate data and average\n\n        with open(filename, 'r', newline='') as f:\n            reader = csv.DictReader(f", "compilation_passed": false, "time": 0.0002391338348388672, "tests_passed": false, "error": "SyntaxError"}
{"code": "names = ['John', 'Mary', 'Bob', 'Alice', 'David', 'Sarah', 'Mike', 'Emma', 'Karen', 'Tom']\n    ages = [random.randint(20, 60) for _ in range(PEOPLE_COUNT)]\n    heights = [random.randint(160, 200) for _ in range(PEOPLE_COUNT)]\n    weights = [random.randint(50, 90) for _ in range(PEOPLE_COUNT)]\n    avg_age = round(mean(ages))\n    avg_height = round(mean(heights))\n    avg_weight = round(mean(weights))\n\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(COLUMNS)\n        for _ in range(PEOPLE_COUNT):\n            person = [\n                random.choice(names),\n                random.choice(ages),\n                random.choice(heights),\n", "compilation_passed": false, "time": 0.0002529621124267578, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Generate random names\n    names = [f'Person {i + 1}' for i in range(PEOPLE_COUNT)]\n\n    # Generate random ages\n    ages = [random.randint(20, 60) for _ in range(PEOPLE_COUNT)]\n\n    # Generate random heights in meters\n    heights = [random.randint(170, 190) / 100 for _ in range(PEOPLE_COUNT)]\n\n    # Generate random weights in kilograms\n    weights = [random.randint(60, 90) for _ in range(PEOPLE_COUNT)]\n\n    # Open the CSV file for writing\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n\n        # Write the header row\n        writer.writerow(COLUMNS)\n\n        # Write the data rows\n        for i in range(PEOPLE_COUNT):\n            writer.writerow([names[i], ages[i], heights[i], weights[i]])\n\n        #", "compilation_passed": true, "time": 0.0013706684112548828, "tests_passed": false, "error": "TypeError"}
{"code": "with open(filename, mode='w', newline='') as f:\n        writer = csv.writer(f, delimiter=',', quotechar='\"', quoting=csv.QUOTE_MINIMAL)\n        writer.writerow(COLUMNS)\n        people = []\n\n        for _ in range(PEOPLE_COUNT):\n            age = random.randint(18, 60)\n            height = round(random.uniform(1.7, 1.9), 2)\n            weight = round(random.uniform(70, 90), 2)\n            people.append([f'Person {_+1}', age, height, weight])\n            writer.writerow(people[-1])\n\n        writer.writerow([])\n\n        total_age = sum(person[1] for person in people)\n        total_height = sum(person[2] for person in people)\n        total_weight = sum(person[3] for person in people)\n\n        writer.writerow(['', int(total_age / len(people)), round(", "compilation_passed": false, "time": 0.0002949237823486328, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Create a list of 100 random people with their name, age, height, and weight\n    people = []\n    for _ in range(PEOPLE_COUNT):\n        name = ''.join(random.choices('abcdefghijklmnopqrstuvwxyz', k=8)).title()\n        age = random.randint(18, 70)\n        height = random.randint(150, 200)\n        weight = round(random.gauss(70, 10), 1)\n        people.append([name, age, height, weight])\n\n    # Sort the people by age, height, and weight\n    people.sort(key=lambda x: (x[1], x[2], x[3]))\n\n    # Append the averages\n    averages = [\"Average\", round(mean(x[1] for x in people)),\n                round(mean(x[2] for x in people)), round(mean(x[3] for x in people), 1)]\n    people.append(averages)", "compilation_passed": true, "time": 0.0014939308166503906, "tests_passed": false, "error": "TypeError"}
{"code": "# Generate a list of people with random names, ages, heights, and weights\n    people = []\n    for i in range(PEOPLE_COUNT):\n        name = ''.join(random.choices('abcdefghijklmnopqrstuvwxyz', k=8)).capitalize()\n        age = random.randint(18, 65)\n        height = random.randint(150, 200)\n        weight = random.randint(50, 120)\n        people.append([name, age, height, weight])\n\n    # Calculate the average age, height, and weight\n    averages = [PEOPLE_COUNT, mean(x[1] for x in people), mean(x[2] for x in people), mean(x[3] for x in people)]\n\n    # Append the averages to the end of the list of people\n    people.append(averages)\n\n    # Write the list of people to a CSV file\n    with open(filename, 'w', newline='') as csvfile:\n        writer = c", "compilation_passed": true, "time": 0.0014078617095947266, "tests_passed": false, "error": "NameError"}
{"code": "# Create a list of people with random names, ages, heights, and weights\n    people = [\n        [random.choice(['Alice', 'Bob', 'Charlie', 'David']),\n         random.randint(18, 50),\n         random.randint(150, 200),\n         random.randint(50, 100)] for _ in range(PEOPLE_COUNT)]\n\n    # Sort the list of people by age in descending order\n    people.sort(key=lambda x: x[1], reverse=True)\n\n    # Calculate average age, height, and weight\n    averages = [f'Average: {mean([x[i] for x in people])}' for i in range(3)]\n\n    # Write the people data to a CSV file\n    with open(filename, 'w', newline='') as file:\n        writer = csv.writer(file)\n        writer.writerow(COLUMNS)\n        for person in people:\n            writer.writerow(person)\n        writer.writerow([])", "compilation_passed": true, "time": 0.001359701156616211, "tests_passed": false, "error": "TypeError"}
{"code": "# Create the CSV file\n    with open(filename, mode='w', newline='') as file:\n        writer = csv.writer(file, delimiter=',')\n\n        # Write the column names\n        writer.writerow(COLUMNS)\n\n        # Generate simulated data for 100 people\n        for _ in range(PEOPLE_COUNT):\n            name = ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=random.randint(3, 10)))\n            age = random.randint(18, 65)\n            height = random.randint(150, 200)\n            weight = random.randint(50, 90)\n            writer.writerow([name, age, height, weight])\n\n        # Read the generated data and calculate averages\n        with open(filename, mode='r', newline='') as file:\n            reader = csv.DictReader(file)\n            ages = [int(row['Age']) for row in reader if row['Age']]\n", "compilation_passed": true, "time": 0.00150299072265625, "tests_passed": false, "error": "TypeError"}
{"code": "# Generate random data\n    people = [\n        {\n            'Name': f'Person {i + 1}',\n            'Age': random.randint(18, 80),\n            'Height': random.randint(150, 200),\n            'Weight': random.randint(50, 120)\n        } for i in range(PEOPLE_COUNT)\n    ]\n\n    # Calculate averages\n    average_age = int(mean([person['Age'] for person in people]))\n    average_height = int(mean([person['Height'] for person in people]))\n    average_weight = int(mean([person['Weight'] for person in people]))\n\n    # Save data to CSV file\n    with open(filename, mode='w', newline='') as csvfile:\n        writer = csv.DictWriter(csvfile, fieldnames=COLUMNS)\n        writer.writeheader()\n        for person in people:\n            writer.writerow(person)\n        writer.writerow({\n            'Name': 'Average',\n            'Age", "compilation_passed": false, "time": 0.00011801719665527344, "tests_passed": false, "error": "SyntaxError"}
{"code": "with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(COLUMNS)\n        people = []\n        for i in range(PEOPLE_COUNT):\n            name = f'Person {i + 1}'\n            age = random.randint(18, 65)\n            height = round(random.uniform(1.7, 2.2), 2)\n            weight = round(random.uniform(60, 100), 1)\n            people.append([name, age, height, weight])\n            writer.writerow([name, age, height, weight])\n\n        writer.writerow([])\n        writer.writerow(['Average age', 'Average height', 'Average weight'])\n        writer.writerow([\n            mean(person[1] for person in people),\n            mean(person[2] for person in people),\n            mean(person[3] for person in people)\n        ])\n\n    return os.path.abspath(filename)\n", "compilation_passed": true, "time": 0.0017020702362060547, "tests_passed": true, "error": null}
{"code": "names = ['Anna', 'Bob', 'Chloe', 'Dave', 'Ella', 'Fiona', 'Greg', 'Hannah', 'Ian', 'Julia'] * 10\n    ages = [random.randint(20, 60) for _ in range(PEOPLE_COUNT)]\n    heights = [random.randint(160, 190) for _ in range(PEOPLE_COUNT)]\n    weights = [random.randint(50, 100) for _ in range(PEOPLE_COUNT)]\n    people = [\n        [name, age, height, weight]\n        for name, age, height, weight in zip(names, ages, heights, weights)\n    ]\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(COLUMNS)\n        writer.writerows(people)\n        avg_age = mean(ages)\n        avg_height = mean(heights)\n        avg_", "compilation_passed": true, "time": 0.0014510154724121094, "tests_passed": false, "error": "NameError"}
{"code": "people = generate_people_data(PEOPLE_COUNT)\n    average_age, average_height, average_weight = calculate_average_attributes(people)\n\n    with open(filename, mode='w', newline='') as csvfile:\n        writer = csv.DictWriter(csvfile, fieldnames=COLUMNS)\n        writer.writeheader()\n        for person in people:\n            writer.writerow(person)\n        writer.writerow({'Name': 'Average', 'Age': average_age, 'Height': average_height, 'Weight': average_weight})\n\n    return os.path.abspath(filename)", "compilation_passed": true, "time": 0.0011398792266845703, "tests_passed": false, "error": "NameError"}
{"code": "# Generate people data\n    people = [{'Name': f\"Person {i}\",\n               'Age': random.randint(18, 60),\n               'Height': random.randint(160, 200),\n               'Weight': random.randint(50, 100)} for i in range(PEOPLE_COUNT)]\n\n    # Calculate averages\n    averages = {'Name': 'Average',\n                'Age': mean([p['Age'] for p in people]),\n                'Height': mean([p['Height'] for p in people]),\n                'Weight': mean([p['Weight'] for p in people])}\n\n    # Create CSV file with people data and averages\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.DictWriter(csvfile, fieldnames=COLUMNS)\n        writer.writeheader()\n        for person in people:\n            writer.writerow(person)\n        writer.writerow(averages)\n\n    return os.path.abspath(filename)", "compilation_passed": true, "time": 0.003381013870239258, "tests_passed": true, "error": null}
{"code": "with open(filename, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writerow(COLUMNS)\n\n        for i in range(PEOPLE_COUNT):\n            name = f\"Person {i+1}\"\n            age = random.randint(18, 65)\n            height = random.randint(160, 190)\n            weight = random.randint(50, 100)\n            writer.writerow([name, age, height, weight])\n\n        # Calculate the average age, height, and weight\n        with open(filename, 'r') as f:\n            reader = csv.reader(f)\n            data = list(reader)\n            ages = [int(row[1]) for row in data[1:]]\n            heights = [int(row[2]) for row in data[1:]]\n            weights = [int(row[3]) for row in data[1:]]\n            avg_age = mean(ages)\n            avg_height = mean(heights)\n            avg", "compilation_passed": true, "time": 0.0015931129455566406, "tests_passed": false, "error": "statistics.StatisticsError"}
{"code": "# Generate random data for 100 people\n    people_data = []\n    for i in range(PEOPLE_COUNT):\n        name = \"Person \" + str(i + 1)\n        age = random.randint(18, 65)\n        height = random.randint(160, 200)\n        weight = random.randint(50, 90)\n        people_data.append([name, age, height, weight])\n\n    # Write data to CSV file\n    with open(filename, 'w', newline='') as file:\n        writer = csv.writer(file)\n        writer.writerow(COLUMNS)\n        writer.writerows(people_data)\n\n    # Append averages to CSV file\n    with open(filename, 'a', newline='') as file:\n        writer = csv.writer(file)\n        writer.writerow([\"Average\", mean([row[1] for row in people_data]),\n                         mean([row[2] for row in people_data]), mean([row", "compilation_passed": false, "time": 0.0002751350402832031, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Generating the simulated data\n    data = [COLUMNS]\n    for _ in range(PEOPLE_COUNT):\n        name = random.choice(['John', 'Jane', 'Mary', 'David', 'Robert', 'Sarah', 'Mark', 'Michael', 'Emily', 'Laura', 'Daniel', 'Nancy', 'Steven', 'Linda', 'Kevin', 'Sandra', 'Paul', 'Ashley', 'Andrew', 'Brian', 'Lisa', 'George', 'Jennifer', 'Kenneth', 'Donna', 'Edward', 'Carol', 'Ronald', 'Margaret', 'Timothy', 'Ruth', 'Jeffrey', 'Nicole', 'Gary', 'Pamela'])\n        age = random.randint(18, 65)\n        height = random.randint(160, 190)\n        weight = random.randint(50, 90)\n", "compilation_passed": true, "time": 0.0011398792266845703, "tests_passed": false, "error": "TypeError"}
{"code": "# Generate random data for each person\n    people = []\n    for _ in range(PEOPLE_COUNT):\n        person = [\n            f'Person {i}',  # Name\n            random.randint(18, 80),  # Age\n            random.randint(160, 210),  # Height\n            random.randint(50, 100),  # Weight\n        ]\n        people.append(person)\n\n    # Calculate averages\n    ages = [person[1] for person in people]\n    heights = [person[2] for person in people]\n    weights = [person[3] for person in people]\n    average_age = round(mean(ages), 2)\n    average_height = round(mean(heights), 2)\n    average_weight = round(mean(weights), 2)\n\n    # Add averages to the end of the data\n    averages = ['', average_age, average_height, average_weight]\n    people.append(averages)\n\n    # Write data to CS", "compilation_passed": true, "time": 0.0010900497436523438, "tests_passed": false, "error": "NameError"}
{"code": "with open(filename, mode='w', newline='') as csv_file:\n        writer = csv.writer(csv_file)\n\n        # Write the column names\n        writer.writerow(COLUMNS)\n\n        # Generate random data for people\n        for _ in range(PEOPLE_COUNT):\n            name = f\"Person {random.randint(1, 100)}\"\n            age = random.randint(20, 50)\n            height = random.randint(150, 190)\n            weight = random.randint(50, 100)\n\n            writer.writerow([name, age, height, weight])\n\n    # Calculate averages\n    average_age, average_height, average_weight = 0, 0, 0\n    with open(filename, mode='r') as csv_file:\n        reader = csv.reader(csv_file)\n        next(reader)  # Skip the header row\n        for row in reader:\n            average_age += int(row[1])\n            average_height +=", "compilation_passed": false, "time": 0.00023984909057617188, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Generate random data for each person\n    people_data = []\n    for _ in range(PEOPLE_COUNT):\n        age = random.randint(18, 65)\n        height = random.randint(160, 200)\n        weight = random.randint(50, 90)\n        people_data.append({'Age': age, 'Height': height, 'Weight': weight})\n\n    # Calculate averages for age, height, and weight\n    age_mean = mean(person['Age'] for person in people_data)\n    height_mean = mean(person['Height'] for person in people_data)\n    weight_mean = mean(person['Weight'] for person in people_data)\n\n    # Save the data to a CSV file\n    with open(filename, 'w', newline='') as file:\n        writer = csv.DictWriter(file, fieldnames=COLUMNS)\n        writer.writeheader()\n        for index, person in enumerate(people_data):\n            person['Name'] = f'Person {index + 1}'\n            ", "compilation_passed": true, "time": 0.0013608932495117188, "tests_passed": false, "error": "TypeError"}
{"code": "with open(filename, 'w', newline='') as f:\n        writer = csv.DictWriter(f, fieldnames=COLUMNS)\n        writer.writeheader()\n        people = []\n        for i in range(PEOPLE_COUNT):\n            age = random.randint(18, 70)\n            height = random.randint(160, 200)\n            weight = random.randint(50, 100)\n            person = {\n                'Name': f\"Name{i+1}\",\n                'Age': age,\n                'Height': height,\n                'Weight': weight\n            }\n            writer.writerow(person)\n            people.append(person)\n        # Calculate averages\n        ages = [person['Age'] for person in people]\n        heights = [person['Height'] for person in people]\n        weights = [person['Weight'] for person in people]\n        avg_age = mean(ages)\n        avg_height = mean(heights)\n        avg_weight = mean(weights)\n        # Append averages to the", "compilation_passed": true, "time": 0.00150299072265625, "tests_passed": false, "error": "TypeError"}
{"code": "# Generate random data for each person\n    people_data = []\n    for i in range(PEOPLE_COUNT):\n        name = f'Person {i + 1}'\n        age = random.randint(18, 60)\n        height = random.uniform(1.6, 1.9)\n        weight = random.uniform(50, 80)\n        people_data.append([name, age, height, weight])\n\n    # Calculate average age, height, and weight\n    ages = [person[1] for person in people_data]\n    heights = [person[2] for person in people_data]\n    weights = [person[3] for person in people_data]\n    avg_age = mean(ages)\n    avg_height = mean(heights)\n    avg_weight = mean(weights)\n\n    # Create the CSV file\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(COLUMNS)\n        for row in people_data:", "compilation_passed": false, "time": 0.00024318695068359375, "tests_passed": false, "error": "IndentationError"}
{"code": "# Create a new folder \"Reports\" if it doesn't exist\n    report_dir = 'Reports'\n    os.makedirs(report_dir, exist_ok=True)\n\n    # Generate random data for 100 people and append it to the CSV file\n    with open(os.path.join(report_dir, filename), 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writerow(COLUMNS)\n\n        people_data = []\n        ages = []\n        heights = []\n        weights = []\n\n        for i in range(PEOPLE_COUNT):\n            name = f'Person {i+1}'\n            age = random.randint(18, 65)\n            height = random.randint(150, 190)\n            weight = random.randint(50, 100)\n\n            people_data.append([name, age, height, weight])\n            ages.append(age)\n            heights.append(height)\n            weights.append(weight", "compilation_passed": false, "time": 0.00023794174194335938, "tests_passed": false, "error": "SyntaxError"}
