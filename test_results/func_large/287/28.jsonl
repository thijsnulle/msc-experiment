{"code": "# TODO: write the code to meet requirements\n    return 0", "compilation_passed": true, "time": 0.0017211437225341797, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "counter = Counter()\n    for file_name in os.listdir(directory):\n        file_path = os.path.join(directory, file_name)\n        if os.path.isfile(file_path):\n            with open(file_path, 'r') as f:\n                counter.update(f.read().split())\n    with open(filename, 'w') as f:\n        json.dump(counter, f)\n    return sum(counter.values())", "compilation_passed": true, "time": 0.0018050670623779297, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_count = Counter()\n\n    for file in os.listdir(directory):\n        filepath = os.path.join(directory, file)\n\n        # Check if the file is a text file\n        if file.endswith(\".txt\"):\n            with open(filepath, 'r') as f:\n                text = f.read()\n\n            # Count words in the text and update the word_count dictionary\n            word_count.update(text.split())\n\n    with open(filename, 'w') as f:\n        json.dump(dict(word_count), f)\n\n    return sum(word_count.values())", "compilation_passed": true, "time": 0.00180816650390625, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create an empty dictionary to store counts\n    count = {}\n\n    # Loop through all files in the directory\n    for file in os.listdir(directory):\n        # Check if the file is a text file\n        if file.endswith('.txt'):\n            # Open the file and read its content\n            with open(os.path.join(directory, file), 'r') as f:\n                # Split the content into words\n                words = f.read().split()\n                # Count the words using collections.Counter\n                count_words = Counter(words)\n                # Add the count to the dictionary\n                count[file] = count_words\n\n    # Export the counts to a JSON file\n    with open(filename, 'w') as f:\n        json.dump(count, f)\n\n    # Compute the total number of words\n    total_count = sum([sum(d.values()) for d in count.values()])\n\n    return total_count", "compilation_passed": true, "time": 0.0018868446350097656, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "result = {}\n    words = Counter()\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            with open(os.path.join(root, file)) as f:\n                # read each word\n                words.update(f.read().split())\n\n    # update the result\n    for key, value in words.iteritems():\n        result[key] = value\n\n    # write result to file\n    with open(filename, 'w') as f:\n        json.dump(result, f, sort_keys = True)\n\n    return sum(words.values())", "compilation_passed": true, "time": 0.0018100738525390625, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_counter = Counter()\n    for fname in os.listdir(directory):\n        if os.path.isfile(os.path.join(directory, fname)):\n            with open(os.path.join(directory, fname), 'r') as file:\n                for line in file:\n                    word_counter.update(line.split())\n    with open(filename, 'w') as jsonfile:\n        json.dump(word_counter, jsonfile, sort_keys=True, indent=4)\n    return sum(word_counter.values())", "compilation_passed": true, "time": 0.0018000602722167969, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "counts = Counter()\n    total_count = 0\n    for file_path in os.listdir(directory):\n        # check if file is .txt file\n        if file_path.endswith('.txt'):\n            # count words in .txt file\n            with open(os.path.join(directory, file_path), 'r') as f:\n                counts += Counter(f.read().split())\n    # convert Counter object to dictionary\n    counts = dict(counts)\n    total_count = sum(counts.values())\n    # write counts to JSON file\n    with open(filename, 'w') as f:\n        json.dump(counts, f)\n    return total_count", "compilation_passed": true, "time": 0.0018007755279541016, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = [f for f in os.listdir(directory) if os.path.isfile(\n        os.path.join(directory, f)) and f.endswith(\".txt\")]\n\n    # word count dictionary\n    counts = dict()\n\n    for file in files:\n        # read .txt file and split to words\n        with open(os.path.join(directory, file), 'r') as f:\n            content = f.read()\n            words = content.split()\n\n        # use collections.Counter to count the number of words\n        counts[file] = Counter(words)\n\n    # export counts to .json file\n    with open(filename, 'w') as f:\n        json.dump(counts, f)\n\n    # return total number of words\n    total = sum(counts[file] for file in counts)\n    return total", "compilation_passed": true, "time": 0.0018498897552490234, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_count = Counter()\n    for root, dirs, files in os.walk(directory):\n        for file_path in [os.path.join(root, file_name) for file_name in files]:\n            with open(file_path, 'r') as f:\n                word_count.update(re.findall(r'\\w+', f.read()))\n    with open(filename + '.json', 'w') as f:\n        json.dump(word_count, f)\n    return sum(word_count.values())", "compilation_passed": true, "time": 0.0017871856689453125, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_list = os.listdir(directory)\n    counter = Counter()\n    for i in file_list:\n        if i.endswith('.txt'):\n            file_path = directory + i\n            with open(file_path,'r') as f:\n                words = f.read().lower().split()\n                counter.update(words)\n    with open(filename, 'w') as f:\n        json.dump(dict(counter), f)\n    return sum(counter.values())", "compilation_passed": true, "time": 0.0018320083618164062, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_counts = {}\n\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for filename in filenames:\n            if filename.endswith(\".txt\"):\n                filepath = os.path.join(dirpath, filename)\n                with open(filepath, 'r') as file:\n                    text = file.read()\n                    words = text.split()\n                    word_counts[filename] = Counter(words)\n\n    total_words = sum(sum(counts.values()) for counts in word_counts.values())\n\n    # Export to JSON file\n    with open(filename, 'w') as f:\n        json.dump(word_counts, f)\n\n    return total_words", "compilation_passed": true, "time": 0.0018260478973388672, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if filename.endswith('.txt'):\n        word_list = []\n        for root, dirs, files in os.walk(directory):\n            for file in files:\n                if file == filename:\n                    file_path = os.path.join(root, file)\n                    with open(file_path, 'r') as file:\n                        words = file.read().split()\n                        word_list += words\n                        count = Counter(word_list)\n                    with open(f\"{filename}.json\", \"w\") as json_file:\n                        json_file.write(json.dumps(count))\n                        return sum(count.values())\n    else:\n        raise Exception('filename is not .txt')", "compilation_passed": true, "time": 0.0018439292907714844, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize Counter object to store word counts\n    total_counter = Counter()\n\n    # Get a list of all .txt files in the specified directory\n    filenames = [filename for filename in os.listdir(directory) if filename.endswith('.txt')]\n\n    # Loop over each .txt file and update the word count\n    for filename in filenames:\n        with open(os.path.join(directory, filename), 'r') as f:\n            text = f.read()\n            text_counter = Counter(text.split())\n            total_counter.update(text_counter)\n\n    # Convert the total word count to a dictionary and dump it to the JSON file\n    with open(filename, 'w') as f:\n        json.dump(dict(total_counter), f)\n\n    # Return the total number of words\n    return sum(total_counter.values())", "compilation_passed": true, "time": 0.0018088817596435547, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_count = Counter()\n    for file in [os.path.join(directory, file) for file in os.listdir(directory) if file.endswith('.txt')]:\n        with open(file, 'r') as f:\n            word_count += Counter(f.read().split())\n    with open(filename, 'w') as f:\n        json.dump(word_count, f)\n    return sum(word_count.values())", "compilation_passed": true, "time": 0.0017828941345214844, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = Counter()\n    total = 0\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.endswith('.txt'):\n                with open(os.path.join(root, file), 'r') as f:\n                    content = f.read()\n                count.update(content.split())\n\n    # Export the counts to a JSON file\n    with open(filename, 'w') as f:\n        json.dump(dict(count), f)\n\n    for word in count:\n        total += count[word]\n\n    return total", "compilation_passed": true, "time": 0.0017838478088378906, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_list = [x for x in os.listdir(directory) if x.endswith(\".txt\")]\n\n    counter = Counter()\n    for file in file_list:\n        with open(directory + file) as f:\n            counter.update(f.read().split())\n\n    word_counts = {}\n    for word in counter:\n        word_counts[word] = counter[word]\n\n    with open(filename + \".json\", \"w\") as f:\n        json.dump(word_counts, f)\n\n    return sum(counter.values())", "compilation_passed": true, "time": 0.0018448829650878906, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_count = Counter()\n    for filename in os.listdir(directory):\n        file_path = os.path.join(directory, filename)\n        with open(file_path, \"r\") as file:\n            word_count.update(file.read().split())\n    with open(filename + \".json\", \"w\") as file:\n        json.dump(word_count, file)\n    return sum(word_count.values())", "compilation_passed": true, "time": 0.0017557144165039062, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = Counter()\n    for filename in os.listdir(directory):\n        with open(f'{directory}/{filename}', 'r') as file:\n            count += Counter(file.read().split())\n    with open(f'{directory}/{filename}', 'w') as outfile:\n        json.dump(count, outfile, indent=2)\n    return sum(count.values())", "compilation_passed": true, "time": 0.0017428398132324219, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize total word count variable\n    word_count = 0\n\n    # Define an empty dictionary for word counts\n    word_counts = {}\n\n    # Create a counter object to store counts\n    counts = Counter()\n\n    # Get all files from directory\n    for file_name in os.listdir(directory):\n        if file_name.endswith('.txt'):\n            with open(directory + file_name, 'r') as f:\n                for line in f:\n                    # Split each line into words and count the frequency of each word\n                    counts.update(line.split())\n\n    # Store the word counts in the dictionary\n    for word, count in counts.iteritems():\n        word_counts[word] = count\n        word_count += count\n\n    # Export the dictionary to a JSON file\n    with open(filename, 'w') as f:\n        json.dump(word_counts, f)\n\n    return word_count", "compilation_passed": true, "time": 0.0017969608306884766, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "filelist = [os.path.join(directory, file) for file in os.listdir(directory) if file.endswith(\".txt\")]\n    count = Counter()\n    for file in filelist:\n        with open(file, 'r') as f:\n            count.update(f.read().split())\n    with open(filename, 'w') as f:\n        json.dump(count, f)\n    return sum(count.values())", "compilation_passed": true, "time": 0.0017888545989990234, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_counts = Counter()\n\n    for file_name in os.listdir(directory):\n        full_path = os.path.join(directory, file_name)\n        if os.path.isfile(full_path):\n            with open(full_path, 'r') as f:\n                words_in_file = Counter(f.read().split())\n                word_counts += words_in_file\n\n    with open(filename, 'w') as f:\n        json.dump(dict(word_counts), f)\n\n    return sum(word_counts.values())", "compilation_passed": true, "time": 0.0017960071563720703, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize an empty Counter object\n    c = Counter()\n\n    # Find all .txt files in the specified directory and its subdirectories\n    for path, dirs, files in os.walk(directory):\n        for name in files:\n            if name.endswith((\".txt\")):\n                with open(os.path.join(path, name), 'r') as f:\n                    # Count the words in the current .txt file using Counter\n                    c += Counter(f.read().split())\n    # Export the word counts to a JSON file\n    with open(filename + '.json', 'w') as outfile:\n        json.dump(c, outfile)\n\n    # Return the total number of words\n    return len(c)", "compilation_passed": true, "time": 0.0018167495727539062, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_counts = Counter()\n    for root, _, filenames in os.walk(directory):\n        for f in filenames:\n            if f.endswith('.txt'):\n                with open(os.path.join(root, f)) as fp:\n                    # Counter(fp) is the same as Counter(fp.read().split())\n                    counts = Counter(fp)\n                    # The counts can be accessed like a dictionary\n                    total_counts['world']\n                    total_counts['hello']\n                    # Counts can be combined with +=\n                    total_counts += counts\n\n    with open(filename, 'w') as fp:\n        json.dump(total_counts, fp)\n\n    # The most common words can be accessed with the .most_common() method\n    top_three = total_counts.most_common(3)\n    print(top_three)\n    return total_counts['world'] + total_counts['hello']", "compilation_passed": true, "time": 0.0018198490142822266, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = Counter()\n    for filename in os.listdir(directory):\n        if filename.endswith(\".txt\"):\n            with open(os.path.join(directory, filename), 'r') as f:\n                count += Counter(f.read().split())\n\n    with open('{}.json'.format(filename), 'w') as f:\n        json.dump(count, f)\n\n    return len(count)", "compilation_passed": true, "time": 0.0017747879028320312, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = os.listdir(directory)\n    txt_files = []\n    word_count = Counter()\n    total_words = 0\n    for file in files:\n        if file[-4:] == \".txt\":\n            txt_files.append(file)\n    for file in txt_files:\n        with open(directory+file) as f:\n            for line in f:\n                word_count += Counter(line.split())\n    with open(filename,\"w\") as f:\n        json.dump(dict(word_count), f)\n    for word in word_count:\n        total_words+=word_count[word]\n    return total_words", "compilation_passed": true, "time": 0.0018260478973388672, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize dictionary for file counts\n    file_counts = {}\n    total_words = 0\n    # Loop through each file in directory\n    for file in os.listdir(directory):\n        # If file is a .txt file\n        if file.endswith('.txt'):\n            # Open file and read lines\n            with open(directory+file) as f:\n                # Remove newline characters and split by whitespace\n                lines = [line.rstrip('\\n').split() for line in f.readlines()]\n                # Flatten the lines into a single list of words\n                lines = [x for y in lines for x in y]\n            # Count word frequencies\n            counts = Counter(lines)\n            # Add counts to file_counts dictionary\n            file_counts[file] = dict(counts)\n            total_words += sum(counts.values())\n    # Export file_counts dictionary to JSON file\n    with open(filename+'.json','w') as f:\n        json.dump(file_counts, f, indent=4)\n    return total_words", "compilation_passed": true, "time": 0.0018527507781982422, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_count = 0\n    # traverse through the directory, and return files with .txt extension\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            if file_name.endswith(\".txt\"):\n                with open(os.path.join(root, file_name), \"r\") as f:\n                    # read the file and use Counter to count the words\n                    word_count = Counter(f.read().split())\n                    total_count += sum(word_count.values())\n                    # export the counts to a JSON file\n                    with open(filename, \"w\") as jf:\n                        json.dump(word_count, jf)\n    return total_count", "compilation_passed": true, "time": 0.0017762184143066406, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_counts = {}  # dict to store counts of each word in each file\n    total_words = 0  # total number of words in all files\n\n    # Loop through each file in the directory\n    for filename in os.listdir(directory):\n        if filename.endswith(\".txt\"):  # check if the file has the '.txt' extension\n            file_path = os.path.join(directory, filename)\n\n            # Read the contents of the file and count the words\n            with open(file_path, \"r\") as f:\n                text = f.read()\n                words = text.split()\n                total_words += len(words)\n                word_counts[filename] = len(words)\n\n    # Export the word counts to a JSON file\n    with open(filename, \"w\") as f:\n        json.dump(word_counts, f)\n\n    return total_words", "compilation_passed": true, "time": 0.0018239021301269531, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Initialize counter\n    counter = Counter()\n    # Iterate over all files in the directory and sub-directories\n    for root, dirs, files in os.walk(directory):\n        for file_ in files:\n            # Check if the file is a .txt file\n            if file_.endswith(\".txt\"):\n                file_path = os.path.join(root, file_)\n                # Add each word to the counter\n                with open(file_path, \"r\") as f:\n                    counter.update(f.read().split())\n\n    # Export the results to a JSON file\n    with open(filename, 'w') as f:\n        json.dump(dict(counter), f)\n\n    # Return the total number of words in .txt files\n    return sum(counter.values())", "compilation_passed": true, "time": 0.0017940998077392578, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "counts = Counter()\n    for file in os.listdir(directory):\n        with open(directory + file, 'r') as f:\n            counts += Counter(f.read().split())\n\n    with open(filename, 'w') as f:\n        json.dump(dict(counts), f)\n\n    return sum(counts.values())", "compilation_passed": true, "time": 0.0017600059509277344, "tests_passed": false, "error": "FileNotFoundError"}
