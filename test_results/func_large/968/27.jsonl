{"code": "df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"DataFrame cannot be empty\")\n    df = df.select_dtypes(include='number')  # select only numeric columns\n    if df.empty:\n        raise ValueError(\"DataFrame must contain at least one numeric column\")\n    df = df.cumsum()  # cumulative sum of each column\n    sns.set_theme(style=\"white\")\n    ax = sns.heatmap(df, annot=True, fmt=\"g\", cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 0.7589092254638672, "tests_passed": true, "error": null}
{"code": "if not isinstance(data, dict):\n        raise ValueError(\"Input must be a dictionary.\")\n\n    # Convert the dictionary to a DataFrame\n    df = pd.DataFrame(data)\n\n    if df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n\n    # Filter the columns with only numeric data\n    numeric_cols = df.select_dtypes(include=['number']).columns\n\n    if not numeric_cols:\n        raise ValueError(\"No numeric columns present.\")\n\n    # Create a cumulative sum of each column\n    df['cum_sum'] = df[numeric_cols].sum(axis=1)\n\n    # Create the heatmap\n    ax = sns.heatmap(df['cum_sum'])\n\n    return ax", "compilation_passed": true, "time": 0.0015239715576171875, "tests_passed": false, "error": "ValueError"}
{"code": "if not data:\n        raise ValueError(\"DataFrame cannot be empty\")\n\n    # Convert dictionary to DataFrame\n    df = pd.DataFrame(data)\n\n    # Check if there are any numeric columns\n    if not df.columns.isin(df.select_dtypes(include=\"number\").columns):\n        raise ValueError(\"DataFrame does not contain any numeric columns\")\n\n    # Create a heatmap of the cumulative sum of each column\n    ax = sns.heatmap(df.select_dtypes(include=\"number\").cumsum(), annot=True, fmt=\"d\")\n    ax.set(xlabel=None, ylabel=None)\n\n    return ax", "compilation_passed": true, "time": 0.0011789798736572266, "tests_passed": false, "error": "ValueError"}
{"code": "# Create a DataFrame from the dictionary\n    df = pd.DataFrame(data)\n\n    # Check if the DataFrame is empty\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n\n    # Get only the numeric columns for the heatmap\n    numeric_df = df.select_dtypes(include=['float64', 'int64'])\n\n    # Check if there are any numeric columns\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n\n    # Calculate the cumulative sum for each column\n    cumsum = numeric_df.cumsum()\n\n    # Create the heatmap using Seaborn\n    ax = sns.heatmap(cumsum, cmap='coolwarm', annot=True)\n    ax.set_title('Cumulative Sum Heatmap')\n\n    # Show the plot\n    return ax", "compilation_passed": true, "time": 0.12749218940734863, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n\n    # Check if the DataFrame is empty or has no columns\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    # Check if there are any numeric columns in the DataFrame\n    numeric_cols = df.select_dtypes(include='number').columns\n    if not numeric_cols:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n\n    # Calculate the cumulative sum of each numeric column\n    df_cumsum = df[numeric_cols].cumsum()\n\n    # Create a heatmap of the cumulative sum\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"YlOrBr\")\n\n    # Return the Axes object of the heatmap\n    return ax", "compilation_passed": true, "time": 0.0015299320220947266, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n    numeric_cols = df.select_dtypes(include='number').columns\n    if not numeric_cols.any():\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = df[numeric_cols].cumsum()\n    return sns.heatmap(df_cumsum)", "compilation_passed": true, "time": 0.12462496757507324, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n\n    numeric_columns = df.select_dtypes(include='number').columns\n    if not numeric_columns.any():\n        raise ValueError(\"No numeric columns present in DataFrame\")\n\n    df_numeric = df[numeric_columns]\n\n    cumsum = df_numeric.cumsum()\n\n    ax = sns.heatmap(cumsum)\n\n    return ax", "compilation_passed": true, "time": 0.12499189376831055, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    if df.dtypes.nunique() <= 1:\n        raise ValueError(\"No numeric columns are present.\")\n\n    sns.set_theme(style='white')\n    numeric_columns = df.select_dtypes(include='number').columns\n    cumsum_df = df[numeric_columns].cumsum()\n    ax = sns.heatmap(cumsum_df)\n    return ax", "compilation_passed": true, "time": 0.0014688968658447266, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    numeric_cols = df.select_dtypes(include='number').columns\n\n    if len(numeric_cols) == 0:\n        raise ValueError(\"No numeric columns are present in the DataFrame.\")\n\n    df_cumsum = df[numeric_cols].cumsum()\n\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g')\n    ax.set_title('Cumulative Sum Heatmap')\n\n    return ax", "compilation_passed": true, "time": 0.12784194946289062, "tests_passed": true, "error": null}
{"code": "# Create a DataFrame from the data dictionary\n    df = pd.DataFrame(data)\n\n    # Check if the DataFrame is empty\n    if df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n\n    # Find the numeric columns in the DataFrame\n    numeric_cols = df.select_dtypes(include='number').columns\n\n    # Check if there are numeric columns in the DataFrame\n    if numeric_cols.empty:\n        raise ValueError(\"No numeric columns found in the DataFrame.\")\n\n    # Create the cumulative sum of each column\n    df_cumsum = df[numeric_cols].cumsum()\n\n    # Create the heatmap\n    ax = sns.heatmap(df_cumsum, annot=True)\n\n    # Return the Axes object of the heatmap\n    return ax", "compilation_passed": true, "time": 0.12633705139160156, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame.from_dict(data)\n\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n\n    # Extract numeric columns only\n    num_df = df.select_dtypes(include='number')\n\n    # If there are no numeric columns, raise an error\n    if num_df.empty:\n        raise ValueError(\"No numeric columns found in the DataFrame\")\n\n    # Get the cumulative sum of each column\n    cumsum_df = num_df.cumsum()\n\n    # Create and return the heatmap of the cumulative sum\n    ax = sns.heatmap(cumsum_df, annot=True, fmt='g', cmap='Blues')\n\n    return ax", "compilation_passed": true, "time": 0.1265428066253662, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n\n    # Calculate cumulative sum of numeric columns\n    numeric_cols = df.select_dtypes(include=\"number\").columns\n    if numeric_cols.empty:\n        raise ValueError(\"No numeric columns found\")\n\n    cumsum_df = df[numeric_cols].cumsum()\n    # Create heatmap\n    ax = sns.heatmap(cumsum_df, annot=True, fmt='g')\n    return ax", "compilation_passed": true, "time": 0.12726402282714844, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame.from_dict(data)\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    numeric_columns = df.select_dtypes(include=\"number\").columns\n    if not numeric_columns.any():\n        raise ValueError(\"No numeric columns present.\")\n\n    numeric_df = df[numeric_columns]\n    cumsum_df = numeric_df.cumsum()\n    heatmap = sns.heatmap(cumsum_df, cmap=\"YlGn\")\n\n    return heatmap", "compilation_passed": true, "time": 0.12482309341430664, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame.from_dict(data)\n\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n\n    if df.dtypes.nunique() == 1 and df.dtypes.unique()[0] == 'O':\n        raise ValueError(\"There are no numeric columns in the DataFrame\")\n\n    df_num = df.select_dtypes(include=['float', 'int'])\n    cumulative_sum = df_num.cumsum()\n    ax = sns.heatmap(cumulative_sum)\n\n    return ax", "compilation_passed": true, "time": 0.12301015853881836, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame.from_dict(data)\n    if df.empty:\n        raise ValueError(\"Data must not be empty\")\n    numeric_cols = df.select_dtypes(include='number').columns\n    if numeric_cols.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    sns.set_theme(style=\"white\")\n    ax = sns.heatmap(df[numeric_cols].cumsum(), annot=True)\n    return ax", "compilation_passed": true, "time": 0.12849211692810059, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n\n    cumulative_sum_df = numeric_df.cumsum()\n    heatmap = sns.heatmap(cumulative_sum_df)\n\n    return heatmap", "compilation_passed": true, "time": 0.12249398231506348, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame.from_dict(data)\n\n    # Check if DataFrame is empty or does not contain any numeric columns\n    if df.empty or df.dtypes.apply(lambda x: x.name != 'object').sum() == 0:\n        raise ValueError(\"No numeric columns found in the DataFrame.\")\n\n    df_numeric = df.select_dtypes(exclude=['object'])  # Filter numeric columns\n    cum_sum = df_numeric.cumsum()  # Calculate cumulative sum of numeric columns\n    ax = sns.heatmap(cum_sum)  # Create heatmap\n\n    return ax", "compilation_passed": true, "time": 0.12439990043640137, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    if df.empty or not df.columns.isin(df.select_dtypes(['float', 'int']).columns):\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    cumsum = df.cumsum()\n    ax = sns.heatmap(cumsum, cmap='magma')\n    return ax", "compilation_passed": true, "time": 0.0014379024505615234, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame.from_dict(data)\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n    num_cols = df.select_dtypes(include='number').columns\n    if len(num_cols) == 0:\n        raise ValueError(\"There are no numeric columns in the DataFrame.\")\n    df = df[num_cols]\n    df = df.cumsum()\n    ax = sns.heatmap(df)\n    return ax", "compilation_passed": true, "time": 0.12325501441955566, "tests_passed": true, "error": null}
{"code": "# Create a DataFrame from the dictionary\n    df = pd.DataFrame(data)\n\n    # Check if the DataFrame is empty or no numeric columns are present\n    if df.empty or df.dtypes.nunique() == 1:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n\n    # Get the numeric columns\n    numeric_cols = df.select_dtypes(include='number').columns\n\n    # Calculate the cumulative sum for each numeric column\n    df[numeric_cols] = df[numeric_cols].cumsum()\n\n    # Create a heatmap of the cumulative sum\n    ax = sns.heatmap(df[numeric_cols], annot=True, fmt='.2f', cmap='coolwarm')\n\n    return ax", "compilation_passed": true, "time": 0.0014798641204833984, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    numeric_cols = df.select_dtypes(include='number').columns\n    if not numeric_cols:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_sum = df[numeric_cols].cumsum()\n    ax = sns.heatmap(df_sum, cmap='coolwarm')\n    ax.set_title(\"Heatmap of Cumulative Sum\")\n    ax.set_xlabel(\"Column\")\n    ax.set_ylabel(\"Row\")\n    ax.set_yticks(df_sum.index)\n    ax.set_yticklabels(df_sum.index + 1)\n    return ax", "compilation_passed": true, "time": 0.0012497901916503906, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)  # convert the dictionary to a DataFrame\n    df = df[df.columns[df.dtypes != 'object']]  # remove non-numeric columns from the DataFrame\n    df = df.cumsum()  # calculate the cumulative sum of each column in the DataFrame\n    ax = sns.heatmap(df, cmap=\"viridis\")  # create the heatmap using Seaborn\n    return ax  # return the Axes object", "compilation_passed": true, "time": 0.12425088882446289, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n\n    # Filter only numeric columns\n    numeric_cols = df.select_dtypes(include=['number']).columns\n    if not numeric_cols:\n        raise ValueError(\"No numeric columns present in DataFrame\")\n\n    # Create a cumulative sum for each numeric column\n    df_cumsum = df[numeric_cols].cumsum()\n\n    # Create a heatmap of the cumulative sum for each numeric column\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"YlGnBu\")\n    ax.set_title(\"Heatmap of Cumulative Sum\")\n\n    return ax", "compilation_passed": true, "time": 0.0015387535095214844, "tests_passed": false, "error": "ValueError"}
{"code": "# Create a DataFrame from the input data\n    df = pd.DataFrame(data)\n\n    # Check if the DataFrame is empty\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    # Extract only the numeric columns from the DataFrame\n    num_cols = df.select_dtypes(include='number').columns\n    if not num_cols:\n        raise ValueError(\"No numeric columns found in the DataFrame.\")\n\n    # Calculate the cumulative sum for each column\n    df_cumsum = df[num_cols].cumsum()\n\n    # Create the heatmap using Seaborn\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g')\n\n    return ax", "compilation_passed": true, "time": 0.0011630058288574219, "tests_passed": false, "error": "ValueError"}
{"code": "# Convert the dictionary to a DataFrame\n    df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    # Check if there are any numeric columns in the DataFrame\n    if not df.select_dtypes(include='number').columns.any():\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n\n    # Create a heatmap of the cumulative sum of each numeric column\n    ax = sns.heatmap(df.cumsum().select_dtypes(include='number'))\n    ax.set_title(\"Cumulative Sum Heatmap\")\n    ax.set_xlabel(\"Column\")\n    ax.set_ylabel(\"Row\")\n\n    # Display the heatmap\n    plt.show()\n\n    return ax", "compilation_passed": true, "time": 0.12366294860839844, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame.from_dict(data)\n\n    # Check if the DataFrame is empty\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    # Filter numeric columns\n    numeric_cols = df.select_dtypes(include='number').columns\n    if numeric_cols.empty:\n        raise ValueError(\"No numeric columns found in the DataFrame.\")\n\n    df = df[numeric_cols]\n\n    # Create heatmap\n    ax = sns.heatmap(df.cumsum(), cmap='viridis')\n\n    # Set axis labels and title\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Rows')\n    ax.set_title('Heatmap of Cumulative Sum')\n\n    return ax", "compilation_passed": true, "time": 0.5647430419921875, "tests_passed": true, "error": null}
{"code": "# Convert the input dictionary to a DataFrame\n    df = pd.DataFrame(data)\n\n    # Check if the DataFrame is empty\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    # Calculate the cumulative sum for each column\n    df_cumulative = df.cumsum()\n\n    # Get the numeric columns\n    numeric_columns = df_cumulative.select_dtypes(include=['float64', 'int64'])\n\n    # Check if there are any numeric columns\n    if numeric_columns.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n\n    # Create the heatmap using Seaborn\n    ax = sns.heatmap(numeric_columns, cmap='viridis')\n\n    return ax", "compilation_passed": true, "time": 0.12512993812561035, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    df_numeric = df.select_dtypes(include=\"number\")\n    if df_numeric.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n\n    df_numeric = df_numeric.cumsum()\n\n    ax = sns.heatmap(df_numeric)\n    return ax", "compilation_passed": true, "time": 0.12515687942504883, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    df_numeric = df.select_dtypes(include='number')\n\n    if df_numeric.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n\n    sns.heatmap(df_numeric.cumsum(), cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.0217440128326416, "tests_passed": false, "error": "NameError"}
{"code": "# Create a DataFrame with the column names and values\n    df = pd.DataFrame.from_dict(data)\n\n    # Check if the DataFrame is empty or has no numeric columns\n    if df.empty or df.select_dtypes(include=\"number\").empty:\n        raise ValueError(\"No numeric columns in the DataFrame.\")\n\n    # Calculate the cumulative sum of each column\n    df_cumulative = df.cumsum()\n\n    # Create a heatmap of the cumulative sum\n    ax = sns.heatmap(df_cumulative, annot=True, fmt=\".0f\")\n    return ax", "compilation_passed": true, "time": 0.0227968692779541, "tests_passed": false, "error": "ValueError"}
