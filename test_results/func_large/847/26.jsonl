{"code": "os.makedirs(directory, exist_ok=True)\n    string_parts = input_string.split('\\n')\n    file_paths = []\n    for i, string_part in enumerate(string_parts, start=1):\n        if string_part.strip():\n            # Remove special characters from the string\n            string_part_cleaned = ''.join(\n                char for char in string_part if char not in string.punctuation)\n            # Remove excess white spaces in a row\n            string_part_cleaned = re.sub(' +', ' ', string_part_cleaned)\n            # Create random file name\n            file_name = ''.join(random.choice(\n                string.ascii_lowercase + string.digits) for _ in range(5))\n            # Create file path\n            file_path = os.path.join(directory, file_name + '.txt')\n            with open(file_path, 'w', encoding='utf-8') as file:\n                file.write(string_part_cleaned)\n            file_paths.append(file_path)\n    ", "compilation_passed": true, "time": 0.0010471343994140625, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        if not os.path.isdir(directory):\n            os.makedirs(directory)\n\n        strings = input_string.split('\\n')\n        file_paths = []\n\n        for string in strings:\n            string = re.sub(r'[^a-zA-Z0-9_]+', ' ', string).strip()\n            file_name = ''.join(random.choices(string.replace(' ', ''), k=5)) + '.txt'\n            file_path = os.path.join(directory, file_name)\n            file_paths.append(file_path)\n\n            with open(file_path, 'w', encoding='utf-8') as file:\n                file.write(string)\n\n        return file_paths\n\n    except Exception as e:\n        print(f\"Error: {e}\")\n        return []", "compilation_passed": true, "time": 0.0009720325469970703, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_paths = []\n    if not os.path.isdir(directory):\n        os.makedirs(directory)\n    for string_index, input_string in enumerate(input_string.split('\\n')):\n        file_path = os.path.join(directory, f\"{random.randint(10000,99999)}{string_index}.txt\")\n        input_string = re.sub(r'[^\\w\\s]', '', input_string)\n        with open(file_path, 'w') as f:\n            f.write(input_string)\n        file_paths.append(file_path)\n    return file_paths", "compilation_passed": true, "time": 0.0009138584136962891, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.isdir(directory):\n        os.mkdir(directory)\n    file_paths = []\n    # split the string into a list of strings\n    text_list = input_string.splitlines()\n    # remove special characters from each string\n    for i in range(len(text_list)):\n        text_list[i] = re.sub('[^a-zA-Z0-9 \\n\\.]', '', text_list[i])\n        # generate a random filename\n        filename = ''.join(random.choices(string.digits, k=5)) + '.txt'\n        file_path = os.path.join(directory, filename)\n        file_paths.append(file_path)\n        with open(file_path, 'w') as file:\n            file.write(text_list[i])\n    return file_paths", "compilation_passed": true, "time": 0.0009560585021972656, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_paths = []\n\n    # Create the directory if it doesn't exist\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    # Split the input string into separate lines\n    lines = input_string.split('\\n')\n\n    for i, line in enumerate(lines):\n        # Remove special characters\n        line = re.sub('[^A-Za-z\\s]+', '', line)\n\n        # Create a unique filename using a random number\n        filename = directory + '/' + ''.join(random.choices(string.digits, k=5)) + '.txt'\n\n        # Write the modified string to the file\n        with open(filename, 'w') as file:\n            file.write(line)\n\n        # Append the file path to the list\n        file_paths.append(filename)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009069442749023438, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Generate random alphanumeric string for filename prefix\n    prefix = ''.join(random.choices(string.ascii_letters + string.digits, k=5))\n    # Create directory if it doesn't exist\n    os.makedirs(directory, exist_ok=True)\n    # Split the input string into separate strings\n    strings = input_string.split('\\n')\n    # Remove special characters from each string\n    strings = [re.sub(r'[^a-zA-Z0-9]+', '', s) for s in strings]\n    # Save each string as a separate text file\n    file_paths = []\n    for i, s in enumerate(strings):\n        if s:\n            filename = f\"{directory}/{prefix}{i}.txt\"\n            with open(filename, 'w') as f:\n                f.write(s)\n            file_paths.append(filename)\n    return file_paths", "compilation_passed": true, "time": 0.0009388923645019531, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Remove special characters from the input string\n    input_string = input_string.translate(str.maketrans('', '', string.punctuation))\n\n    # Split the input string into separate strings\n    strings = input_string.split()\n\n    # Create the text_files directory if it doesn't exist\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    # Save each string as a separate text file\n    file_paths = []\n    for i, s in enumerate(strings):\n        filename = directory + \"/\" + ''.join(random.choices(string.digits, k=5)) + \".txt\"\n        with open(filename, \"w\") as f:\n            f.write(s)\n        file_paths.append(filename)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009307861328125, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "lines = input_string.split(\"\\n\")\n    file_paths = []\n    for idx, line in enumerate(lines):\n        # Remove special characters\n        clean_line = re.sub(r'[^\\w\\s]', '', line).strip()\n        # Create a random filename of 5 digits\n        filename = \"\".join(random.choices(string.digits, k=5))\n        file_path = os.path.join(directory, f\"{filename}.txt\")\n        with open(file_path, \"w\") as f:\n            f.write(clean_line)\n        file_paths.append(file_path)\n    return file_paths", "compilation_passed": true, "time": 0.0009088516235351562, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_paths = []\n    # Split the input string into separate strings by newline character\n    input_strings = input_string.split('\\n')\n    # Generate random unique filenames\n    filenames = set()\n    while len(filenames) < len(input_strings):\n        filename = ''.join(random.choices(string.digits, k=5))\n        filenames.add(filename)\n    # Loop over the input strings and create a text file for each string\n    for input_string, filename in zip(input_strings, filenames):\n        # Remove special characters from the input string\n        input_string = re.sub('[^a-zA-Z0-9_ \\n\\t\\r\\x0b\\x0c]', '', input_string)\n        # Save the cleaned input string to a text file\n        file_path = os.path.join(directory, f\"{filename}.txt\")\n        file_paths.append(file_path)\n        with open(file_path, 'w', encoding='utf-8') as", "compilation_passed": false, "time": 0.00020813941955566406, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Create the text files folder if it doesn't exist\n    os.makedirs(directory, exist_ok=True)\n    file_paths = []\n    # Split the input string into separate strings\n    strings = input_string.strip().split('\\n')\n    # Remove special characters and save each string as a separate text file\n    for i, s in enumerate(strings):\n        # Remove special characters\n        s = re.sub('[^A-Za-z0-9]+', '', s)\n        # Generate random file name\n        file_name = ''.join(random.choice(string.digits) for _ in range(5)) + '.txt'\n        file_path = os.path.join(directory, file_name)\n        # Save the string as a text file\n        with open(file_path, 'w') as f:\n            f.write(s)\n        # Append the file path to the list of file paths\n        file_paths.append(file_path)\n    # Return the list of file paths\n    return file_paths", "compilation_passed": true, "time": 0.0009570121765136719, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create the directory if it doesn't exist\n    if not os.path.exists(directory):\n        os.mkdir(directory)\n\n    # Split the input string into individual strings and remove special characters\n    strings = input_string.split(\"\\n\")\n    strings = [re.sub(r'\\W+', '', s) for s in strings]\n\n    # Save each string as a separate file\n    file_paths = []\n    for i, s in enumerate(strings):\n        file_path = f'{directory}/{random.randint(10000,99999)}.txt'\n        with open(file_path, 'w') as f:\n            f.write(s)\n        file_paths.append(file_path)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009369850158691406, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Remove all special characters from the input string\n    special_chars = string.punctuation + '\\n'\n    input_string = input_string.translate(str.maketrans('', '', special_chars))\n\n    # Split the input string into separate strings\n    strings = re.split(r'\\s', input_string)\n\n    # Create the directory if it does not exist\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    # Save each string as a separate text file\n    file_paths = []\n    for string in strings:\n        file_name = ''.join(random.choices(string.ascii_uppercase + string.digits, k=5)) + '.txt'\n        file_path = os.path.join(directory, file_name)\n        with open(file_path, 'w') as f:\n            f.write(string)\n        file_paths.append(file_path)\n    return file_paths", "compilation_passed": true, "time": 0.0009489059448242188, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_paths = []\n    input_string = re.sub(r'\\n+', '\\n', input_string)\n    for i, string in enumerate(input_string.split('\\n'), 1):\n        if not string:\n            continue\n        string = string.strip(string.punctuation)\n        filename = ''.join(random.choices(string.ascii_uppercase + string.digits, k=5)) + '.txt'\n        file_path = os.path.join(directory, filename)\n        with open(file_path, 'w') as file:\n            file.write(string)\n            file_paths.append(file_path)\n    return file_paths", "compilation_passed": true, "time": 0.0009889602661132812, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_paths = []\n\n    # Create the directory if it doesn't exist\n    os.makedirs(directory, exist_ok=True)\n\n    # Split the input string into separate lines\n    lines = input_string.split('\\n')\n\n    # For each line, remove special characters and save it as a separate file\n    for i, line in enumerate(lines):\n        # Remove special characters and replace whitespace with underscores\n        cleaned_line = re.sub(r'[^\\w\\s]', '', line).replace(' ', '_')\n\n        # Generate a random filename for the text file\n        random_filename = ''.join(random.choices(string.digits, k=5)) + '.txt'\n\n        # Save the cleaned line to the text file\n        file_path = os.path.join(directory, random_filename)\n        with open(file_path, 'w') as f:\n            f.write(cleaned_line)\n\n        # Add the file path to the list of file paths\n        file_paths.append(file_path)\n\n    ", "compilation_passed": true, "time": 0.0009360313415527344, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create the directory if it doesn't exist\n    os.makedirs(directory, exist_ok=True)\n\n    # Split the input string into separate lines\n    lines = input_string.split(\"\\n\")\n\n    # Remove special characters from each line and save it as a separate text file\n    file_paths = []\n    for i, line in enumerate(lines, start=1):\n        # Remove special characters from the line\n        line_without_special_chars = ''.join(c for c in line if c.isalnum() or c == ' ')\n\n        # Save the line to a text file with a random filename\n        random_filename = ''.join(random.choices(string.digits, k=5))\n        file_path = os.path.join(directory, f\"{random_filename}.txt\")\n        with open(file_path, 'w', encoding='utf-8') as file:\n            file.write(line_without_special_chars)\n        file_paths.append(file_path)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009479522705078125, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "def write_to_file(text, directory='./text_files'):\n        \"\"\"\n        Save a string as a text file in a specified directory.\n        The file name is generated randomly, ensuring no collisions.\n        \n        Parameters:\n        - text (str): The text to be saved as a file.\n        - directory (str): The directory where the file will be saved.\n        \"\"\"\n        def random_file_name():\n            \"\"\"\n            Generate a random file name with five-digit numerical extension.\n            \"\"\"\n            return ''.join(random.choices(string.digits, k=5)) + '.txt'\n\n        file_path = os.path.join(directory, random_file_name())\n\n        while os.path.exists(file_path):\n            file_path = os.path.join(directory, random_file_name())\n\n        with open(file_path, 'w', encoding='utf-8') as file:\n            file.write(text)\n\n        return file_path\n\n    file_paths = []\n\n    ", "compilation_passed": true, "time": 0.0009260177612304688, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "lines = input_string.splitlines()\n    lines = list(map(lambda line: re.sub(r'[^\\w ]', '', line), lines))\n    file_paths = []\n\n    for i, line in enumerate(lines):\n        file_name = ''.join(random.choices(string.digits, k=5))\n        file_path = os.path.join(directory, file_name)\n        with open(file_path, 'w') as file:\n            file.write(line)\n        file_paths.append(file_path)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009217262268066406, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Split the input string into lines and remove special characters.\n    lines = re.sub(r'[^\\w\\s]', '', input_string).splitlines()\n\n    # Create the directory if it doesn't exist.\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    # Generate a random file name.\n    file_name = ''.join(random.choice(string.digits) for i in range(5))\n\n    # Save each string as a separate text file.\n    file_paths = []\n    for i, line in enumerate(lines, start=1):\n        with open(os.path.join(directory, f\"{file_name}_{i}.txt\"), 'w') as f:\n            f.write(line)\n            file_paths.append(os.path.join(directory, f\"{file_name}_{i}.txt\"))\n    return file_paths", "compilation_passed": true, "time": 0.0009591579437255859, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        # Create a directory if it does not exist\n        if not os.path.exists(directory):\n            os.makedirs(directory)\n        # Create a list of strings from the input string by splitting on newline characters\n        input_string = input_string.split('\\n')\n\n        # Remove special characters and save each string as a separate text file\n        file_paths = []\n        for i, s in enumerate(input_string):\n            file_name = ''.join(random.choices(string.digits, k=5)) + '.txt'\n            file_path = os.path.join(directory, file_name)\n            with open(file_path, 'w') as f:\n                f.write(re.sub(r'[^\\w\\s]', '', s))\n            file_paths.append(file_path)\n\n        return file_paths\n\n    except Exception as e:\n        print(f\"Error: {e}\")\n        return []", "compilation_passed": true, "time": 0.0009672641754150391, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Check if the directory exists and create it if not\n    if not os.path.isdir(directory):\n        os.mkdir(directory)\n\n    # Split the input string into separate strings\n    strings = input_string.strip().split('\\n')\n    file_paths = []\n\n    # Loop through each string and save it as a text file\n    for index, string_part in enumerate(strings, start=1):\n        # Remove special characters from the string part\n        string_part = ''.join(char for char in string_part if char in (string.ascii_letters + string.whitespace))\n\n        # Create a random file name\n        file_name = ''.join(random.choices(string.digits, k=5)) + '.txt'\n\n        # Save the string part as a text file\n        file_path = os.path.join(directory, file_name)\n        with open(file_path, 'w') as file:\n            file.write(string_part)\n\n        # Append the file path to the list\n        file_paths.append(file", "compilation_passed": false, "time": 0.0002110004425048828, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Create a directory if it does not exist\n    os.makedirs(directory, exist_ok=True)\n\n    # Generate a list of strings by splitting the input string\n    strings = input_string.split()\n\n    # Remove special characters from the list of strings\n    strings = [''.join(c for c in s if c not in string.punctuation) for s in strings]\n\n    # Initialize a list to store file paths\n    file_paths = []\n\n    # Save each string as a separate text file\n    for i, s in enumerate(strings, start=1):\n        # Generate random file name\n        file_name = ''.join(random.choice(string.digits) for _ in range(5)) + '.txt'\n\n        # Generate file path\n        file_path = os.path.join(directory, file_name)\n\n        # Save the string as a file\n        with open(file_path, 'w') as f:\n            f.write(s)\n\n        # Append the file path to the list of file paths\n        file_paths.append(file_path", "compilation_passed": false, "time": 0.00019407272338867188, "tests_passed": false, "error": "SyntaxError"}
{"code": "file_paths = []\n    for i, string_split in enumerate(input_string.splitlines()):\n        string_split = re.sub(r'[^a-zA-Z\\n]', ' ', string_split)\n        file_path = f'{directory}/{random.randint(10000, 99999)}.txt'\n        file_paths.append(file_path)\n        with open(file_path, 'w') as f:\n            f.write(string_split)\n    return file_paths", "compilation_passed": true, "time": 0.0009191036224365234, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    strings = input_string.split('\\n')\n    file_paths = []\n    for i, s in enumerate(strings):\n        s = re.sub(r'\\W+', '', s)\n        filename = ''.join(random.choices(string.digits, k=5)) + '.txt'\n        file_path = os.path.join(directory, filename)\n        file_paths.append(file_path)\n        with open(file_path, 'w') as f:\n            f.write(s)\n    return file_paths", "compilation_passed": true, "time": 0.0009222030639648438, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "def get_file_name():\n        return ''.join(random.choice(string.digits) for _ in range(5)) + '.txt'\n\n    def save_to_file(text, directory, filename):\n        file_path = os.path.join(directory, filename)\n        with open(file_path, 'w') as f:\n            f.write(text)\n        return file_path\n\n    file_paths = []\n    sentences = re.split(r\"(?<!\\w\\.\\w.)(?<![A-Z]\\.)(?<=[.?])\\s\", input_string)\n\n    for sentence in sentences:\n        if sentence.strip():\n            processed_sentence = re.sub('[^A-Za-z0-9]+', ' ', sentence)\n            file_path = save_to_file(processed_sentence, directory, get_file_name())\n            file_paths.append(file_path)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009799003601074219, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Split the input string into individual lines and remove special characters\n    text_list = [re.sub('[^A-Za-z0-9 ]+', '', line).strip() for line in input_string.split('\\n')]\n    text_list = list(filter(None, text_list))  # Remove empty strings\n\n    # Create the directory if it doesn't exist\n    os.makedirs(directory, exist_ok=True)\n\n    file_paths = []\n    for i, line in enumerate(text_list):\n        # Generate a random filename\n        random_chars = string.ascii_letters + string.digits\n        filename = ''.join(random.choice(random_chars) for _ in range(5))\n\n        # Save the line of text in the text file\n        file_path = os.path.join(directory, f\"{filename}.txt\")\n        with open(file_path, 'w') as f:\n            f.write(line)\n\n        # Append the file path to the list of file paths\n        file_paths.append(", "compilation_passed": false, "time": 0.00021886825561523438, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Remove special characters and punctuation from the input string\n    input_string = re.sub(r'[^\\w\\s]', '', input_string)\n    input_string = input_string.translate(str.maketrans('', '', string.punctuation))\n\n    # Split the input string into separate strings\n    input_strings = input_string.split(\"\\n\")\n\n    # Save each string as a separate text file with a randomly generated file name\n    file_paths = []\n    for input_string in input_strings:\n        # Generate a random file name\n        file_name = ''.join(random.choices(string.digits, k=5)) + '.txt'\n        # Create a file path in the given directory\n        file_path = os.path.join(directory, file_name)\n        # Write the input string to the file\n        with open(file_path, 'w') as file:\n            file.write(input_string)\n        # Add the file path to the list of file paths\n        file_paths.append(file_path)\n\n", "compilation_passed": true, "time": 0.0009028911590576172, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.isdir(directory):\n        os.makedirs(directory)\n    sentences = input_string.split('\\n')\n    file_paths = []\n\n    for i, sentence in enumerate(sentences):\n        sentence = re.sub('[^A-Za-z0-9\\s]+', '', sentence).strip()\n        if sentence:\n            file_path = os.path.join(directory, f'{random.randint(10000, 99999)}.txt')\n            file_paths.append(file_path)\n            with open(file_path, 'w') as f:\n                f.write(sentence)\n    return file_paths", "compilation_passed": true, "time": 0.0009191036224365234, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create the directory if it doesn't exist\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    # Split the input string into separate strings and save each as a separate text file\n    file_paths = []\n    for i, line in enumerate(input_string.split('\\n'), start=1):\n        # Remove special characters and save each string as a separate file\n        line = re.sub('[^a-zA-Z0-9 ]', '', line)\n        file_name = directory + '/' + ''.join(random.choices(string.digits, k=5)) + '.txt'\n        with open(file_name, 'w') as f:\n            f.write(line)\n        file_paths.append(file_name)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009970664978027344, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create the text file directory if it doesn't exist\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    # Split the input string into separate lines\n    lines = input_string.split('\\n')\n\n    # Remove special characters from each line\n    cleaned_lines = [re.sub(r'[^\\w\\s]', '', line) for line in lines]\n\n    # Generate random file names and save each cleaned line as a separate file\n    file_paths = []\n    for i, line in enumerate(cleaned_lines):\n        file_name = ''.join(random.choices(string.digits, k=5)) + '.txt'\n        file_path = os.path.join(directory, file_name)\n        with open(file_path, 'w') as f:\n            f.write(line)\n        file_paths.append(file_path)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009479522705078125, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_paths = []\n\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    lines = input_string.split(\"\\n\")\n    for line in lines:\n        if line:\n            stripped_line = re.sub(r'[^\\w\\s]', '', line).strip()\n            if stripped_line:\n                file_path = os.path.join(directory, ''.join(random.choices(string.digits, k=5)) + '.txt')\n                with open(file_path, 'w') as f:\n                    f.write(stripped_line)\n                file_paths.append(file_path)\n\n    return file_paths", "compilation_passed": true, "time": 0.0009217262268066406, "tests_passed": false, "error": "FileNotFoundError"}
