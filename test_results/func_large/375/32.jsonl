{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    reduced_data = pca.transform(l)\n    fig, ax = plt.subplots(1, 1)\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.scatter(reduced_data[:, 0], reduced_data[:, 1])\n\n    return ax", "compilation_passed": true, "time": 0.06549215316772461, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    l = pca.fit_transform(l)\n\n    fig, ax = plt.subplots()\n\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.scatter(l[:, 0], l[:, 1], c=\"red\")\n\n    return ax", "compilation_passed": true, "time": 0.06319379806518555, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    principal_components = pca.fit_transform(l)\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.set_xlabel('First Principal Component')\n    ax.set_ylabel('Second Principal Component')\n    ax.set_title('PCA Result')\n    ax.scatter(principal_components[:, 0], principal_components[:, 1], alpha=0.7)\n    return ax", "compilation_passed": true, "time": 0.06152820587158203, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    projected = pca.transform(l)\n    ax = plt.gca()\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.scatter(projected[:, 0], projected[:, 1])\n\n    return ax", "compilation_passed": true, "time": 0.004502058029174805, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    l_transformed = pca.fit_transform(l)\n\n    fig, ax = plt.subplots()\n    ax.set_title(\"PCA Result\")\n    ax.scatter(l_transformed[:, 0], l_transformed[:, 1])\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    plt.close(fig)\n\n    return ax", "compilation_passed": true, "time": 0.06310892105102539, "tests_passed": true, "error": null}
{"code": "# Your Code Here\n    # raise NotImplementedError\n    pca = PCA(n_components=2)\n    components = pca.fit_transform(l)\n    x_axis = components[:,0]\n    y_axis = components[:,1]\n    fig, ax = plt.subplots()\n    ax.scatter(x_axis,y_axis)\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    return ax", "compilation_passed": true, "time": 0.0710601806640625, "tests_passed": true, "error": null}
{"code": "# your code here\n    return ax", "compilation_passed": true, "time": 0.0012481212615966797, "tests_passed": false, "error": "NameError"}
{"code": "# TODO: complete this function\n    pca = PCA(n_components=2)\n    pca.fit(l)\n    components = pca.transform(l)\n    x_axis = components[:,0]\n    y_axis = components[:,1]\n    ax = plt.subplot()\n    ax.scatter(x_axis, y_axis)\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    plt.close()\n    return ax", "compilation_passed": true, "time": 0.02145099639892578, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    principal_components = pca.fit_transform(l)\n    ax = plt.scatter(x=principal_components[:, 0], y=principal_components[:, 1])\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.set_title(\"PCA Result\")\n    return ax", "compilation_passed": true, "time": 0.0020127296447753906, "tests_passed": false, "error": "AttributeError"}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    data_pca = pca.transform(l)\n    ax = plt.axes()\n    plt.scatter(data_pca[:, 0], data_pca[:, 1])\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.set_title(\"PCA Result\")\n    return ax", "compilation_passed": true, "time": 0.020325183868408203, "tests_passed": true, "error": null}
{"code": "# Your code here\n    pca = PCA(n_components=2)\n    pca.fit(l)\n    pc = pca.transform(l)\n    fig, ax = plt.subplots()\n    ax.scatter(pc[:, 0], pc[:, 1])\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.set_title(\"PCA Result\")\n    return ax", "compilation_passed": true, "time": 0.06735920906066895, "tests_passed": true, "error": null}
{"code": "# perform PCA\n    pca = PCA(n_components=2)\n    pca.fit(l)\n    pca_data = pca.transform(l)\n    # plot\n    fig, ax = plt.subplots()\n    ax.set_title('PCA Result')\n    ax.set_xlabel('First Principal Component')\n    ax.set_ylabel('Second Principal Component')\n    ax.scatter(pca_data[:,0], pca_data[:,1])\n    plt.close(fig)\n    return ax", "compilation_passed": true, "time": 0.06440496444702148, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    components = pca.fit_transform(l)\n    fig, ax = plt.subplots()\n    ax.scatter(components[:, 0], components[:, 1])\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    plt.show()\n    return ax", "compilation_passed": true, "time": 0.061929941177368164, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    plt.title(\"PCA Result\")\n    plt.xlabel(\"First Principal Component\")\n    plt.ylabel(\"Second Principal Component\")\n    return sns.scatterplot(x=pca.transform(l)[:,0], y=pca.transform(l)[:,1])", "compilation_passed": true, "time": 0.0016357898712158203, "tests_passed": false, "error": "NameError"}
{"code": "# TODO\n    pass", "compilation_passed": true, "time": 0.0009541511535644531, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    plt.scatter(pca.components_[0], pca.components_[1])\n    plt.xlabel(\"First Principal Component\")\n    plt.ylabel(\"Second Principal Component\")\n    plt.title(\"PCA Result\")\n    ax = plt.gca()\n    plt.show()\n    return ax", "compilation_passed": true, "time": 0.0029649734497070312, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    comp = pca.components_\n    ax = plt.axes()\n    ax.scatter(*comp.T)\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.set_title(\"PCA Result\")\n\n    return ax", "compilation_passed": true, "time": 0.0044231414794921875, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    X_pca = pca.transform(l)\n    ax = sns.scatterplot(x=X_pca[:, 0], y=X_pca[:, 1])\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    return ax", "compilation_passed": true, "time": 0.001438140869140625, "tests_passed": false, "error": "NameError"}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n\n    ax = plt.scatter(pca.components_[0], pca.components_[1])\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.set_title(\"PCA Result\")\n\n    return ax", "compilation_passed": true, "time": 0.0019042491912841797, "tests_passed": false, "error": "AttributeError"}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    return pca.transform(l)", "compilation_passed": true, "time": 0.0012440681457519531, "tests_passed": true, "error": null}
{"code": "# Write your code here\n    pass", "compilation_passed": true, "time": 0.0009479522705078125, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    #ax = plt.subplot()\n    pca_components = pca.transform(l)\n    #ax.scatter(pca_components[:, 0], pca_components[:, 1])\n    #ax.set_title('PCA Result')\n    #ax.set_xlabel('First Principal Component')\n    #ax.set_ylabel('Second Principal Component')\n    return pca_components", "compilation_passed": true, "time": 0.001219034194946289, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    principalComponents = pca.fit_transform(l)\n    ax = plt.axes()\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.scatter(principalComponents[:, 0], principalComponents[:, 1])\n    return ax", "compilation_passed": true, "time": 0.018420934677124023, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    components = pca.transform(l)\n    fig, ax = plt.subplots()\n    ax.scatter(components[:, 0], components[:, 1])\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.set_title(\"PCA Result\")\n    return ax", "compilation_passed": true, "time": 0.06789207458496094, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    data = pca.transform(l)\n    ax = sns.scatterplot(x=data[:, 0], y=data[:, 1])\n    ax.set_xlabel('First Principal Component')\n    ax.set_ylabel('Second Principal Component')\n    ax.set_title('PCA Result')\n    return ax", "compilation_passed": true, "time": 0.0015459060668945312, "tests_passed": false, "error": "NameError"}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    component_1 = pca.components_[0]\n    component_2 = pca.components_[1]\n    data_pca = pca.transform(l)\n\n    fig, ax = plt.subplots(figsize=(15, 15))\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    ax.scatter(data_pca[:, 0], data_pca[:, 1])\n    ax.arrow(0, 0, component_1[0], component_1[1], head_width=0.25)\n    ax.arrow(0, 0, component_2[0], component_2[1], head_width=0.25)\n    return ax", "compilation_passed": true, "time": 0.06625699996948242, "tests_passed": true, "error": null}
{"code": "# your code here\n    pass", "compilation_passed": true, "time": 0.0011639595031738281, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    X = pca.fit_transform(l)\n    ax = plt.axes()\n    ax.scatter(X[:, 0], X[:, 1], c=\"b\")\n    ax.set_title(\"PCA Result\")\n    ax.set_xlabel(\"First Principal Component\")\n    ax.set_ylabel(\"Second Principal Component\")\n    return ax", "compilation_passed": true, "time": 0.019430160522460938, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    pca.fit(l)\n    X_pca = pca.transform(l)\n    ax = plt.scatter(X_pca[:, 0], X_pca[:, 1])\n    ax.axes.set_title('PCA Result')\n    ax.axes.set_xlabel('First Principal Component')\n    ax.axes.set_ylabel('Second Principal Component')\n    return ax", "compilation_passed": true, "time": 0.0021071434020996094, "tests_passed": true, "error": null}
{"code": "pca = PCA(n_components=2)\n    l = pca.fit_transform(l)\n\n    ax = plt.axes()\n\n    # Create a scatter plot with the two principal components\n    plt.scatter(l[:, 0], l[:, 1])\n    plt.xlabel(\"First Principal Component\")\n    plt.ylabel(\"Second Principal Component\")\n    plt.title(\"PCA Result\")\n    ax = plt.show()\n    return ax", "compilation_passed": true, "time": 0.004637956619262695, "tests_passed": true, "error": null}
