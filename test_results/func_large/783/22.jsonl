{"code": "files_moved = 0\n    for root, dirs, files in os.walk(src_dir):\n        for file_name in files:\n            if file_name.endswith(extension):\n                source_path = os.path.join(root, file_name)\n                dest_path = os.path.join(dest_dir, file_name)\n                shutil.move(source_path, dest_path)\n                files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004956960678100586, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                src_path = os.path.join(root, file)\n                shutil.move(src_path, dest_dir)\n                files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004686117172241211, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            shutil.move(os.path.join(src_dir, file_name),\n                        os.path.join(dest_dir, file_name))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004493236541748047, "tests_passed": true, "error": null}
{"code": "# Initialize the counter\n    files_moved = 0\n\n    # Iterate over all files in the source directory\n    for filename in os.listdir(src_dir):\n        # Check if the file has the specified extension\n        if filename.endswith(extension):\n            # Construct the full paths to the source and destination files\n            src_file = os.path.join(src_dir, filename)\n            dest_file = os.path.join(dest_dir, filename)\n\n            # Move the file\n            shutil.move(src_file, dest_file)\n\n            # Increment the counter\n            files_moved += 1\n\n    # Return the number of files moved\n    return files_moved", "compilation_passed": true, "time": 0.004888057708740234, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file in os.listdir(src_dir):\n        if file.endswith(extension):\n            shutil.move(os.path.join(src_dir, file), dest_dir)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0049207210540771484, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            src_path = os.path.join(src_dir, filename)\n            dest_path = os.path.join(dest_dir, filename)\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0053751468658447266, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            src = os.path.join(src_dir, file_name)\n            dest = os.path.join(dest_dir, file_name)\n            shutil.move(src, dest)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.005731105804443359, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            src_path = os.path.join(src_dir, filename)\n            dest_path = os.path.join(dest_dir, filename)\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.004982948303222656, "tests_passed": true, "error": null}
{"code": "# Create the destination directory if it does not exist\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    # Get a list of all files in the source directory\n    files = os.listdir(src_dir)\n\n    # Move the files with the specified extension\n    files_moved = 0\n    for filename in files:\n        if filename.endswith('.' + extension):\n            src_path = os.path.join(src_dir, filename)\n            dest_path = os.path.join(dest_dir, filename)\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.0016531944274902344, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file in os.listdir(src_dir):\n        if file.endswith(extension):\n            shutil.move(os.path.join(src_dir, file), os.path.join(dest_dir, file))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004288911819458008, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            filepath = os.path.join(src_dir, filename)\n            shutil.move(filepath, dest_dir)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004445075988769531, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                file_path = os.path.join(root, file)\n                shutil.move(file_path, dest_dir)\n                files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004589080810546875, "tests_passed": true, "error": null}
{"code": "# Initialize the files_moved variable\n    files_moved = 0\n\n    # Loop through all the files in the source directory\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            # Construct the full path to the file\n            src_file_path = os.path.join(src_dir, file_name)\n            # Copy the file to the destination directory\n            shutil.copy(src_file_path, dest_dir)\n            # Increment the files_moved variable\n            files_moved += 1\n\n    # Return the number of files moved\n    return files_moved", "compilation_passed": true, "time": 0.006722927093505859, "tests_passed": true, "error": null}
{"code": "# Create the destination directory if it doesn't exist\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    # Find all files in the source directory with the specified extension\n    files_to_move = [f for f in os.listdir(src_dir) if f.endswith(extension)]\n\n    # Move the files to the destination directory\n    for f in files_to_move:\n        shutil.move(os.path.join(src_dir, f), os.path.join(dest_dir, f))\n\n    # Return the number of files moved\n    return len(files_to_move)", "compilation_passed": true, "time": 0.0056209564208984375, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            src_path = os.path.join(src_dir, file_name)\n            dest_path = os.path.join(dest_dir, file_name)\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004641056060791016, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if os.path.splitext(file_name)[1] == extension:\n            shutil.move(os.path.join(src_dir, file_name), dest_dir)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004724979400634766, "tests_passed": true, "error": null}
{"code": "# Initialize the variable to track the number of files moved\n    files_moved = 0\n\n    # List all the files in the source directory\n    files = os.listdir(src_dir)\n\n    # Loop through each file in the list\n    for file in files:\n        # Check if the file extension matches the specified extension\n        if file.endswith(extension):\n            # Construct the full file path of the source and destination file\n            src_file = os.path.join(src_dir, file)\n            dest_file = os.path.join(dest_dir, file)\n\n            # Move the file from the source directory to the destination directory\n            shutil.move(src_file, dest_file)\n\n            # Increment the count of files moved\n            files_moved += 1\n\n    # Return the number of files moved\n    return files_moved", "compilation_passed": true, "time": 0.004458904266357422, "tests_passed": true, "error": null}
{"code": "# Initialize count of files moved\n    files_moved = 0\n\n    # Check if the source directory exists\n    if not os.path.exists(src_dir):\n        return 0\n\n    # Create the destination directory if it doesn't exist\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    # Iterate through each file in the source directory\n    for filename in os.listdir(src_dir):\n        # Check if the file has the specified extension\n        if filename.endswith(extension):\n            src_path = os.path.join(src_dir, filename)\n            dest_path = os.path.join(dest_dir, filename)\n\n            # Move the file to the destination directory\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.004625082015991211, "tests_passed": true, "error": null}
{"code": "# Initialize a counter for the number of files moved\n    files_moved = 0\n\n    # Use os.scandir to efficiently list the files in src_dir\n    with os.scandir(src_dir) as src_files:\n        # Iterate over each file in src_dir\n        for src_file in src_files:\n            # Check if the file is a regular file with the correct extension\n            if src_file.is_file() and src_file.name.endswith(extension):\n                # Move the file using shutil.move\n                shutil.move(src_file.path, dest_dir)\n                # Increment the file counter\n                files_moved += 1\n\n    # Return the number of files moved\n    return files_moved", "compilation_passed": true, "time": 0.0058476924896240234, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            file_path = os.path.join(src_dir, file_name)\n            shutil.move(file_path, dest_dir)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.0047910213470458984, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            src_file = os.path.join(src_dir, filename)\n            dest_file = os.path.join(dest_dir, filename)\n            shutil.move(src_file, dest_file)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.005655050277709961, "tests_passed": true, "error": null}
{"code": "# Create destination directory if it doesn't exist\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    # Initialize count for moved files\n    files_moved = 0\n\n    # Iterate over files in source directory\n    for file_name in os.listdir(src_dir):\n        # Check if file has the specified extension\n        if file_name.endswith(extension):\n            # Get full file path in source and destination directories\n            src_file_path = os.path.join(src_dir, file_name)\n            dest_file_path = os.path.join(dest_dir, file_name)\n            # Move file to destination directory\n            shutil.move(src_file_path, dest_file_path)\n            # Increment count of moved files\n            files_moved += 1\n\n    # Return number of moved files\n    return files_moved", "compilation_passed": true, "time": 0.004525184631347656, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                src_path = os.path.join(root, file)\n                dest_path = os.path.join(dest_dir, file)\n                shutil.move(src_path, dest_path)\n                files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004508018493652344, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                src_path = os.path.join(root, file)\n                dest_path = os.path.join(dest_dir, file)\n\n                try:\n                    shutil.move(src_path, dest_path)\n                    files_moved += 1\n                    print(f\"{file} moved to {dest_dir}\")\n                except Exception as e:\n                    print(f\"Error moving {file}: {str(e)}\")\n\n    return files_moved", "compilation_passed": true, "time": 0.004555702209472656, "tests_passed": true, "error": null}
{"code": "# Create destination directory if it does not exist\n    os.makedirs(dest_dir, exist_ok=True)\n\n    # Move files with specified extension from source directory to destination directory\n    files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith('.'+extension):\n            src_path = os.path.join(src_dir, file_name)\n            dest_path = os.path.join(dest_dir, file_name)\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.0015380382537841797, "tests_passed": true, "error": null}
{"code": "# Initialize the counter\n    files_moved = 0\n\n    # Check if the source directory exists\n    if not os.path.exists(src_dir):\n        raise OSError(f\"Source directory {src_dir} does not exist.\")\n\n    # Check if the destination directory exists, if not, create it\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    # Loop through the files in the source directory\n    for file in os.listdir(src_dir):\n        # Check if the file has the specified extension\n        if file.endswith(extension):\n            # Construct the full file path for both source and destination directories\n            src_path = os.path.join(src_dir, file)\n            dest_path = os.path.join(dest_dir, file)\n            # Move the file to the destination directory\n            shutil.move(src_path, dest_path)\n            # Increment the counter\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.005566120147705078, "tests_passed": true, "error": null}
