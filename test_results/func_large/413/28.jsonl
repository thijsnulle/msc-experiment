{"code": "mail_user = os.environ.get(\"MAIL_USER\")\n    mail_password = os.environ.get(\"MAIL_PASSWORD\")\n\n    mail = Mail(app)\n    configs = {\n        \"MAIL_SERVER\": os.environ.get(\"MAIL_SERVER\", \"smtp.gmail.com\"),\n        \"MAIL_PORT\": os.environ.get(\"MAIL_PORT\", 465),\n        \"MAIL_USER\": os.environ.get(\"MAIL_USER\", mail_user),\n        \"MAIL_PASSWORD\": os.environ.get(\"MAIL_PASSWORD\", mail_password),\n        \"MAIL_USE_TLS\": os.environ.get(\"MAIL_USE_TLS\", False),\n        \"MAIL_USE_SSL\": os.environ.get(\"MAIL_USE_SSL\", True),\n        \"MAIL_DEFAULT_SENDER\": os.environ.get(\"MAIL_DEFAULT_SENDER\"", "compilation_passed": false, "time": 0.0001819133758544922, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Init mail\n    mail = Mail()\n    # Use env if possible\n    try:\n        mail_user_name = os.environ['EMAIL_USER_NAME']\n    except KeyError:\n        mail_user_name = 'test@example.com'\n    try:\n        mail_password = os.environ['EMAIL_PASSWORD']\n    except KeyError:\n        mail_password = '123456'\n    try:\n        mail_server = os.environ['EMAIL_SMTP_SERVER']\n    except KeyError:\n        mail_server = 'smtp.gmail.com'\n    try:\n        mail_port = os.environ['EMAIL_SMTP_PORT']\n    except KeyError:\n        mail_port = 465\n    try:\n        mail_use_tls = os.environ['EMAIL_USE_TLS']\n    except KeyError:\n        mail_use_tls = False\n    try:\n        mail_use_ssl = os.environ['EMAIL_USE_SSL']\n    except KeyError:\n        mail_", "compilation_passed": true, "time": 0.0014770030975341797, "tests_passed": false, "error": "NameError"}
{"code": "from flask import current_app, Config\n    mail = Mail(app)\n    configs = current_app.config\n\n    configs.from_object(Config(\n        MAIL_SERVER=os.environ.get(\"MAIL_SERVER\") or 'localhost',\n        MAIL_PORT=int(os.environ.get(\"MAIL_PORT\") or 25),\n        MAIL_USERNAME=os.environ.get(\"MAIL_USERNAME\"),\n        MAIL_PASSWORD=os.environ.get(\"MAIL_PASSWORD\"),\n    ))\n    return mail, configs", "compilation_passed": true, "time": 0.0018229484558105469, "tests_passed": false, "error": "with app.app_context(). See the documentation for more information."}
{"code": "mail = Mail(app)\n\n    # set up the mail server\n    # these details are retrieved from environment variables.\n    # if they do not exist, use the following defaults:\n    server = os.environ.get(\"MAIL_SERVER\", \"smtp.gmail.com\")\n    port = os.environ.get(\"MAIL_PORT\", 587)\n    user = os.environ.get(\"MAIL_USER\", \"your_username\")\n    password = os.environ.get(\"MAIL_PASSWORD\", \"your_password\")\n\n    mail_configs = {\n        \"MAIL_SERVER\": server,\n        \"MAIL_PORT\": port,\n        \"MAIL_USER\": user,\n        \"MAIL_PASSWORD\": password,\n    }\n\n    for k, v in mail_configs.items():\n        app.config[k] = v\n\n    return mail, mail_configs", "compilation_passed": true, "time": 0.001413106918334961, "tests_passed": true, "error": null}
{"code": "mail_server = os.environ.get(\"MAIL_SERVER\", \"localhost\")\n    mail_port = os.environ.get(\"MAIL_PORT\", \"1025\")\n    mail_user = os.environ.get(\"MAIL_USERNAME\", \"test\")\n    mail_password = os.environ.get(\"MAIL_PASSWORD\", \"test\")\n    mail_use_tls = os.environ.get(\"MAIL_USE_TLS\", True)\n\n    app.config.update(\n        MAIL_SERVER=mail_server,\n        MAIL_PORT=mail_port,\n        MAIL_USE_TLS=mail_use_tls,\n        MAIL_USERNAME=mail_user,\n        MAIL_PASSWORD=mail_password,\n    )\n\n    mail = Mail(app)\n    configs = app.config.to_dict()\n    return mail, configs", "compilation_passed": true, "time": 0.0013341903686523438, "tests_passed": false, "error": "AttributeError"}
{"code": "# Create the Mail instance\n    mail = Mail(app)\n\n    # Retrieve the server details from environment variables or set them as defaults\n    mail_user = os.environ.get(\"MAIL_USER\", \"admin@example.com\")\n    mail_password = os.environ.get(\"MAIL_PASSWORD\", \"12345\")\n    mail_server = os.environ.get(\"MAIL_SERVER\", \"mail.example.com\")\n    mail_port = os.environ.get(\"MAIL_PORT\", 25)\n\n    # Retrieve the default Flask mail configurations\n    configs = app.config[\"MAIL_DEFAULT_SENDER\"] = mail_user\n    configs = app.config[\"MAIL_SERVER\"] = mail_server\n    configs = app.config[\"MAIL_PORT\"] = mail_port\n    configs = app.config[\"MAIL_USE_TLS\"] = False\n    configs = app.config[\"MAIL_USE_SSL\"] = False\n", "compilation_passed": true, "time": 0.001262664794921875, "tests_passed": false, "error": "TypeError"}
{"code": "# Get email details from environment variables or defaults\n    server = os.environ.get(\"MAIL_SERVER\", \"localhost\")\n    port = os.environ.get(\"MAIL_PORT\", \"25\")\n    user = os.environ.get(\"MAIL_USERNAME\", None)\n    passwd = os.environ.get(\"MAIL_PASSWORD\", None)\n\n    # Create the Mail instance\n    mail = Mail()\n\n    # Register the app with Flask-Mail\n    mail.init_app(app)\n\n    # Extract the email configurations\n    configs = {\n        \"MAIL_SERVER\": server,\n        \"MAIL_PORT\": port,\n        \"MAIL_USERNAME\": user,\n        \"MAIL_PASSWORD\": passwd,\n    }\n\n    return mail, configs", "compilation_passed": true, "time": 0.0012881755828857422, "tests_passed": false, "error": "KeyError"}
{"code": "app.config.update(\n        MAIL_SERVER=os.environ.get(\"MAIL_SERVER\", \"localhost\"),\n        MAIL_PORT=int(os.environ.get(\"MAIL_PORT\", \"25\")),\n        MAIL_USE_TLS=False,\n        MAIL_USE_SSL=False,\n        MAIL_DEBUG=app.debug,\n        MAIL_DEFAULT_SENDER=os.environ.get(\"MAIL_DEFAULT_SENDER\"),\n        MAIL_MAX_EMAILS=None,\n        MAIL_USE_LOCAL_SEND=False,\n        MAIL_RECIPIENTS=None,\n    )\n\n    mail = Mail(app)\n\n    return mail, app.config", "compilation_passed": true, "time": 0.001257181167602539, "tests_passed": false, "error": "KeyError"}
{"code": "mail_user = os.environ.get(\"MAIL_USER\", \"test@gmail.com\")\n    mail_password = os.environ.get(\"MAIL_PASSWORD\", \"testpass\")\n    mail_server = os.environ.get(\"MAIL_SERVER\", \"smtp.gmail.com\")\n    mail_port = os.environ.get(\"MAIL_PORT\", 465)\n    mail = Mail(app)\n\n    configs = {\n        \"MAIL_SERVER\": mail_server,\n        \"MAIL_PORT\": mail_port,\n        \"MAIL_USERNAME\": mail_user,\n        \"MAIL_PASSWORD\": mail_password,\n        \"MAIL_USE_TLS\": False,\n        \"MAIL_USE_SSL\": True,\n    }\n    for var, val in configs.items():\n        app.config[var] = val\n    return mail, configs", "compilation_passed": true, "time": 0.001276254653930664, "tests_passed": true, "error": null}
{"code": "mail = Mail(app)\n    configs = dict(\n        MAIL_SERVER=os.getenv('MAIL_SERVER', 'smtp.example.com'),\n        MAIL_PORT=int(os.getenv('MAIL_PORT', '465')),\n        MAIL_USERNAME=os.getenv('MAIL_USERNAME', 'user'),\n        MAIL_PASSWORD=os.getenv('MAIL_PASSWORD', 'password'),\n        MAIL_USE_TLS=bool(os.getenv('MAIL_USE_TLS', 'False')),\n        MAIL_USE_SSL=bool(os.getenv('MAIL_USE_SSL', 'True'))\n    )\n    return mail, configs", "compilation_passed": true, "time": 0.0012640953063964844, "tests_passed": true, "error": null}
{"code": "if \"MAIL_SERVER\" not in app.config:\n        app.config[\"MAIL_SERVER\"] = os.getenv(\"MAIL_SERVER\")\n    if \"MAIL_PORT\" not in app.config:\n        app.config[\"MAIL_PORT\"] = os.getenv(\"MAIL_PORT\")\n    if \"MAIL_USERNAME\" not in app.config:\n        app.config[\"MAIL_USERNAME\"] = os.getenv(\"MAIL_USERNAME\")\n    if \"MAIL_PASSWORD\" not in app.config:\n        app.config[\"MAIL_PASSWORD\"] = os.getenv(\"MAIL_PASSWORD\")\n\n    mail = Mail(app)\n    return mail, app.config", "compilation_passed": true, "time": 0.0014500617980957031, "tests_passed": true, "error": null}
{"code": "mail = Mail()\n\n    mail_server = os.environ.get('MAIL_SERVER') or 'localhost'\n    mail_port = int(os.environ.get('MAIL_PORT') or 25)\n    mail_tls = True if os.environ.get('MAIL_TLS') == \"True\" else False\n    mail_ssl = True if os.environ.get('MAIL_SSL') == \"True\" else False\n\n    configs = {\n        \"MAIL_SERVER\": mail_server,\n        \"MAIL_PORT\": mail_port,\n        \"MAIL_USE_TLS\": mail_tls,\n        \"MAIL_USE_SSL\": mail_ssl\n    }\n\n    app.config.update(configs)\n    mail.init_app(app)\n\n    return mail, configs", "compilation_passed": true, "time": 0.0012717247009277344, "tests_passed": false, "error": "KeyError"}
{"code": "mail_host = os.environ.get(\"MAIL_HOST\")\n    mail_port = os.environ.get(\"MAIL_PORT\")\n    mail_username = os.environ.get(\"MAIL_USERNAME\")\n    mail_password = os.environ.get(\"MAIL_PASSWORD\")\n\n    mail = Mail(app)\n    configs = app.config.update(\n        MAIL_SERVER=mail_host or 'localhost',\n        MAIL_PORT=int(mail_port or 25),\n        MAIL_USE_TLS=True,\n        MAIL_USERNAME=mail_username,\n        MAIL_PASSWORD=mail_password\n    )\n    return mail, configs", "compilation_passed": true, "time": 0.0012331008911132812, "tests_passed": false, "error": "TypeError"}
{"code": "configs = {\n        \"MAIL_SERVER\": os.environ.get(\"MAIL_SERVER\", \"localhost\"),\n        \"MAIL_PORT\": os.environ.get(\"MAIL_PORT\", 2525),\n        \"MAIL_USE_TLS\": os.environ.get(\"MAIL_USE_TLS\", False),\n        \"MAIL_USE_SSL\": os.environ.get(\"MAIL_USE_SSL\", False),\n        \"MAIL_USERNAME\": os.environ.get(\"MAIL_USERNAME\", \"test\"),\n        \"MAIL_PASSWORD\": os.environ.get(\"MAIL_PASSWORD\", \"test\"),\n    }\n\n    for key, value in configs.items():\n        app.config[key] = value\n\n    return Mail(app), configs", "compilation_passed": true, "time": 0.001249074935913086, "tests_passed": true, "error": null}
{"code": "mail = Mail(app)\n    configs = app.config.copy()\n\n    configs['MAIL_SERVER'] = os.environ.get('MAIL_SERVER') or 'mail.google.com'\n    configs['MAIL_PORT'] = int(os.environ.get('MAIL_PORT') or 465)\n    configs['MAIL_USE_TLS'] = False\n    configs['MAIL_USE_SSL'] = not configs['MAIL_PORT'] == 25\n    configs['MAIL_USERNAME'] = os.environ.get('MAIL_USERNAME') or 'test@gmail.com'\n    configs['MAIL_PASSWORD'] = os.environ.get('MAIL_PASSWORD') or 'password'\n    configs['MAIL_DEFAULT_SENDER'] = configs['MAIL_USERNAME']\n\n    return mail, configs", "compilation_passed": true, "time": 0.0012831687927246094, "tests_passed": true, "error": null}
{"code": "mail_user = os.environ.get('EMAIL_USER') or 'username'\n    mail_pass = os.environ.get('EMAIL_PASS') or 'pass'\n    mail_server = os.environ.get('EMAIL_SMTP') or 'smtp.gmail.com'\n    mail_port = os.environ.get('EMAIL_PORT') or '465'\n\n    app.config.update(\n        MAIL_SERVER=mail_server,\n        MAIL_PORT=mail_port,\n        MAIL_USERNAME=mail_user,\n        MAIL_PASSWORD=mail_pass,\n        MAIL_USE_SSL=True,\n        MAIL_USE_TLS=False,\n    )\n    mail = Mail(app)\n    return mail, app.config", "compilation_passed": true, "time": 0.0012631416320800781, "tests_passed": true, "error": null}
{"code": "mail = Mail()\n    if not app.config.get(\"MAIL_SERVER\"):\n        app.config.update(\n            MAIL_SERVER=os.environ.get(\"MAIL_SERVER\", \"localhost\"),\n            MAIL_PORT=int(os.environ.get(\"MAIL_PORT\", 25)),\n            MAIL_USERNAME=os.environ.get(\"MAIL_USERNAME\", None),\n            MAIL_PASSWORD=os.environ.get(\"MAIL_PASSWORD\", None),\n            MAIL_USE_TLS=bool(os.environ.get(\"MAIL_USE_TLS\", True)),\n            MAIL_USE_SSL=bool(os.environ.get(\"MAIL_USE_SSL\", False)),\n        )\n\n    return mail, dict(**app.config)", "compilation_passed": true, "time": 0.0012619495391845703, "tests_passed": true, "error": null}
{"code": "mail = Mail(app)\n    server, port = os.environ.get(\"SERVER_MAIL\"), os.environ.get(\"PORT_MAIL\")\n\n    if server is None:\n        server = \"smtp.gmail.com\"\n    else:\n        server = server.replace(\" \", \"\")\n\n    if port is None:\n        port = 465\n    else:\n        port = int(port)\n\n    mail_configs = {\n        \"MAIL_SERVER\": server,\n        \"MAIL_PORT\": port,\n        \"MAIL_USE_TLS\": True,\n        \"MAIL_USE_SSL\": True,\n        \"MAIL_USERNAME\": os.environ.get(\"USER_MAIL\"),\n        \"MAIL_PASSWORD\": os.environ.get(\"PASS_MAIL\"),\n    }\n\n    app.config.update(mail_configs)\n\n    return mail, mail_configs", "compilation_passed": true, "time": 0.0013136863708496094, "tests_passed": true, "error": null}
{"code": "mail_user_name = os.environ.get('mail_user_name', \"user@gmail.com\")\n    mail_password = os.environ.get('mail_password', \"\")\n    mail_port = os.environ.get('mail_port', \"2525\")\n    mail_server = os.environ.get('mail_server', \"smtp.mailtrap.io\")\n    mail_tls = os.environ.get('mail_tls', \"False\")\n    mail_use_ssl = os.environ.get('mail_use_ssl', \"False\")\n\n    configs = {\n        \"MAIL_SERVER\": mail_server,\n        \"MAIL_PORT\": mail_port,\n        \"MAIL_USERNAME\": mail_user_name,\n        \"MAIL_PASSWORD\": mail_password,\n        \"MAIL_DEFAULT_SENDER\": mail_user_name,\n        \"MAIL_MAX_EMAILS\": None,\n        \"MAIL_USE_TLS\": mail_t", "compilation_passed": false, "time": 0.0001647472381591797, "tests_passed": false, "error": "SyntaxError"}
{"code": "mail = Mail()\n    configs = {}\n    #\n    configs[\"MAIL_SERVER\"] = os.environ.get(\"EMAIL_HOST\") or \"smtp.gmail.com\"\n    configs[\"MAIL_PORT\"] = int(os.environ.get(\"EMAIL_PORT\") or 587)\n    configs[\"MAIL_USE_TLS\"] = True\n    configs[\"MAIL_USE_SSL\"] = False\n    configs[\"MAIL_USERNAME\"] = os.environ.get(\"EMAIL_USER\")\n    configs[\"MAIL_PASSWORD\"] = os.environ.get(\"EMAIL_PASSWORD\")\n\n    app.config.update(configs)\n\n    return mail, configs", "compilation_passed": true, "time": 0.001271963119506836, "tests_passed": true, "error": null}
{"code": "mail = Mail(app)\n\n    if not all([os.environ.get(\"MAIL_USERNAME\"), os.environ.get(\"MAIL_PASSWORD\")]):\n        configs = {\n            \"MAIL_USERNAME\": \"admin@example.com\",\n            \"MAIL_PASSWORD\": \"password\",\n            \"MAIL_DEFAULT_SENDER\": \"admin@example.com\",\n            \"MAIL_SERVER\": \"localhost\",\n            \"MAIL_PORT\": 25,\n            \"MAIL_USE_TLS\": False,\n            \"MAIL_USE_SSL\": False,\n            \"MAIL_MAX_EMAILS\": None,\n        }\n\n        for key, value in configs.items():\n            app.config[key] = value\n\n    return mail, app.config", "compilation_passed": true, "time": 0.001277923583984375, "tests_passed": true, "error": null}
{"code": "mail_server = os.environ.get(\"MAIL_SERVER\", \"localhost\")\n    mail_port = os.environ.get(\"MAIL_PORT\", 587)\n    mail_user = os.environ.get(\"MAIL_USER\", \"\")\n    mail_password = os.environ.get(\"MAIL_PASSWORD\", \"\")\n    mail = Mail(app)\n    app.config.update(\n        MAIL_SERVER=mail_server,\n        MAIL_PORT=mail_port,\n        MAIL_USE_TLS=True,\n        MAIL_USERNAME=mail_user,\n        MAIL_PASSWORD=mail_password,\n    )\n    configs = dict(app.config)\n    return mail, configs", "compilation_passed": true, "time": 0.0012688636779785156, "tests_passed": true, "error": null}
{"code": "mail_server = os.environ.get('MAIL_SERVER', 'localhost')\n    mail_port = os.environ.get('MAIL_PORT', 25)\n    mail = Mail(app)\n    configs = {\n        'MAIL_SERVER': mail_server,\n        'MAIL_PORT': mail_port,\n    }\n    return mail, configs", "compilation_passed": true, "time": 0.0011899471282958984, "tests_passed": false, "error": "KeyError"}
{"code": "mail = Mail()\n    mail.init_app(app)\n    mail_server = os.environ.get(\"MAIL_SERVER\")\n    if not mail_server:\n        mail_server = \"localhost\"\n    mail_port = os.environ.get(\"MAIL_PORT\")\n    if not mail_port:\n        mail_port = 25\n    mail_user = os.environ.get(\"MAIL_USER\")\n    if not mail_user:\n        mail_user = \"user@localhost\"\n    mail_password = os.environ.get(\"MAIL_PASSWORD\")\n    if not mail_password:\n        mail_password = \"password\"\n\n    configs = {\n        \"MAIL_SERVER\": mail_server,\n        \"MAIL_PORT\": mail_port,\n        \"MAIL_USE_TLS\": True,\n        \"MAIL_USE_SSL\": False,\n        \"MAIL_USER\": mail_user,\n        \"MAIL_PASSWORD\": mail_password,\n        \"MAIL_DEFAULT_SENDER\":", "compilation_passed": false, "time": 0.0001780986785888672, "tests_passed": false, "error": "SyntaxError"}
{"code": "mail = Mail(app)\n    configs = {\n        'MAIL_SERVER': os.environ.get(\n            'MAIL_SERVER', 'smtp.googlemail.com'),\n        'MAIL_PORT': os.environ.get(\n            'MAIL_PORT', '587'),\n        'MAIL_USE_TLS': os.environ.get(\n            'MAIL_USE_TLS', 'True'),\n        'MAIL_USERNAME': os.environ.get(\n            'MAIL_USERNAME', 'user@gmail.com'),\n        'MAIL_PASSWORD': os.environ.get(\n            'MAIL_PASSWORD', 'password')\n    }\n    return mail, configs", "compilation_passed": true, "time": 0.0013051033020019531, "tests_passed": true, "error": null}
{"code": "mail = Mail(app)\n    if os.environ.get(\"MAIL_SERVER\"):\n        MAIL_SERVER = os.environ.get(\"MAIL_SERVER\")\n    else:\n        MAIL_SERVER = \"smtp.gmail.com\"\n    if os.environ.get(\"MAIL_PORT\"):\n        MAIL_PORT = os.environ.get(\"MAIL_PORT\")\n    else:\n        MAIL_PORT = 465\n    if os.environ.get(\"MAIL_USERNAME\"):\n        MAIL_USERNAME = os.environ.get(\"MAIL_USERNAME\")\n    else:\n        MAIL_USERNAME = \"username\"\n    if os.environ.get(\"MAIL_PASSWORD\"):\n        MAIL_PASSWORD = os.environ.get(\"MAIL_PASSWORD\")\n    else:\n        MAIL_PASSWORD = \"password\"\n    if os.environ.get(\"MAIL_DEFAULT_SENDER\"):\n        MAIL_DEFAULT_SENDER =", "compilation_passed": false, "time": 0.0001678466796875, "tests_passed": false, "error": "SyntaxError"}
{"code": "mail = Mail(app)\n\n    server = os.environ.get('MAIL_SERVER')\n    server = server if server is not None else \"smtp.gmail.com\"\n\n    port = os.environ.get('MAIL_PORT')\n    port = port if port is not None else 465\n\n    user = os.environ.get('MAIL_USER')\n    user = user if user is not None else \"test_user\"\n\n    password = os.environ.get('MAIL_PASSWORD')\n    password = password if password is not None else \"test_password\"\n\n    sender = os.environ.get('MAIL_SENDER')\n    sender = sender if sender is not None else \"test_sender\"\n\n    app.config.update(\n        MAIL_SERVER=server,\n        MAIL_PORT=port,\n        MAIL_USER=user,\n        MAIL_PASSWORD=password,\n        MAIL_SENDER=sender,\n        MAIL_USE_TLS=False,\n        MAIL_USE_SSL=True\n    )", "compilation_passed": true, "time": 0.001322031021118164, "tests_passed": false, "error": "TypeError"}
{"code": "# Configure email server details from environment variables\n    server = os.environ.get(\"MAIL_SERVER\", \"localhost\")\n    port = os.environ.get(\"MAIL_PORT\", \"1025\")\n    user = os.environ.get(\"MAIL_USERNAME\", \"test\")\n    password = os.environ.get(\"MAIL_PASSWORD\", \"test\")\n    use_ssl = os.environ.get(\"MAIL_USE_SSL\", \"False\").lower() == \"true\"\n    use_tsl = os.environ.get(\"MAIL_USE_TSL\", \"False\").lower() == \"true\"\n\n    # Configure Flask-Mail with the retrieved details\n    app.config.update(\n        MAIL_SERVER=server,\n        MAIL_PORT=port,\n        MAIL_USERNAME=user,\n        MAIL_PASSWORD=password,\n        MAIL_USE_SSL=use_ssl,\n        MAIL_USE_TSL=use_tsl,", "compilation_passed": false, "time": 0.00017523765563964844, "tests_passed": false, "error": "SyntaxError"}
{"code": "mail = Mail(app)\n    return mail, mail.init_app(app)", "compilation_passed": true, "time": 0.0011699199676513672, "tests_passed": false, "error": "TypeError"}
{"code": "mail = Mail(app)\n    configs = {\n        \"MAIL_USERNAME\": os.environ.get(\"MAIL_USERNAME\", \"test@test.com\"),\n        \"MAIL_PASSWORD\": os.environ.get(\"MAIL_PASSWORD\", \"password\"),\n        \"MAIL_PORT\": os.environ.get(\"MAIL_PORT\", 25),\n        \"MAIL_USE_TLS\": os.environ.get(\"MAIL_USE_TLS\", True),\n        \"MAIL_DEFAULT_SENDER\": os.environ.get(\"MAIL_DEFAULT_SENDER\", \"test@test.com\"),\n        \"MAIL_SERVER\": os.environ.get(\"MAIL_SERVER\", \"127.0.0.1\"),\n        \"MAIL_USE_SSL\": os.environ.get(\"MAIL_USE_SSL\", False),\n    }\n    # set the configs for the app\n    for k, v in configs.", "compilation_passed": false, "time": 0.0001430511474609375, "tests_passed": false, "error": "SyntaxError"}
