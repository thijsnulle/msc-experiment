{"code": "files = os.listdir(src_dir)\n    if files:\n        random.seed(seed)\n        selected_file = random.choice(files)\n        src_file_path = os.path.join(src_dir, selected_file)\n        dest_file_path = os.path.join(dest_dir, selected_file)\n        shutil.move(src_file_path, dest_file_path)\n        return os.path.basename(selected_file)\n    else:\n        return \"\"", "compilation_passed": true, "time": 0.014356851577758789, "tests_passed": true, "error": null}
{"code": "os.makedirs(src_dir, exist_ok=True)\n    os.makedirs(dest_dir, exist_ok=True)\n    random.seed(seed)\n    files = [f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    if not files:\n        raise FileNotFoundError(f\"No files found in directory: {src_dir}\")\n    filename = random.choice(files)\n    src_path = os.path.join(src_dir, filename)\n    dest_path = os.path.join(dest_dir, filename)\n    shutil.move(src_path, dest_path)\n    return filename", "compilation_passed": true, "time": 0.02441096305847168, "tests_passed": true, "error": null}
{"code": "# Set random seed\n    random.seed(seed)\n\n    # Get the list of all files in the source directory\n    file_list = os.listdir(src_dir)\n\n    # Randomly select a file from the list\n    file_to_move = random.choice(file_list)\n\n    # Get the full path of the file to be moved\n    src_file_path = os.path.join(src_dir, file_to_move)\n\n    # Move the file to the destination directory\n    shutil.move(src_file_path, dest_dir)\n\n    # Return the name of the file moved (without the path)\n    return os.path.basename(src_file_path)", "compilation_passed": true, "time": 0.01542520523071289, "tests_passed": false, "error": "IndexError"}
{"code": "# Get list of files in src directory\n    files = os.listdir(src_dir)\n    # Set random seed for reproducibility\n    random.seed(seed)\n    # Select a random file from the list\n    file = random.choice(files)\n    # Create paths for source and destination files\n    src_file = os.path.join(src_dir, file)\n    dest_file = os.path.join(dest_dir, file)\n    # Move the file from source to destination\n    shutil.move(src_file, dest_file)\n    # Return the name of the file moved\n    return file", "compilation_passed": true, "time": 0.013895988464355469, "tests_passed": false, "error": "IndexError"}
{"code": "random.seed(seed)\n    files = [f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    if not files:\n        return \"No files in the source directory.\"\n    filename = random.choice(files)\n    shutil.move(os.path.join(src_dir, filename), dest_dir)\n    return filename", "compilation_passed": true, "time": 0.014770269393920898, "tests_passed": true, "error": null}
{"code": "files = os.listdir(src_dir)\n    random.seed(seed)\n    file = random.choice(files)\n    shutil.move(os.path.join(src_dir, file), os.path.join(dest_dir, file))\n    return file", "compilation_passed": true, "time": 0.013650178909301758, "tests_passed": false, "error": "IndexError"}
{"code": "random.seed(seed)\n    files = os.listdir(src_dir)\n    if not files:\n        return ''\n    file = random.choice(files)\n    shutil.move(os.path.join(src_dir, file), dest_dir)\n    return file", "compilation_passed": true, "time": 0.013640165328979492, "tests_passed": true, "error": null}
{"code": "# Get list of file names in src directory\n    files = os.listdir(src_dir)\n    if len(files) == 0:\n        raise ValueError('No files found in source directory')\n\n    # Set random seed\n    random.seed(seed)\n\n    # Pick a random file\n    filename = random.choice(files)\n\n    # Move file\n    src_path = os.path.join(src_dir, filename)\n    dest_path = os.path.join(dest_dir, filename)\n    shutil.move(src_path, dest_path)\n\n    # Return the name of the file moved\n    return filename", "compilation_passed": true, "time": 0.015159130096435547, "tests_passed": false, "error": "ValueError"}
{"code": "# Set the seed of the random number generator\n    random.seed(seed)\n\n    # Get a list of all files in the source directory\n    files = os.listdir(src_dir)\n\n    # Select a random file from the list\n    random_file = random.choice(files)\n\n    # Move the selected file from the source to the destination directory\n    src_path = os.path.join(src_dir, random_file)\n    dest_path = os.path.join(dest_dir, random_file)\n    shutil.move(src_path, dest_path)\n\n    # Return the name of the file that was moved\n    return random_file", "compilation_passed": true, "time": 0.013926267623901367, "tests_passed": false, "error": "IndexError"}
{"code": "random.seed(seed)\n    files = os.listdir(src_dir)\n    file_name = random.choice(files)\n    src_path = os.path.join(src_dir, file_name)\n    dest_path = os.path.join(dest_dir, file_name)\n    shutil.move(src_path, dest_path)\n    return file_name", "compilation_passed": true, "time": 0.015161275863647461, "tests_passed": false, "error": "IndexError"}
{"code": "random.seed(seed)\n    files = os.listdir(src_dir)\n    if not files:\n        raise ValueError(\"No files found in the source directory.\")\n    file_to_move = random.choice(files)\n    shutil.move(os.path.join(src_dir, file_to_move), dest_dir)\n    return os.path.basename(file_to_move)", "compilation_passed": true, "time": 0.013813018798828125, "tests_passed": false, "error": "ValueError"}
{"code": "if not os.path.exists(src_dir) or not os.path.isdir(src_dir):\n        raise ValueError(f\"src_dir must be an existing directory. src_dir:{src_dir}\")\n\n    if not os.path.exists(dest_dir) or not os.path.isdir(dest_dir):\n        raise ValueError(f\"dest_dir must be an existing directory. dest_dir:{dest_dir}\")\n\n    if not isinstance(seed, int):\n        raise TypeError(f\"seed must be of type int. seed:{seed}\")\n\n    random.seed(seed)\n    files = [os.path.join(src_dir, f) for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    if len(files) == 0:\n        raise ValueError(\"No files found in src_dir.\")\n\n    filename = random.choice(files)\n    shutil.move(filename, os.path.join(dest_dir,", "compilation_passed": false, "time": 0.00027489662170410156, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Set the seed for the random number generator\n    random.seed(seed)\n    # List the files in the source directory\n    files = os.listdir(src_dir)\n    # Select a random file\n    random_file = random.choice(files)\n    # Move the file to the destination directory\n    shutil.move(os.path.join(src_dir, random_file), dest_dir)\n    # Return the name of the file moved\n    return random_file", "compilation_passed": true, "time": 0.014549970626831055, "tests_passed": false, "error": "IndexError"}
{"code": "file = random.Random(seed).choice([f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))])\n    shutil.move(os.path.join(src_dir, file), dest_dir)\n\n    return file", "compilation_passed": true, "time": 0.013964176177978516, "tests_passed": false, "error": "IndexError"}
{"code": "random.seed(seed)\n\n    src_dir_files = os.listdir(src_dir)\n    file_to_move = random.choice(src_dir_files)\n    src_file_path = os.path.join(src_dir, file_to_move)\n    dest_file_path = os.path.join(dest_dir, file_to_move)\n    shutil.move(src_file_path, dest_file_path)\n    return os.path.basename(dest_file_path)", "compilation_passed": true, "time": 0.014038801193237305, "tests_passed": false, "error": "IndexError"}
{"code": "random.seed(seed)\n    files = os.listdir(src_dir)\n    random_file = random.choice(files)\n    src_path = os.path.join(src_dir, random_file)\n    dest_path = os.path.join(dest_dir, random_file)\n    shutil.move(src_path, dest_path)\n    return random_file", "compilation_passed": true, "time": 0.015408992767333984, "tests_passed": false, "error": "IndexError"}
{"code": "# Generate the seed for the random number generator\n    random.seed(seed)\n    # Get the list of files in the source directory\n    files = [f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    # Select a random file from the list\n    selected_file = random.choice(files)\n    # Move the file to the destination directory\n    shutil.move(os.path.join(src_dir, selected_file), os.path.join(dest_dir, selected_file))\n    # Return the name of the file moved\n    return selected_file", "compilation_passed": true, "time": 0.01392674446105957, "tests_passed": false, "error": "IndexError"}
{"code": "# Get a list of all files in the source directory\n    files = os.listdir(src_dir)\n\n    # Select a random file and copy it to the destination directory\n    if len(files) > 0:\n        random.seed(seed)\n        random_file = random.choice(files)\n        shutil.move(os.path.join(src_dir, random_file), os.path.join(dest_dir, random_file))\n        return random_file\n    else:\n        return None", "compilation_passed": true, "time": 0.014643192291259766, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    files = os.listdir(src_dir)\n    if not files:\n        raise FileNotFoundError(\"No files found in the source directory.\")\n    file_name = random.choice(files)\n    src_file = os.path.join(src_dir, file_name)\n    dest_file = os.path.join(dest_dir, file_name)\n    shutil.move(src_file, dest_file)\n    return file_name", "compilation_passed": true, "time": 0.021261930465698242, "tests_passed": true, "error": null}
{"code": "files = [file for file in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, file))]\n    random.Random(seed).shuffle(files)\n    selected_file = files[0]\n    src_path = os.path.join(src_dir, selected_file)\n    dest_path = os.path.join(dest_dir, selected_file)\n    shutil.move(src_path, dest_path)\n    return selected_file", "compilation_passed": true, "time": 0.014667034149169922, "tests_passed": false, "error": "IndexError"}
{"code": "# Set the random number generator seed\n    random.seed(seed)\n    # Create a list of all files in the source directory\n    files = os.listdir(src_dir)\n    # Randomly select a file\n    file_to_move = random.choice(files)\n    # Construct the full paths to the source and destination\n    src_file = os.path.join(src_dir, file_to_move)\n    dest_file = os.path.join(dest_dir, file_to_move)\n    # Move the file\n    shutil.move(src_file, dest_file)\n    # Return the name of the file moved\n    return file_to_move", "compilation_passed": true, "time": 0.013154983520507812, "tests_passed": false, "error": "IndexError"}
{"code": "files = [f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    random.seed(seed)\n    random.shuffle(files)\n    file_to_move = files[0]\n    src_file_path = os.path.join(src_dir, file_to_move)\n    dest_file_path = os.path.join(dest_dir, file_to_move)\n    shutil.move(src_file_path, dest_file_path)\n    return os.path.basename(dest_file_path)", "compilation_passed": true, "time": 0.014821052551269531, "tests_passed": false, "error": "IndexError"}
{"code": "try:\n        # Generate a random seed\n        random.seed(seed)\n\n        # Get a list of files in the source directory\n        file_list = os.listdir(src_dir)\n\n        # Select a random file from the list\n        selected_file = random.choice(file_list)\n\n        # Move the file to the destination directory\n        shutil.move(os.path.join(src_dir, selected_file), dest_dir)\n\n        return selected_file.split(\"/\")[-1]\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return \"Error\"", "compilation_passed": true, "time": 0.013459920883178711, "tests_passed": true, "error": null}
{"code": "# Set the seed for the random number generator\n    random.seed(seed)\n    # Get the list of files in the source directory\n    files = os.listdir(src_dir)\n    # Check if there are any files in the source directory\n    if files:\n        # Randomly choose a file\n        file = random.choice(files)\n        # Construct the source and destination paths for the file\n        src_path = os.path.join(src_dir, file)\n        dest_path = os.path.join(dest_dir, file)\n        # Move the file from the source to the destination directory\n        shutil.move(src_path, dest_path)\n        # Return the name of the file moved\n        return file\n    else:\n        # If there are no files in the source directory, return None\n        return None", "compilation_passed": true, "time": 0.01380300521850586, "tests_passed": true, "error": null}
{"code": "# Check if the source directory exists\n    if not os.path.isdir(src_dir):\n        raise ValueError(f\"Invalid source directory: {src_dir}\")\n\n    # Check if the destination directory exists\n    if not os.path.isdir(dest_dir):\n        raise ValueError(f\"Invalid destination directory: {dest_dir}\")\n\n    # Get the list of files in the source directory\n    file_list = os.listdir(src_dir)\n\n    # Check if the source directory is empty\n    if not file_list:\n        raise ValueError(\"Source directory is empty\")\n\n    # Set the random number generator seed\n    random.seed(seed)\n\n    # Choose a random file from the source directory\n    rand_file = random.choice(file_list)\n\n    # Construct the source and destination paths\n    src_path = os.path.join(src_dir, rand_file)\n    dest_path = os.path.join(dest_dir, rand_file)\n\n    # Move the file to the destination directory\n    shutil.move(src", "compilation_passed": false, "time": 0.00022983551025390625, "tests_passed": false, "error": "SyntaxError"}
{"code": "random.seed(seed)\n    files = [file for file in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, file))]\n    if not files:\n        return None\n    file = random.choice(files)\n    shutil.move(os.path.join(src_dir, file), os.path.join(dest_dir, file))\n    return file", "compilation_passed": true, "time": 0.013743877410888672, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    file = random.choice(os.listdir(src_dir))\n    shutil.move(os.path.join(src_dir, file), os.path.join(dest_dir, file))\n    return file", "compilation_passed": true, "time": 0.013363838195800781, "tests_passed": false, "error": "IndexError"}
{"code": "random.seed(seed)\n    files = [f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    random_file = random.choice(files)\n    random_path = os.path.join(dest_dir, random_file)\n    shutil.move(os.path.join(src_dir, random_file), random_path)\n    return random_file", "compilation_passed": true, "time": 0.015156030654907227, "tests_passed": false, "error": "IndexError"}
{"code": "# Initialize the random number generator\n    random.seed(seed)\n\n    # Get the list of all files in the source directory\n    files = os.listdir(src_dir)\n\n    # Select a random file\n    file_to_move = random.choice(files)\n\n    # Get the full path of the file in the source directory\n    file_path = os.path.join(src_dir, file_to_move)\n\n    # Move the file to the destination directory\n    shutil.move(file_path, dest_dir)\n\n    # Return the name of the file moved\n    return file_to_move", "compilation_passed": true, "time": 0.01333928108215332, "tests_passed": false, "error": "IndexError"}
{"code": "random.seed(seed)\n    files = [f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    if len(files) == 0:\n        return None\n\n    file_to_move = random.choice(files)\n    file_path = os.path.join(src_dir, file_to_move)\n    shutil.move(file_path, dest_dir)\n    return os.path.split(file_path)[1]", "compilation_passed": true, "time": 0.014573097229003906, "tests_passed": true, "error": null}
