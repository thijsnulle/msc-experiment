{"code": "if not os.path.exists(src_dir) or not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Source or destination directory does not exist.\")\n\n    moved_files = []\n    file_pattern = f\"*{ext}\"\n\n    # Search for files matching the file pattern in the source directory\n    src_files = glob.glob(os.path.join(src_dir, file_pattern))\n\n    for src_file in src_files:\n        filename = os.path.basename(src_file)\n        dest_path = os.path.join(dest_dir, filename)\n\n        # Check if file with same name exists in destination directory\n        if os.path.exists(dest_path):\n            print(f\"File '{filename}' already exists in destination directory. Skipping.\")\n            continue\n\n        shutil.move(src_file, dest_path)\n        moved_files.append(os.path.abspath(dest_path))\n\n    return moved_files", "compilation_passed": true, "time": 0.0017688274383544922, "tests_passed": true, "error": null}
{"code": "src_filepaths = glob.glob(os.path.join(src_dir, f'*{ext}'))\n    moved_filepaths = []\n    for src_filepath in src_filepaths:\n        file_name = os.path.basename(src_filepath)\n        dest_filepath = os.path.join(dest_dir, file_name)\n        if os.path.exists(dest_filepath):\n            print(f\"{file_name} already exists in the destination directory. Skipping...\")\n            continue\n        shutil.move(src_filepath, dest_filepath)\n        moved_filepaths.append(dest_filepath)\n    return moved_filepaths", "compilation_passed": true, "time": 0.001592874526977539, "tests_passed": true, "error": null}
{"code": "# Create the destination directory if it doesn't exist\n    os.makedirs(dest_dir, exist_ok=True)\n\n    # Search for files with the given extension in the source directory\n    files = glob.glob(f\"{src_dir}/*.{ext}\")\n\n    moved_files = []\n    for file in files:\n        filename = os.path.basename(file)\n        dest_path = os.path.join(dest_dir, filename)\n        if os.path.exists(dest_path):\n            print(f\"Skipping {filename}, as it already exists in the destination directory.\")\n            continue\n        shutil.move(file, dest_path)\n        moved_files.append(file)\n        print(f\"Moved {filename} to {dest_path}\")\n    return moved_files", "compilation_passed": true, "time": 0.0017538070678710938, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(src_dir) or not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Source or destination directory does not exist.\")\n\n    files_moved = []\n    pattern = os.path.join(src_dir, f\"*.{ext}\")\n    files = glob.glob(pattern)\n    for file in files:\n        filename = os.path.basename(file)\n        dest_path = os.path.join(dest_dir, filename)\n        if os.path.exists(dest_path):\n            continue\n        shutil.move(file, dest_path)\n        files_moved.append(dest_path)\n    return files_moved", "compilation_passed": true, "time": 0.003118753433227539, "tests_passed": true, "error": null}
{"code": "# Check if source directory exists\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(\"Source directory does not exist.\")\n\n    # Check if destination directory exists\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Destination directory does not exist.\")\n\n    # Search for files with specified extension in source directory\n    files = glob.glob(f\"{src_dir}/**/*.{ext}\", recursive=True)\n\n    # Move files to destination directory\n    moved_files = []\n    for file in files:\n        filename = os.path.basename(file)\n\n        # Check if file with same name already exists in destination directory\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            continue\n\n        # Move file\n        shutil.move(file, dest_dir)\n        moved_files.append(file)\n\n    return moved_files", "compilation_passed": true, "time": 0.0027680397033691406, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory not found: {src_dir}\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory not found: {dest_dir}\")\n\n    os.makedirs(dest_dir, exist_ok=True)\n\n    moved_files = []\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n\n    for file in files:\n        basename = os.path.basename(file)\n        if basename in [os.path.basename(path) for path in os.listdir(dest_dir)]:\n            print(f\"Skipping file {file} as it already exists in the destination directory\")\n            continue\n        shutil.move(file, dest_dir)\n        moved_files.append(file)\n\n    return moved_files", "compilation_passed": true, "time": 0.002824068069458008, "tests_passed": false, "error": "OSError"}
{"code": "file_list = glob.glob(os.path.join(src_dir, f'*{ext}'))\n    moved_files = []\n    for file_path in file_list:\n        file_name = os.path.basename(file_path)\n        dest_path = os.path.join(dest_dir, file_name)\n        if os.path.isfile(dest_path):\n            print(f\"File '{file_name}' already exists in destination directory. Skipping.\")\n        else:\n            shutil.move(file_path, dest_path)\n            moved_files.append(dest_path)\n    return moved_files", "compilation_passed": true, "time": 0.001544952392578125, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    os.chdir(src_dir)\n    for file_name in glob.glob(\"*.\" + ext):\n        file_path = os.path.join(src_dir, file_name)\n        if os.path.exists(os.path.join(dest_dir, file_name)):\n            print(f\"{file_name} already exists in {dest_dir}\")\n        else:\n            shutil.move(file_path, dest_dir)\n            moved_files.append(file_path)\n    return moved_files", "compilation_passed": true, "time": 0.0025789737701416016, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.isdir(src_dir):\n        raise FileNotFoundError(\"The source directory does not exist\")\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError(\"The destination directory does not exist\")\n\n    moved_files = []\n\n    # Find files in the source directory with the given extension\n    files = glob.glob(os.path.join(src_dir, f'*{ext}'))\n\n    for file in files:\n        filename = os.path.basename(file)\n        dest_file = os.path.join(dest_dir, filename)\n        if os.path.exists(dest_file):\n            print(f\"Skipping '{filename}'. File already exists in the destination directory.\")\n            continue\n        # Move the file to the destination directory\n        shutil.move(file, dest_file)\n        moved_files.append(dest_file)\n        print(f\"Moved '{filename}' to {dest_dir}\")\n\n    return moved_files", "compilation_passed": true, "time": 0.001753091812133789, "tests_passed": true, "error": null}
{"code": "# Initialize the list to store the full paths of files that were successfully moved\n    moved_files = []\n\n    # Check if the source directory exists\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist.\")\n\n    # Check if the destination directory exists\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist.\")\n\n    # Create the pattern to find files with the given extension\n    pattern = os.path.join(src_dir, f'*{ext}')\n\n    # Iterate through each file that matches the pattern\n    for file_path in glob.glob(pattern):\n        # Extract the file name from the full path\n        file_name = os.path.basename(file_path)\n\n        # Construct the destination path\n        dest_path = os.path.join(dest_dir, file_name)\n\n        # Check if the file already exists in the destination directory\n        if not os.path", "compilation_passed": false, "time": 0.00019121170043945312, "tests_passed": false, "error": "SyntaxError"}
{"code": "moved_files = []\n\n    # Check if src_dir and dest_dir exist\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist.\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist.\")\n\n    # Iterate through files in src_dir with matching extension\n    for file in glob.glob(os.path.join(src_dir, f\"*.{ext}\")):\n        filename = os.path.basename(file)\n\n        # Check if file already exists in dest_dir\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"File '{filename}' already exists in destination directory. Skipping.\")\n        else:\n            # Move file from src_dir to dest_dir\n            shutil.move(file, os.path.join(dest_dir, filename))\n            moved_files.append(os", "compilation_passed": false, "time": 0.00021600723266601562, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not os.path.isdir(src_dir) or not os.path.isdir(dest_dir):\n        raise FileNotFoundError(\"Source or destination directory not found\")\n\n    moved_files = []\n\n    for file in glob.glob(os.path.join(src_dir, f\"*.{ext}\")):\n        filename = os.path.basename(file)\n\n        # Check if the file already exists in the destination directory\n        if os.path.isfile(os.path.join(dest_dir, filename)):\n            print(f\"Skipping {filename} - a file with the same name already exists in the destination directory\")\n        else:\n            try:\n                shutil.move(file, dest_dir)\n                moved_files.append(file)\n            except OSError as e:\n                print(f\"Error moving {filename}: {str(e)}\")\n\n    return moved_files", "compilation_passed": true, "time": 0.0029981136322021484, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        # Ensure the source and destination directories exist\n        os.makedirs(src_dir, exist_ok=True)\n        os.makedirs(dest_dir, exist_ok=True)\n\n        # Construct the file extension pattern\n        pattern = '*.' + ext\n\n        # Find files with the specified extension in the source directory\n        files = glob.glob(os.path.join(src_dir, pattern))\n\n        moved_files = []\n        # Move files to the destination directory\n        for file in files:\n            file_name = os.path.basename(file)\n            dest_path = os.path.join(dest_dir, file_name)\n            if os.path.exists(dest_path):  # Check if file already exists in the destination directory\n                print(f\"File '{file_name}' already exists in the destination directory. Skipping.\")\n                continue\n            shutil.move(file, dest_path)\n            moved_files.append(dest_path)\n            print(f\"Moved '{file_name}' to {dest", "compilation_passed": false, "time": 0.00013303756713867188, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Ensure both the source directory and the destination directory exist\n    if not os.path.exists(src_dir) or not os.path.isdir(src_dir):\n        raise FileNotFoundError(f\"The source directory '{src_dir}' does not exist or is not a directory.\")\n\n    if not os.path.exists(dest_dir) or not os.path.isdir(dest_dir):\n        raise FileNotFoundError(f\"The destination directory '{dest_dir}' does not exist or is not a directory.\")\n\n    moved_files = []  # List to store the full paths of moved files\n\n    # Search for files with the specified extension in the source directory\n    src_pattern = os.path.join(src_dir, f\"*.{ext}\")\n    src_files = glob.glob(src_pattern)\n\n    for src_file in src_files:\n        # Check if the file already exists in the destination directory\n        file_name = os.path.basename(src_file)\n        dest_file = os.path.join(dest_dir, file", "compilation_passed": false, "time": 0.00021219253540039062, "tests_passed": false, "error": "SyntaxError"}
{"code": "if not os.path.exists(src_dir) or not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"The source or destination directory does not exist.\")\n\n    file_list = glob.glob(f\"{src_dir}/*.{ext}\")  # Get all files with specified extension from the source directory\n    moved_files = []\n\n    for file in file_list:\n        file_name = os.path.basename(file)  # Get the file name without the path\n\n        if os.path.exists(os.path.join(dest_dir, file_name)):  # Check if a file with the same name exists in the destination directory\n            print(f\"A file with the name {file_name} already exists in {dest_dir}. Skipping this file.\")\n            continue\n\n        shutil.move(file, dest_dir)  # Move the file to the destination directory\n        moved_files.append(file)  # Add the file path to the list of moved files\n\n    return moved_files", "compilation_passed": true, "time": 0.0030519962310791016, "tests_passed": true, "error": null}
{"code": "moved_files = []\n\n    # Check if source and destination directories exist\n    if not os.path.isdir(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist\")\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist\")\n\n    # Find files with matching extension in the source directory\n    matching_files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n\n    # Move files to the destination directory\n    for file in matching_files:\n        filename = os.path.basename(file)\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"File '{filename}' already exists in the destination directory. Skipping.\")\n        else:\n            shutil.move(file, dest_dir)\n            moved_files.append(file)\n\n    return moved_files", "compilation_passed": true, "time": 0.002852916717529297, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Check if source and destination directories exist\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(\"Source directory not found: \" + src_dir)\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Destination directory not found: \" + dest_dir)\n\n    moved_files = []\n\n    # Use glob to find files with the specified extension in the source directory\n    for path in glob.glob(os.path.join(src_dir, '*.' + ext)):\n        file_name = os.path.basename(path)\n        dest_path = os.path.join(dest_dir, file_name)\n\n        # Check if the destination file exists\n        if os.path.exists(dest_path):\n            print(f\"File '{file_name}' already exists in destination directory. Skipping...\")\n        else:\n            shutil.move(path, dest_dir)\n            moved_files.append(dest_path)\n\n    return moved_files", "compilation_passed": true, "time": 0.0032491683959960938, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' not found.\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' not found.\")\n\n    moved_files = []\n    for file in glob.glob(f\"{src_dir}/*.{ext}\"):\n        filename = os.path.basename(file)\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"{filename} already exists in the destination directory. Skipping.\")\n            continue\n        shutil.move(file, dest_dir)\n        moved_files.append(os.path.join(dest_dir, filename))\n    return moved_files", "compilation_passed": true, "time": 0.003341197967529297, "tests_passed": true, "error": null}
{"code": "# Check if the source and destination directories exist\n    if not os.path.exists(src_dir) or not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Source or destination directory not found\")\n    # Use glob to search for files with the specified extension in the source directory\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n    # Initialize an empty list to store moved file paths\n    moved_files = []\n    # Loop over each file found\n    for file in files:\n        # Get the file name without the path\n        filename = os.path.basename(file)\n        # Check if the file already exists in the destination directory\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"File {filename} already exists in {dest_dir}, skipping.\")\n            continue  # Skip if the file already exists\n        # Move the file\n        shutil.move(file, dest_dir)\n        # Add the full path of the moved file to the list\n        ", "compilation_passed": true, "time": 0.001544952392578125, "tests_passed": false, "error": "TypeError"}
{"code": "if not os.path.isdir(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} not found.\")\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} not found.\")\n\n    moved_files = []\n    pattern = f\"**/*.{ext}\"\n    matching_files = glob.glob(os.path.join(src_dir, pattern), recursive=True)\n\n    for file_path in matching_files:\n        filename = os.path.basename(file_path)\n        if filename in os.listdir(dest_dir):\n            continue\n        shutil.move(file_path, dest_dir)\n        moved_files.append(os.path.join(dest_dir, filename))\n\n    return moved_files", "compilation_passed": true, "time": 0.0027604103088378906, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        moved_files = []\n        files = glob.glob(os.path.join(src_dir, f'*{ext}'))\n        for file in files:\n            filename = os.path.basename(file)\n            if os.path.isfile(os.path.join(dest_dir, filename)):\n                continue\n            shutil.move(file, dest_dir)\n            moved_files.append(file)\n        return moved_files\n    except FileNotFoundError as error:\n        raise FileNotFoundError(f\"Directory not found: {error}\") from error", "compilation_passed": true, "time": 0.0016129016876220703, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} does not exist\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} does not exist\")\n\n    files_to_move = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n\n    moved_files = []\n    for file_path in files_to_move:\n        file_name = os.path.basename(file_path)\n        if file_name in os.listdir(dest_dir):\n            # File already exists in destination directory, skip moving it\n            continue\n\n        shutil.move(file_path, dest_dir)\n        moved_files.append(os.path.join(dest_dir, file_name))\n\n    return moved_files", "compilation_passed": true, "time": 0.0028989315032958984, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist.\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist.\")\n\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n    moved_files = []\n\n    for file in files:\n        filename = os.path.basename(file)\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            continue  # File with the same name exists, skip moving\n\n        shutil.move(file, os.path.join(dest_dir, filename))\n        moved_files.append(os.path.join(dest_dir, filename))\n\n    return moved_files", "compilation_passed": true, "time": 0.003638029098510742, "tests_passed": true, "error": null}
{"code": "moved_files = []\n\n    for file_path in glob.glob(os.path.join(src_dir, f'*.{ext}')):\n        file_name = os.path.basename(file_path)\n        dest_file_path = os.path.join(dest_dir, file_name)\n\n        if os.path.isfile(dest_file_path):\n            print(f\"File '{file_name}' already exists in the destination directory. Skipping.\")\n        else:\n            shutil.move(file_path, dest_dir)\n            moved_files.append(file_path)\n\n    return moved_files", "compilation_passed": true, "time": 0.0017631053924560547, "tests_passed": true, "error": null}
{"code": "# Check if src_dir and dest_dir exist\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} does not exist.\")\n\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} does not exist.\")\n\n    # Search for files with the given extension in the source directory\n    files = glob.glob(os.path.join(src_dir, f'*.{ext}'))\n\n    moved_files = []  # A list to store the full paths of files that were successfully moved\n\n    for file in files:\n        filename = os.path.basename(file)\n\n        # Check if the file already exists in the destination directory\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"Skipping {filename} because it already exists in the destination directory.\")\n            continue\n\n        # Move the file to the destination directory\n        shutil.move(file, dest_dir)", "compilation_passed": true, "time": 0.0014269351959228516, "tests_passed": false, "error": "TypeError"}
{"code": "moved_files = []\n    for file in glob.glob(os.path.join(src_dir, '*.'+ext)):\n        filename = os.path.basename(file)\n        if filename not in os.listdir(dest_dir):\n            shutil.move(file, os.path.join(dest_dir, filename))\n            moved_files.append(file)\n    return moved_files", "compilation_passed": true, "time": 0.0016410350799560547, "tests_passed": true, "error": null}
{"code": "src_files = glob.glob(os.path.join(src_dir, f'*{ext}'))\n    moved_files = []\n\n    for src_file in src_files:\n        file_name = os.path.basename(src_file)\n        dest_file = os.path.join(dest_dir, file_name)\n\n        if os.path.isfile(dest_file):\n            print(f\"Warning: File '{file_name}' already exists in the destination directory. Skipping.\")\n        else:\n            try:\n                shutil.move(src_file, dest_dir)\n                moved_files.append(dest_file)\n                print(f\"Moved file: {file_name}\")\n            except Exception as e:\n                print(f\"Error: Could not move file '{file_name}'. {e}\")\n\n    return moved_files", "compilation_passed": true, "time": 0.001970052719116211, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"The directory '{src_dir}' does not exist.\")\n\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"The directory '{dest_dir}' does not exist.\")\n\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n    moved_files = []\n\n    for file in files:\n        basename = os.path.basename(file)\n        dest_path = os.path.join(dest_dir, basename)\n        if os.path.isfile(dest_path):\n            print(f\"Skipping {basename} because a file with the same name already exists in the destination directory.\")\n        else:\n            shutil.move(file, dest_path)\n            moved_files.append(dest_path)\n\n    return moved_files", "compilation_passed": true, "time": 0.0031890869140625, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} not found.\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} not found.\")\n\n    moved_files = []\n    for file in glob.glob(os.path.join(src_dir, f\"*.{ext}\")):\n        if os.path.basename(file) not in os.listdir(dest_dir):\n            shutil.move(file, dest_dir)\n            moved_files.append(file)\n\n    return moved_files", "compilation_passed": true, "time": 0.0027289390563964844, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Check if source directory exists\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} not found\")\n\n    # Check if destination directory exists\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} not found\")\n\n    # Search for files with the specified extension in the source directory\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n\n    moved_files = []\n    for file in files:\n        # Check if file already exists in destination directory\n        if os.path.exists(os.path.join(dest_dir, os.path.basename(file))):\n            print(f\"File {os.path.basename(file)} already exists in {dest_dir}, skipping...\")\n        else:\n            # Move the file to the destination directory\n            shutil.move(file, dest_dir)\n            moved_files.append(file)\n\n    return moved", "compilation_passed": true, "time": 0.0015730857849121094, "tests_passed": false, "error": "NameError"}
