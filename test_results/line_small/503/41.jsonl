{"code": " np.random.uniform(low=0.0, high=1.0, size=(len(dates), len(stock_names)))", "compilation_passed": true, "time": 0.006613969802856445, "tests_passed": true, "error": null}
{"code": " np.random.uniform(low=0.0, high=1.0, size=len(dates))", "compilation_passed": true, "time": 0.007974863052368164, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.random((len(stock_names), len(dates)))", "compilation_passed": true, "time": 0.008280038833618164, "tests_passed": false, "error": "ValueError"}
{"code": " pd.Series(", "compilation_passed": false, "time": 0.00048089027404785156, "tests_passed": false, "error": "SyntaxError"}
{"code": " np.random.random((days_in_past, len(stock_names)))", "compilation_passed": true, "time": 0.006471872329711914, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.uniform(0, 1, len(dates)), index=dates, dtype=float)", "compilation_passed": true, "time": 0.009689092636108398, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.random(len(stock_names))", "compilation_passed": true, "time": 0.007786989212036133, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.random((len(stock_names), days_in_past))", "compilation_passed": true, "time": 0.008549928665161133, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.uniform(0, 1, len(dates) * len(stock_names)).reshape(", "compilation_passed": false, "time": 0.0003261566162109375, "tests_passed": false, "error": "SyntaxError"}
{"code": " (np.random.random(size=len(stock_names)) * 100).astype(float)", "compilation_passed": true, "time": 0.007779836654663086, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.uniform(0, 1, len(stock_names))", "compilation_passed": true, "time": 0.007478952407836914, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.rand(days_in_past, len(stock_names))", "compilation_passed": true, "time": 0.00621485710144043, "tests_passed": true, "error": null}
{"code": " np.random.uniform(0.0, 1.0, size=days_in_past * len(stock_names))", "compilation_passed": true, "time": 0.0076389312744140625, "tests_passed": false, "error": "ValueError"}
{"code": " pd.DataFrame(", "compilation_passed": false, "time": 0.00032901763916015625, "tests_passed": false, "error": "SyntaxError"}
{"code": " np.random.uniform(0, 1, len(stock_names) * len(dates)).reshape(", "compilation_passed": false, "time": 0.00035500526428222656, "tests_passed": false, "error": "SyntaxError"}
{"code": " np.random.uniform(0, 1, (days_in_past, len(stock_names)))", "compilation_passed": true, "time": 0.006468057632446289, "tests_passed": true, "error": null}
{"code": " (np.random.rand(days_in_past, len(stock_names)) * 10).astype(\"float32\")", "compilation_passed": true, "time": 0.007791042327880859, "tests_passed": true, "error": null}
{"code": " np.random.uniform(0, 1, size=(days_in_past, len(stock_names)))", "compilation_passed": true, "time": 0.006964921951293945, "tests_passed": true, "error": null}
{"code": " np.random.rand(len(stock_names), len(dates)) * 100", "compilation_passed": true, "time": 0.007963180541992188, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.uniform(low=0.0, high=1.0, size=(days_in_past, len(stock_names)))", "compilation_passed": true, "time": 0.006790876388549805, "tests_passed": true, "error": null}
{"code": " np.random.rand(len(dates))", "compilation_passed": true, "time": 0.008333206176757812, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.uniform(low=0.0, high=1.0, size=(len(stock_names), len(dates)))", "compilation_passed": true, "time": 0.007903814315795898, "tests_passed": false, "error": "ValueError"}
{"code": " pd.DataFrame()", "compilation_passed": true, "time": 0.011418819427490234, "tests_passed": true, "error": null}
{"code": " pd.DataFrame({name: np.random.random(days_in_past) * 100 for name in stock_names}, index=dates)", "compilation_passed": true, "time": 0.007606029510498047, "tests_passed": true, "error": null}
