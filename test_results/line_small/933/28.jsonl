{"code": " ([(letter, word_numbers[i]) for i, letter in enumerate(word)], word.split())", "compilation_passed": true, "time": 0.004019975662231445, "tests_passed": true, "error": null}
{"code": " word_numbers, word.split()", "compilation_passed": true, "time": 0.002588987350463867, "tests_passed": true, "error": null}
{"code": " list(zip(word, word_numbers)), wordninja.split(word, \"_\")", "compilation_passed": true, "time": 0.003495931625366211, "tests_passed": false, "error": "TypeError"}
{"code": " [tuple(zip(ALPHABET, word_numbers)), word.split()]", "compilation_passed": true, "time": 0.002880096435546875, "tests_passed": true, "error": null}
{"code": " [tuple([letter, number]) for letter, number in zip(word, word_numbers)], [word]", "compilation_passed": true, "time": 0.0026328563690185547, "tests_passed": true, "error": null}
{"code": " [tuple(zip(word, word_numbers)), [word]]", "compilation_passed": true, "time": 0.0031099319458007812, "tests_passed": true, "error": null}
{"code": " list(zip(word, word_numbers)), wordninja.split(word)", "compilation_passed": true, "time": 0.0019180774688720703, "tests_passed": true, "error": null}
{"code": " [tuple(zip(word, word_numbers))]", "compilation_passed": true, "time": 0.003246784210205078, "tests_passed": true, "error": null}
{"code": " [tuple(zip(word, word_numbers)) for word in wordninja.split(word)]", "compilation_passed": true, "time": 0.0026810169219970703, "tests_passed": true, "error": null}
{"code": " ([tuple((letter, i)) for (i, letter) in enumerate(word_numbers, start=1)], wordninja.split(word))", "compilation_passed": true, "time": 0.002825021743774414, "tests_passed": true, "error": null}
{"code": " tuple(zip(ALPHABET, word_numbers)), [word]", "compilation_passed": true, "time": 0.0028269290924072266, "tests_passed": true, "error": null}
{"code": " list(zip(ALPHABET, word_numbers)), list(word.split())", "compilation_passed": true, "time": 0.0035400390625, "tests_passed": true, "error": null}
{"code": " list(zip(ALPHABET, word_numbers)), [word]", "compilation_passed": true, "time": 0.003039836883544922, "tests_passed": true, "error": null}
{"code": " word_numbers, wordninja.split(word)", "compilation_passed": true, "time": 0.002554178237915039, "tests_passed": true, "error": null}
{"code": " ([tuple(zip(word, word_numbers))], [word])", "compilation_passed": true, "time": 0.0034093856811523438, "tests_passed": true, "error": null}
{"code": " [[letter, number] for letter, number in zip(word, word_numbers)], [word]", "compilation_passed": true, "time": 0.003453969955444336, "tests_passed": true, "error": null}
{"code": " (list(zip(word, word_numbers)), [word])", "compilation_passed": true, "time": 0.002439260482788086, "tests_passed": true, "error": null}
{"code": " [tuple(zip(word, word_numbers))], [word]", "compilation_passed": true, "time": 0.0028269290924072266, "tests_passed": true, "error": null}
{"code": " [tuple(zip(ALPHABET, word_numbers))], [word]", "compilation_passed": true, "time": 0.0027008056640625, "tests_passed": true, "error": null}
{"code": " tuple(zip(word, word_numbers)), wordninja.split(word)", "compilation_passed": true, "time": 0.0031960010528564453, "tests_passed": true, "error": null}
{"code": " [tuple([letter, number]) for letter, number in zip(word, word_numbers)], list(word.split())", "compilation_passed": true, "time": 0.0032579898834228516, "tests_passed": true, "error": null}
{"code": " [tuple(zip(word, word_numbers)) for word in wordninja.split(word)], wordninja.split(word)", "compilation_passed": true, "time": 0.003158092498779297, "tests_passed": true, "error": null}
{"code": " list(map(lambda x: (x, word_numbers[x-1]), range(1, len(word) + 1))), word.split(\" \")", "compilation_passed": true, "time": 0.003247976303100586, "tests_passed": true, "error": null}
{"code": " [tuple([letter, index]) for index, letter in enumerate(word, start=1)], [word.split(' ')[0].lower()]", "compilation_passed": true, "time": 0.0028390884399414062, "tests_passed": true, "error": null}
{"code": " [tuple(zip(word, word_numbers)) for word in wordninja.split_word(word)]", "compilation_passed": true, "time": 0.003223896026611328, "tests_passed": false, "error": "AttributeError"}
{"code": " (word_numbers, word.split())", "compilation_passed": true, "time": 0.0027151107788085938, "tests_passed": true, "error": null}
