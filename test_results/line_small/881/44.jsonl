{"code": " df[column_name].str.contains(pattern)", "compilation_passed": true, "time": 0.020927906036376953, "tests_passed": true, "error": null}
{"code": " df[column_name].str.findall(pattern).astype(list)", "compilation_passed": true, "time": 0.02785205841064453, "tests_passed": false, "error": "TypeError"}
{"code": " [i for i in df[column_name] if pattern in i]", "compilation_passed": true, "time": 0.011735677719116211, "tests_passed": false, "error": "AttributeError"}
{"code": " df[column_name].str.extract(pattern)", "compilation_passed": true, "time": 0.01931595802307129, "tests_passed": false, "error": "ValueError"}
{"code": " df[df[column_name].str.contains(pattern, na=False)]", "compilation_passed": true, "time": 0.022900819778442383, "tests_passed": true, "error": null}
{"code": " [row[column_name] for row in df.itertuples() if re.search(pattern, row[column_name])]", "compilation_passed": true, "time": 0.016676902770996094, "tests_passed": false, "error": "NameError"}
{"code": " df[df[column_name].str.contains(pattern)]", "compilation_passed": true, "time": 0.023478984832763672, "tests_passed": true, "error": null}
{"code": " df[column_name].str.contains(pattern, na=False)", "compilation_passed": true, "time": 0.013360023498535156, "tests_passed": true, "error": null}
{"code": " df[column_name].str.match(pattern)", "compilation_passed": true, "time": 0.012212991714477539, "tests_passed": true, "error": null}
{"code": " [r for r in df[column_name].str.findall(pattern).flatten() if r is not None]", "compilation_passed": true, "time": 0.016289949417114258, "tests_passed": false, "error": "AttributeError"}
{"code": " df[column_name].apply(lambda x: re.search(pattern, x))", "compilation_passed": true, "time": 0.02331995964050293, "tests_passed": false, "error": "NameError"}
{"code": " [m.start() for m in re.finditer(pattern, df[column_name])]", "compilation_passed": true, "time": 0.015185117721557617, "tests_passed": false, "error": "NameError"}
{"code": " df[column_name].str.findall(pattern)", "compilation_passed": true, "time": 0.011932134628295898, "tests_passed": true, "error": null}
{"code": " df[column_name].apply(lambda x: re.search(pattern, str(x)))", "compilation_passed": true, "time": 0.024454116821289062, "tests_passed": false, "error": "NameError"}
{"code": " df[column_name].str.findall(pattern).dropna()", "compilation_passed": true, "time": 0.012073993682861328, "tests_passed": true, "error": null}
{"code": " df[column_name].str.extract(pattern).dropna()", "compilation_passed": true, "time": 0.015316009521484375, "tests_passed": false, "error": "ValueError"}
{"code": " df.loc[:, column_name].apply(lambda x: re.findall(pattern, x))", "compilation_passed": true, "time": 0.023019075393676758, "tests_passed": false, "error": "NameError"}
{"code": " df[column_name].str.fullmatch(pattern)", "compilation_passed": true, "time": 0.014087200164794922, "tests_passed": true, "error": null}
{"code": " [int(row[column_name].split(pattern, 1)[0]) for row in df.iterrows()]", "compilation_passed": true, "time": 0.016937971115112305, "tests_passed": false, "error": "TypeError"}
