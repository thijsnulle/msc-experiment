{"code": " df.apply(lambda x: (x - x.mean()) / x.std())", "compilation_passed": true, "time": 0.015052080154418945, "tests_passed": true, "error": null}
{"code": " (df - df.mean()) / df.std()", "compilation_passed": true, "time": 0.01471400260925293, "tests_passed": true, "error": null}
{"code": " (df - df.mean(axis=1).reshape(-1, 1)) / df.std(axis=1).reshape(-1, 1)", "compilation_passed": true, "time": 0.009498834609985352, "tests_passed": false, "error": "AttributeError"}
{"code": " df.apply(lambda x: x - x.mean() / x.std(ddof=0))", "compilation_passed": true, "time": 0.01450204849243164, "tests_passed": true, "error": null}
{"code": " (df - df.mean(axis=0)) / df.std(axis=0, ddof=0)", "compilation_passed": true, "time": 0.006082057952880859, "tests_passed": true, "error": null}
{"code": " (df - df.mean()) / df.std(ddof=0)", "compilation_passed": true, "time": 0.0063860416412353516, "tests_passed": true, "error": null}
{"code": " df.apply(lambda x: (x - x.mean()) / x.std(ddof=0), axis=1)", "compilation_passed": true, "time": 0.008816242218017578, "tests_passed": true, "error": null}
{"code": " stats.zscore(df, ddof=0)", "compilation_passed": true, "time": 0.014713048934936523, "tests_passed": true, "error": null}
{"code": " (df - df.mean(axis=1, keepdims=True)) / df.std(axis=1, keepdims=True)", "compilation_passed": true, "time": 0.017024993896484375, "tests_passed": false, "error": "ValueError"}
{"code": " df.apply(stats.zscore)", "compilation_passed": true, "time": 0.008123159408569336, "tests_passed": true, "error": null}
{"code": " df.copy()", "compilation_passed": true, "time": 0.006930112838745117, "tests_passed": true, "error": null}
{"code": " df.apply(lambda col: (col - col.mean()) / col.std(ddof=0), axis=0)", "compilation_passed": true, "time": 0.0057888031005859375, "tests_passed": true, "error": null}
{"code": " stats.zscore(df, axis=0)", "compilation_passed": true, "time": 0.007134914398193359, "tests_passed": true, "error": null}
{"code": " df.apply(lambda col: col - df.min(axis=0)[col.name], axis=1)", "compilation_passed": true, "time": 0.007185220718383789, "tests_passed": true, "error": null}
{"code": " df.sub(df.mean(), axis=0).sub(df.std(ddof=0, axis=0))", "compilation_passed": true, "time": 0.016028881072998047, "tests_passed": true, "error": null}
{"code": " df.sub(df.mean(axis=0, skipna=True), axis=1).div(df.std(axis=0, skipna=True), axis=1)", "compilation_passed": true, "time": 0.014641046524047852, "tests_passed": true, "error": null}
{"code": " stats.zscore(df, axis=0, ddof=1)", "compilation_passed": true, "time": 0.017204999923706055, "tests_passed": true, "error": null}
{"code": " (df - df.mean(axis=0)) / df.std(axis=0, ddof=1)", "compilation_passed": true, "time": 0.014460325241088867, "tests_passed": true, "error": null}
{"code": " df.apply(stats.zscore, axis=1)", "compilation_passed": true, "time": 0.008392810821533203, "tests_passed": true, "error": null}
{"code": " df.apply(lambda x: (x - x.mean()) / x.std(ddof=0), axis=0)", "compilation_passed": true, "time": 0.0058557987213134766, "tests_passed": true, "error": null}
{"code": " df.apply(lambda x: (x - x.mean()) / x.std(), axis=0)", "compilation_passed": true, "time": 0.01670098304748535, "tests_passed": true, "error": null}
