{"code": " pd.to_datetime(df['date'])", "compilation_passed": true, "time": 0.058818817138671875, "tests_passed": true, "error": null}
{"code": " pd.to_datetime(df['date']).astype('int')", "compilation_passed": true, "time": 0.0033462047576904297, "tests_passed": false, "error": "TypeError"}
{"code": " df['date'].values.astype(np.int64) / 10**9  # in seconds", "compilation_passed": true, "time": 0.0015778541564941406, "tests_passed": false, "error": "TypeError"}
{"code": " df['date'].apply(lambda x: x.timestamp())", "compilation_passed": true, "time": 0.001664876937866211, "tests_passed": false, "error": "TypeError"}
{"code": " df['date'].dt.to_timestamp()", "compilation_passed": true, "time": 0.001463174819946289, "tests_passed": false, "error": "AttributeError"}
{"code": " df['date'].astype('datetime64[s]')", "compilation_passed": true, "time": 0.060426950454711914, "tests_passed": true, "error": null}
{"code": " df['date'].dt.total_seconds()", "compilation_passed": true, "time": 0.0014379024505615234, "tests_passed": false, "error": "AttributeError"}
{"code": " df['date'].dt.timestamp()", "compilation_passed": true, "time": 0.0014472007751464844, "tests_passed": false, "error": "AttributeError"}
{"code": " df.date.map(lambda x: x.timestamp())", "compilation_passed": true, "time": 0.0016140937805175781, "tests_passed": false, "error": "TypeError"}
{"code": " df.date.dt.tz_convert(None).astype(int)", "compilation_passed": true, "time": 0.0015606880187988281, "tests_passed": false, "error": "TypeError"}
{"code": " df['date'].dt.replace(tz='UTC').astype(int)", "compilation_passed": true, "time": 0.0014700889587402344, "tests_passed": false, "error": "AttributeError"}
{"code": " df['date'].values.astype(int)", "compilation_passed": true, "time": 0.0013442039489746094, "tests_passed": false, "error": "TypeError"}
{"code": " df.date.apply(pd.Timestamp)", "compilation_passed": true, "time": 0.06675219535827637, "tests_passed": true, "error": null}
{"code": " df['date'].astype(int) / 1000", "compilation_passed": true, "time": 0.0016582012176513672, "tests_passed": false, "error": "TypeError"}
{"code": " df.date.apply(pd.Timestamp.timestamp)", "compilation_passed": true, "time": 0.0013818740844726562, "tests_passed": false, "error": "TypeError"}
