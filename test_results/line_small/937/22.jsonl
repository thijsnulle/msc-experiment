{"code": " re.sub('[^A-Za-z0-9]+', '', input_str).lower()", "compilation_passed": true, "time": 0.0018072128295898438, "tests_passed": true, "error": null}
{"code": " re.sub('[^a-z0-9]+', '', input_str.lower())", "compilation_passed": true, "time": 0.0013549327850341797, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W', '', input_str)", "compilation_passed": true, "time": 0.005506992340087891, "tests_passed": true, "error": null}
{"code": " re.sub(r\"\\W\", \"\", input_str)", "compilation_passed": true, "time": 0.004807233810424805, "tests_passed": true, "error": null}
{"code": " \"\".join(char.lower() for char in input_str if char.isalnum())", "compilation_passed": true, "time": 0.0014107227325439453, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^a-zA-Z0-9]+', '', input_str)", "compilation_passed": true, "time": 0.004575014114379883, "tests_passed": true, "error": null}
{"code": " re.sub('\\W+', '', input_str.lower())", "compilation_passed": true, "time": 0.0014929771423339844, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W+', '', input_str)", "compilation_passed": true, "time": 0.004498720169067383, "tests_passed": true, "error": null}
{"code": " \"\".join(filter(str.isalnum, input_str))", "compilation_passed": true, "time": 0.003984689712524414, "tests_passed": true, "error": null}
{"code": " re.sub('[^a-z0-9]', '', input_str.lower())", "compilation_passed": true, "time": 0.0012691020965576172, "tests_passed": true, "error": null}
{"code": " ''.join(c for c in input_str if c.isalnum())", "compilation_passed": true, "time": 0.0057220458984375, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W', '', input_str)  # Remove non-alphanumeric characters and spaces", "compilation_passed": true, "time": 0.004886150360107422, "tests_passed": true, "error": null}
{"code": " re.sub('[^a-z]+', '', input_str.lower())", "compilation_passed": true, "time": 0.005869150161743164, "tests_passed": true, "error": null}
{"code": " re.sub(r\"\\W+\", \"\", input_str)", "compilation_passed": true, "time": 0.004926919937133789, "tests_passed": true, "error": null}
{"code": " \"\".join(c for c in input_str if c.isalnum())", "compilation_passed": true, "time": 0.00469207763671875, "tests_passed": true, "error": null}
{"code": " re.sub(r'[\\W_]+', '', input_str)", "compilation_passed": true, "time": 0.0051801204681396484, "tests_passed": true, "error": null}
{"code": " re.sub(r\"[^A-Za-z0-9]+\", \"\", input_str)", "compilation_passed": true, "time": 0.004209280014038086, "tests_passed": true, "error": null}
{"code": " re.sub('\\W+', '', input_str)", "compilation_passed": true, "time": 0.004453897476196289, "tests_passed": true, "error": null}
{"code": " re.sub(r\"[^a-zA-Z0-9]\", \"\", input_str)", "compilation_passed": true, "time": 0.004382133483886719, "tests_passed": true, "error": null}
{"code": " \"\".join(char for char in input_str if char.isalnum())", "compilation_passed": true, "time": 0.0040929317474365234, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^a-zA-Z0-9]', '', input_str)", "compilation_passed": true, "time": 0.004338979721069336, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W+', '', input_str).lower()", "compilation_passed": true, "time": 0.0013949871063232422, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W+', '', input_str)  # remove all non-alphanumeric characters", "compilation_passed": true, "time": 0.0040130615234375, "tests_passed": true, "error": null}
{"code": " re.sub(r'[\\W_]', '', input_str)", "compilation_passed": true, "time": 0.0037729740142822266, "tests_passed": true, "error": null}
{"code": " re.sub('[^a-zA-Z0-9]', '', input_str)", "compilation_passed": true, "time": 0.003945112228393555, "tests_passed": true, "error": null}
