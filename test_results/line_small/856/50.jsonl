{"code": " reduce((lambda x, y: x + y), map(lambda x: x[0] * x[1], all_pairs))", "compilation_passed": true, "time": 0.0035011768341064453, "tests_passed": true, "error": null}
{"code": " reduce(lambda x, y: x * y, all_pairs)", "compilation_passed": true, "time": 0.0066950321197509766, "tests_passed": false, "error": "TypeError"}
{"code": " reduce(lambda x, y: x * y, [val for pair in all_pairs for val in pair])", "compilation_passed": true, "time": 0.003657817840576172, "tests_passed": true, "error": null}
{"code": " sum(reduce(lambda x, y: x * y, pair) for pair in all_pairs)", "compilation_passed": true, "time": 0.0027980804443359375, "tests_passed": true, "error": null}
{"code": " reduce(lambda x, y: x*y, all_pairs)", "compilation_passed": true, "time": 0.006597280502319336, "tests_passed": false, "error": "TypeError"}
{"code": " reduce(lambda x, y: x * y, [x[0] * x[1] for x in all_pairs])", "compilation_passed": true, "time": 0.0037822723388671875, "tests_passed": true, "error": null}
{"code": " reduce(lambda a, b: a + b,", "compilation_passed": false, "time": 0.0002219676971435547, "tests_passed": false, "error": "SyntaxError"}
{"code": " reduce(lambda x, y: x + y, map(lambda x: x[0] * x[1], all_pairs))", "compilation_passed": true, "time": 0.002791166305541992, "tests_passed": true, "error": null}
{"code": " sum(a * b for a, b in all_pairs)", "compilation_passed": true, "time": 0.0025398731231689453, "tests_passed": true, "error": null}
{"code": " sum([reduce(lambda x, y: x * y, pair) for pair in all_pairs])", "compilation_passed": true, "time": 0.002655029296875, "tests_passed": true, "error": null}
{"code": " reduce(lambda x, y: x * y, map(lambda x: x[0] * x[1], all_pairs))", "compilation_passed": true, "time": 0.003590822219848633, "tests_passed": true, "error": null}
{"code": " sum([np.prod(pair) for pair in all_pairs])", "compilation_passed": true, "time": 0.003643035888671875, "tests_passed": true, "error": null}
{"code": " reduce(lambda x, y: x + y, [v1*v2 for (v1, v2) in all_pairs])", "compilation_passed": true, "time": 0.0026140213012695312, "tests_passed": true, "error": null}
{"code": " reduce(lambda x, y: x + y, (x * y for x, y in all_pairs))", "compilation_passed": true, "time": 0.0025691986083984375, "tests_passed": true, "error": null}
{"code": " reduce(lambda x, y: x * y, map(lambda p: np.prod(p), all_pairs))", "compilation_passed": true, "time": 0.003757953643798828, "tests_passed": true, "error": null}
{"code": " reduce(lambda a, b: a + b, [a[0] * a[1] for a in all_pairs])", "compilation_passed": true, "time": 0.0029909610748291016, "tests_passed": true, "error": null}
{"code": " reduce(lambda a, b: a + b[0] * b[1], all_pairs)", "compilation_passed": true, "time": 0.003954887390136719, "tests_passed": false, "error": "ValueError"}
{"code": " reduce(lambda x, y: x * y, [x * y for x, y in all_pairs])", "compilation_passed": true, "time": 0.0035080909729003906, "tests_passed": true, "error": null}
