{"code": " math.cos(2 * math.pi * years_since_solar_cycle_year / 11.0) / 2.0", "compilation_passed": true, "time": 0.005145072937011719, "tests_passed": true, "error": null}
{"code": " math.cos(math.pi * 2 * years_since_solar_cycle_year / 11)", "compilation_passed": true, "time": 0.006680965423583984, "tests_passed": true, "error": null}
{"code": " math.cos(years_since_solar_cycle_year / 11 * 2 * math.pi)", "compilation_passed": true, "time": 0.0066449642181396484, "tests_passed": true, "error": null}
{"code": " math.cos(", "compilation_passed": false, "time": 0.0003910064697265625, "tests_passed": false, "error": "SyntaxError"}
{"code": " math.cos(2.0*np.pi/365.25*years_since_solar_cycle_year)", "compilation_passed": true, "time": 0.009958744049072266, "tests_passed": true, "error": null}
{"code": " math.cos(math.pi * 2 * (years_since_solar_cycle_year / 11))", "compilation_passed": true, "time": 0.011642932891845703, "tests_passed": true, "error": null}
{"code": " math.cos(2*math.pi*years_since_solar_cycle_year/11)", "compilation_passed": true, "time": 0.009105205535888672, "tests_passed": true, "error": null}
{"code": " math.cos((2 * math.pi * years_since_solar_cycle_year) / 11)", "compilation_passed": true, "time": 0.009215116500854492, "tests_passed": true, "error": null}
{"code": " math.cos(2 * math.pi * years_since_solar_cycle_year / 11) / 2", "compilation_passed": true, "time": 0.006530046463012695, "tests_passed": true, "error": null}
{"code": " math.cos((2 * math.pi) / 11 * years_since_solar_cycle_year)", "compilation_passed": true, "time": 0.0069658756256103516, "tests_passed": true, "error": null}
{"code": " math.cos(2*math.pi*years_since_solar_cycle_year/11) / 2 + 0.5", "compilation_passed": true, "time": 0.00629878044128418, "tests_passed": true, "error": null}
{"code": " math.cos(2*math.pi*years_since_solar_cycle_year/23)", "compilation_passed": true, "time": 0.010530233383178711, "tests_passed": true, "error": null}
{"code": " (math.cos(math.radians(years_since_solar_cycle_year*25 - 180)) + 1) / 2", "compilation_passed": true, "time": 0.010586977005004883, "tests_passed": true, "error": null}
{"code": " math.cos(2 * math.pi * (years_since_solar_cycle_year - 1.5) / 11)", "compilation_passed": true, "time": 0.0047643184661865234, "tests_passed": true, "error": null}
{"code": " (1 + 2*math.sin(2*math.pi*years_since_solar_cycle_year/365)) / 2", "compilation_passed": true, "time": 0.004782199859619141, "tests_passed": true, "error": null}
{"code": " math.cos(math.pi * years_since_solar_cycle_year / 11)", "compilation_passed": true, "time": 0.0018527507781982422, "tests_passed": true, "error": null}
{"code": " math.cos(2.0 * math.pi * years_since_solar_cycle_year / 11.0)", "compilation_passed": true, "time": 0.0046977996826171875, "tests_passed": true, "error": null}
{"code": " 0.5 * (1 + np.cos(2 * math.pi * years_since_solar_cycle_year / 11.0))", "compilation_passed": true, "time": 0.006757974624633789, "tests_passed": true, "error": null}
{"code": " math.cos(math.pi / 2.0 * (years_since_solar_cycle_year % 11.0))", "compilation_passed": true, "time": 0.007385969161987305, "tests_passed": true, "error": null}
{"code": " math.cos(math.pi / 2. * years_since_solar_cycle_year / 11)", "compilation_passed": true, "time": 0.005964040756225586, "tests_passed": true, "error": null}
{"code": " (1 + math.cos(math.pi * years_since_solar_cycle_year / 11.0)) / 2", "compilation_passed": true, "time": 0.007505893707275391, "tests_passed": true, "error": null}
{"code": " (2 * math.cos(math.pi * years_since_solar_cycle_year / 11) - 1) / 2", "compilation_passed": true, "time": 0.007469892501831055, "tests_passed": true, "error": null}
{"code": " math.cos(np.pi * (years_since_solar_cycle_year / 11))", "compilation_passed": true, "time": 0.002329111099243164, "tests_passed": true, "error": null}
{"code": " math.cos((years_since_solar_cycle_year / 11) * math.pi)", "compilation_passed": true, "time": 0.002402782440185547, "tests_passed": true, "error": null}
{"code": " math.cos((2*math.pi / 11) * years_since_solar_cycle_year) / 2 + 0.5", "compilation_passed": true, "time": 0.006436824798583984, "tests_passed": true, "error": null}
{"code": " math.cos(math.radians(years_since_solar_cycle_year * 100)) / 2 + 0.5", "compilation_passed": true, "time": 0.004625797271728516, "tests_passed": true, "error": null}
{"code": " 0.5 * (1 + math.cos(2 * math.pi * years_since_solar_cycle_year / 11.0))", "compilation_passed": true, "time": 0.0048868656158447266, "tests_passed": true, "error": null}
{"code": " np.cos(math.pi * (years_since_solar_cycle_year + converted_date.hour / 24) / 11)", "compilation_passed": true, "time": 0.004578113555908203, "tests_passed": true, "error": null}
{"code": " 1.0", "compilation_passed": true, "time": 0.005307912826538086, "tests_passed": true, "error": null}
