{"code": " r\"(how|what)[\\s\\S]*?(?:how|what|content|text|body|article|document|textbody|contentbody|title)\"", "compilation_passed": true, "time": 0.02100205421447754, "tests_passed": false, "error": "AttributeError"}
{"code": " re.compile(r'(how|what)s*')", "compilation_passed": true, "time": 0.008096694946289062, "tests_passed": true, "error": null}
{"code": " r'(\\w+(?: \\w+)+)?\\s(how|what)\\s\\w+\\s(?:is|are|are\\s\\w+)'", "compilation_passed": true, "time": 0.01610112190246582, "tests_passed": false, "error": "AttributeError"}
{"code": " re.compile(r'how|what', re.IGNORECASE)", "compilation_passed": true, "time": 0.07291793823242188, "tests_passed": true, "error": null}
{"code": " r\"\\b(how|what)\\b\"", "compilation_passed": true, "time": 0.055390119552612305, "tests_passed": false, "error": "AttributeError"}
{"code": " r\"^(how|what).*\"", "compilation_passed": true, "time": 0.024131059646606445, "tests_passed": false, "error": "AttributeError"}
{"code": " r'\\b(how|what)\\b'", "compilation_passed": true, "time": 0.01951885223388672, "tests_passed": false, "error": "AttributeError"}
{"code": " re.compile(r'(how|what)s?\\s?(?!.*(?:a\\s?|the\\s?).*)\\w+', re.I)", "compilation_passed": true, "time": 0.018629789352416992, "tests_passed": true, "error": null}
{"code": " re.compile(r\"how|what\")", "compilation_passed": true, "time": 0.00834512710571289, "tests_passed": true, "error": null}
{"code": " re.compile(r\"^(how|what).+\", re.IGNORECASE)", "compilation_passed": true, "time": 0.018225908279418945, "tests_passed": true, "error": null}
{"code": " re.compile(r\"^(how|what)\\b\", re.IGNORECASE)", "compilation_passed": true, "time": 0.022120952606201172, "tests_passed": true, "error": null}
{"code": " re.compile(r\"(How|What).+?\\.\", re.IGNORECASE)", "compilation_passed": true, "time": 0.007566213607788086, "tests_passed": true, "error": null}
{"code": " r'\\bh\\w{2,}\\b|\\b\\w{2,} what\\b'", "compilation_passed": true, "time": 0.019367218017578125, "tests_passed": false, "error": "AttributeError"}
{"code": " '(how|what).*?(?:(\\.)|(\\?))'", "compilation_passed": true, "time": 0.0254361629486084, "tests_passed": false, "error": "AttributeError"}
{"code": " re.compile('[^a-z]')", "compilation_passed": true, "time": 0.023231983184814453, "tests_passed": true, "error": null}
{"code": " re.compile(r\"\\b(?:how|what)\\b\", re.IGNORECASE)", "compilation_passed": true, "time": 0.01733088493347168, "tests_passed": true, "error": null}
{"code": " re.compile(r\"(?:how|what)[\\w\\s]+\", flags=re.IGNORECASE)", "compilation_passed": true, "time": 0.018461942672729492, "tests_passed": true, "error": null}
{"code": " r'(?i)\\b(how|what).*?[.!?]'", "compilation_passed": true, "time": 0.020670175552368164, "tests_passed": false, "error": "AttributeError"}
{"code": " re.compile(r'(how|what)s?')", "compilation_passed": true, "time": 0.010519981384277344, "tests_passed": true, "error": null}
{"code": " re.compile(r'\\bhow\\b|\\bwhat\\b')", "compilation_passed": true, "time": 0.011445760726928711, "tests_passed": true, "error": null}
{"code": " re.compile(r\"^(how|what)\\w+\", re.IGNORECASE)", "compilation_passed": true, "time": 0.00977778434753418, "tests_passed": true, "error": null}
{"code": " r'(how|what)[\\s\\S]+?(?:(?:\\S*?(?:and|or|with|for|at|by|to)[\\s\\S]*?\\S*?(?:and|or|with|for|at|by|to)[\\s\\S]*)|[^\\S\\n])'", "compilation_passed": true, "time": 0.024085044860839844, "tests_passed": false, "error": "AttributeError"}
{"code": " re.compile('(how|what).*?\\.')", "compilation_passed": true, "time": 0.010944128036499023, "tests_passed": true, "error": null}
{"code": " r'[hH]ow'  # regex pattern for words starting with \"how\" or \"how\"", "compilation_passed": true, "time": 0.020461082458496094, "tests_passed": false, "error": "AttributeError"}
{"code": " re.compile(r'\\b(how|what)\\b')", "compilation_passed": true, "time": 0.008188962936401367, "tests_passed": true, "error": null}
{"code": " re.compile(r\"(how|what)\\b\")", "compilation_passed": true, "time": 0.013465166091918945, "tests_passed": true, "error": null}
{"code": " r\"(\\bhow\\b|\\bwhat\\b).*\"", "compilation_passed": true, "time": 0.027033090591430664, "tests_passed": false, "error": "AttributeError"}
{"code": " \"[what|how]+\"", "compilation_passed": true, "time": 0.021320819854736328, "tests_passed": false, "error": "AttributeError"}
