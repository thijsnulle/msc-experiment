{"code": " [np.random.choice(total_cols, row_num, p=[col / total_cols for col in flattened_list])", "compilation_passed": false, "time": 0.0002219676971435547, "tests_passed": false, "error": "SyntaxError"}
{"code": " []", "compilation_passed": true, "time": 0.009202957153320312, "tests_passed": true, "error": null}
{"code": " [[0] * total_cols for _ in range(row_num)]", "compilation_passed": true, "time": 0.030048131942749023, "tests_passed": true, "error": null}
{"code": " np.random.randint(low=0, high=total_cols, size=(row_num, total_cols))", "compilation_passed": true, "time": 0.007035017013549805, "tests_passed": true, "error": null}
{"code": " np.random.randint(low=0, high=101, size=(row_num, total_cols))", "compilation_passed": true, "time": 0.006823062896728516, "tests_passed": true, "error": null}
{"code": " {col: np.random.randint(100, size=(row_num,)) for col in flattened_list}", "compilation_passed": true, "time": 0.008491992950439453, "tests_passed": true, "error": null}
{"code": " pd.DataFrame(np.random.randint(0, 100, size=(row_num, total_cols)))", "compilation_passed": true, "time": 0.016027212142944336, "tests_passed": true, "error": null}
{"code": " np.random.randint(0, 100, size=(row_num, total_cols))", "compilation_passed": true, "time": 0.007297992706298828, "tests_passed": true, "error": null}
{"code": " np.random.randint(low=0, high=100, size=(row_num, total_cols))", "compilation_passed": true, "time": 0.007160186767578125, "tests_passed": true, "error": null}
{"code": " pd.DataFrame(np.random.randint(0, 100, (row_num, total_cols)))", "compilation_passed": true, "time": 0.014100790023803711, "tests_passed": true, "error": null}
{"code": " np.random.randint(1, 100, (row_num, total_cols))", "compilation_passed": true, "time": 0.006907939910888672, "tests_passed": true, "error": null}
{"code": " [", "compilation_passed": false, "time": 0.00019502639770507812, "tests_passed": false, "error": "SyntaxError"}
{"code": " pd.DataFrame(np.random.randint(0, 1000, size=(row_num, total_cols)), columns=int_list, copy=True)", "compilation_passed": true, "time": 0.012771129608154297, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.randint(0, total_cols, row_num)", "compilation_passed": true, "time": 0.008842945098876953, "tests_passed": false, "error": "ValueError"}
{"code": " [np.random.randint(0, 100, total_cols) for _ in range(row_num)]", "compilation_passed": true, "time": 0.09580016136169434, "tests_passed": true, "error": null}
{"code": " np.random.rand(row_num, total_cols)", "compilation_passed": true, "time": 0.008183717727661133, "tests_passed": true, "error": null}
{"code": " [['0' for _ in range(total_cols)]] * row_num", "compilation_passed": true, "time": 0.029320240020751953, "tests_passed": true, "error": null}
{"code": " pd.DataFrame(np.random.randint(1, 100, (row_num, total_cols)))", "compilation_passed": true, "time": 0.013077020645141602, "tests_passed": true, "error": null}
{"code": " pd.DataFrame(np.random.randint(1, 100, size=(row_num, total_cols)))", "compilation_passed": true, "time": 0.013923883438110352, "tests_passed": true, "error": null}
{"code": " np.random.randint(0, 1000, size=(row_num, total_cols))", "compilation_passed": true, "time": 0.006318092346191406, "tests_passed": true, "error": null}
{"code": " np.random.randint(0, 100, (row_num, total_cols))", "compilation_passed": true, "time": 0.0074291229248046875, "tests_passed": true, "error": null}
{"code": " pd.DataFrame(np.zeros((row_num, total_cols)), index=range(row_num), columns=range(total_cols))", "compilation_passed": true, "time": 0.013857841491699219, "tests_passed": true, "error": null}
{"code": " pd.DataFrame(np.random.randint(0, 100, (row_num, total_cols)),", "compilation_passed": false, "time": 0.00025200843811035156, "tests_passed": false, "error": "SyntaxError"}
{"code": " pd.DataFrame(np.random.randint(0, 1000, size=(row_num, total_cols)), columns=flattened_list)", "compilation_passed": true, "time": 0.008297204971313477, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.randint(1, 100, size=(row_num, total_cols))", "compilation_passed": true, "time": 0.007055044174194336, "tests_passed": true, "error": null}
{"code": " [[random.randint(0, 100) for _ in range(total_cols)] for _ in range(row_num)]", "compilation_passed": true, "time": 0.014892816543579102, "tests_passed": false, "error": "NameError"}
