{"code": " np.random.rand(num_samples) * 5", "compilation_passed": true, "time": 0.017260074615478516, "tests_passed": false, "error": "Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample."}
{"code": " np.random.randint(10, 100, size=(num_samples, 1))", "compilation_passed": true, "time": 0.009991168975830078, "tests_passed": true, "error": null}
{"code": " np.random.random((num_samples,1))", "compilation_passed": true, "time": 0.009411096572875977, "tests_passed": true, "error": null}
{"code": " np.random.rand(num_samples, 1)", "compilation_passed": true, "time": 0.009427070617675781, "tests_passed": true, "error": null}
{"code": " np.random.normal(size=(num_samples, 1))", "compilation_passed": true, "time": 0.010275125503540039, "tests_passed": true, "error": null}
{"code": " np.random.uniform(low=0, high=1000, size=(num_samples, 1))", "compilation_passed": true, "time": 0.014226913452148438, "tests_passed": true, "error": null}
{"code": " np.random.random(num_samples) * 100", "compilation_passed": true, "time": 0.02365899085998535, "tests_passed": false, "error": "Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample."}
{"code": " np.random.uniform(low=0, high=1, size=(num_samples, 1))", "compilation_passed": true, "time": 0.010346174240112305, "tests_passed": true, "error": null}
{"code": " np.random.normal(0, 2, (num_samples, 1))", "compilation_passed": true, "time": 0.014361858367919922, "tests_passed": true, "error": null}
{"code": " np.random.rand(num_samples) * 10", "compilation_passed": true, "time": 0.01589798927307129, "tests_passed": false, "error": "Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample."}
{"code": " np.random.randn(num_samples)", "compilation_passed": true, "time": 0.023495912551879883, "tests_passed": false, "error": "Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample."}
{"code": " np.random.normal(0, 10, (num_samples,1))", "compilation_passed": true, "time": 0.016191959381103516, "tests_passed": true, "error": null}
{"code": " np.random.normal(size=num_samples)", "compilation_passed": true, "time": 0.014856815338134766, "tests_passed": false, "error": "Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample."}
{"code": " np.random.uniform(0.0, 10.0, size=(num_samples, 1))", "compilation_passed": true, "time": 0.010478019714355469, "tests_passed": true, "error": null}
{"code": " np.random.randn(num_samples) * noise_strength", "compilation_passed": true, "time": 0.021625280380249023, "tests_passed": false, "error": "Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample."}
{"code": " np.random.random((num_samples, 1))", "compilation_passed": true, "time": 0.009549856185913086, "tests_passed": true, "error": null}
{"code": " np.random.randn(num_samples, 1)", "compilation_passed": true, "time": 0.009331941604614258, "tests_passed": true, "error": null}
{"code": " np.random.randint(0, 10, size=num_samples).reshape(-1, 1)", "compilation_passed": true, "time": 0.009512901306152344, "tests_passed": true, "error": null}
{"code": " np.random.rand(num_samples)", "compilation_passed": true, "time": 0.014701128005981445, "tests_passed": false, "error": "Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample."}
{"code": " np.random.uniform(-5, 5, (num_samples, 1))", "compilation_passed": true, "time": 0.011147737503051758, "tests_passed": true, "error": null}
{"code": " np.random.random(size=(num_samples, 1))", "compilation_passed": true, "time": 0.011267900466918945, "tests_passed": true, "error": null}
