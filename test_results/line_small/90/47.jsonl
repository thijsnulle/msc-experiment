{"code": " np.apply_along_axis(calculate_distance, 1, data, target)", "compilation_passed": true, "time": 0.0054509639739990234, "tests_passed": true, "error": null}
{"code": " []", "compilation_passed": true, "time": 0.008332967758178711, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(point, target) for point in data.values]", "compilation_passed": true, "time": 0.008612632751464844, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(coord, target) for coord in data.values]", "compilation_passed": true, "time": 0.007977962493896484, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(row, target) for row in data]", "compilation_passed": true, "time": 0.013998985290527344, "tests_passed": false, "error": "TypeError"}
{"code": " [calculate_distance(target, row) for i, row in data.iterrows()]", "compilation_passed": true, "time": 0.008933067321777344, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(target, row) for _, row in data.iterrows()]", "compilation_passed": true, "time": 0.008587121963500977, "tests_passed": false, "error": "AttributeError"}
{"code": " [(calculate_distance(x, target), x) for x in data.to_numpy()]", "compilation_passed": true, "time": 0.008553028106689453, "tests_passed": false, "error": "AttributeError"}
{"code": " [(calculate_distance(target, row), row) for _, row in data.iterrows()]", "compilation_passed": true, "time": 0.009361028671264648, "tests_passed": false, "error": "AttributeError"}
{"code": " [(calculate_distance(d, target), d) for d in data.to_numpy()]", "compilation_passed": true, "time": 0.00816488265991211, "tests_passed": false, "error": "AttributeError"}
{"code": " [(calculate_distance(target, coords), coords) for coords in data['Latitude'], data['Longitude']]", "compilation_passed": false, "time": 0.0003170967102050781, "tests_passed": false, "error": "SyntaxError"}
{"code": " [calculate_distance(i, target) for i in data[['Latitude', 'Longitude']].values.tolist()]", "compilation_passed": true, "time": 0.009524106979370117, "tests_passed": false, "error": "AttributeError"}
{"code": " [(calculate_distance(row, target), index) for index, row in data.iterrows()]", "compilation_passed": true, "time": 0.009914875030517578, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(data[['Latitude', 'Longitude']][i], target)", "compilation_passed": false, "time": 0.00039196014404296875, "tests_passed": false, "error": "SyntaxError"}
{"code": " [calculate_distance(data.iloc[i]['Latitude'], data.iloc[i]['Longitude']) for i in range(len(data))]", "compilation_passed": true, "time": 0.016518115997314453, "tests_passed": false, "error": "IndexError"}
{"code": " np.apply_along_axis(calculate_distance, 0, data.values, target)", "compilation_passed": true, "time": 0.00689387321472168, "tests_passed": true, "error": null}
{"code": " [(calculate_distance(row, target), i) for i, row in data.iterrows()]", "compilation_passed": true, "time": 0.009479761123657227, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(data.iloc[i, :2], target) for i in range(len(data))]", "compilation_passed": true, "time": 0.009948968887329102, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(target, coord) for coord in data['Latitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].", "compilation_passed": false, "time": 0.0004222393035888672, "tests_passed": false, "error": "SyntaxError"}
{"code": " [calculate_distance(coord, target) for coord in data.itertuples(index=False)]", "compilation_passed": true, "time": 0.009459972381591797, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(data['Latitude'].iloc[i], data['Longitude'].iloc[i])", "compilation_passed": false, "time": 0.00029277801513671875, "tests_passed": false, "error": "SyntaxError"}
{"code": " [calculate_distance(data.iloc[i].values, target) for i in range(len(data))]", "compilation_passed": true, "time": 0.008803844451904297, "tests_passed": false, "error": "AttributeError"}
{"code": " [calculate_distance(d, target) for d in data.values]", "compilation_passed": true, "time": 0.008319377899169922, "tests_passed": false, "error": "AttributeError"}
