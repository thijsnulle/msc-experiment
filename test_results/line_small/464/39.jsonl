{"code": " json.dumps(my_obj, cls=DateTimeEncoder, separators=(',', ':'))", "compilation_passed": true, "time": 0.0050890445709228516, "tests_passed": true, "error": null}
{"code": " json.dumps(my_obj, cls=DateTimeEncoder)", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}
{"code": " JsonDumps(my_obj, indent=2, sort_keys=False, cls=DateTimeEncoder)", "compilation_passed": true, "time": 0.007258176803588867, "tests_passed": false, "error": "NameError"}
{"code": " json.dumps(my_obj, cls=DateTimeEncoder, allow_nan=False)", "compilation_passed": true, "time": 0.0018088817596435547, "tests_passed": true, "error": null}
{"code": " json.dumps(my_obj, default=DateTimeEncoder)", "compilation_passed": true, "time": 0.007169961929321289, "tests_passed": false, "error": "TypeError"}
{"code": " DateTimeEncoder().encode(my_obj)", "compilation_passed": true, "time": 0.0019121170043945312, "tests_passed": true, "error": null}
{"code": " json.dumps(my_obj, cls=DateTimeEncoder, ensure_ascii=False, indent=2)", "compilation_passed": true, "time": 0.004647016525268555, "tests_passed": true, "error": null}
{"code": " JsonDateTime.encode(my_obj, cls=DateTimeEncoder)", "compilation_passed": true, "time": 0.007200956344604492, "tests_passed": false, "error": "NameError"}
{"code": " json.dumps(my_obj, cls=DateTimeEncoder, allow_nan=False, separators=(',',':'))", "compilation_passed": true, "time": 0.004701852798461914, "tests_passed": true, "error": null}
{"code": " JsonEncoder(date_encoder=DateTimeEncoder).encode(my_obj)", "compilation_passed": true, "time": 0.007258176803588867, "tests_passed": false, "error": "NameError"}
{"code": " JsonEncodeDecodeTask(JsonEncodeDecodeTask.__doc__)", "compilation_passed": true, "time": 0.006905078887939453, "tests_passed": false, "error": "NameError"}
{"code": " json.dumps(my_obj, cls=DateTimeEncoder, allow_nan=False, indent=2)", "compilation_passed": true, "time": 0.004942178726196289, "tests_passed": true, "error": null}
