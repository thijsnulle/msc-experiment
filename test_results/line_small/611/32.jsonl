{"code": " [np.random.random() < 0.5 for _ in range(df.shape[0])]", "compilation_passed": true, "time": 0.010323047637939453, "tests_passed": false, "error": "TypeError"}
{"code": " [x in tuples for x in df.values]", "compilation_passed": true, "time": 0.014221906661987305, "tests_passed": false, "error": "ValueError"}
{"code": " [True] * df.shape[0]", "compilation_passed": true, "time": 0.012375831604003906, "tests_passed": false, "error": "TypeError"}
{"code": " pd.notnull(df[list(COLUMNS)])", "compilation_passed": true, "time": 0.86061692237854, "tests_passed": true, "error": null}
{"code": " []", "compilation_passed": true, "time": 0.01653003692626953, "tests_passed": false, "error": "TypeError"}
{"code": " [", "compilation_passed": false, "time": 0.00017404556274414062, "tests_passed": false, "error": "SyntaxError"}
{"code": " [all(j not in row for j in tuples) for row in df.itertuples(index=False)]", "compilation_passed": true, "time": 0.01997995376586914, "tests_passed": false, "error": "TypeError"}
{"code": " np.full(df.shape[0], True)", "compilation_passed": true, "time": 0.00922703742980957, "tests_passed": true, "error": null}
{"code": " np.ones(df.shape[0], dtype=np.bool)", "compilation_passed": true, "time": 0.009586095809936523, "tests_passed": true, "error": null}
{"code": " list(range(1, df.shape[0] + 1))", "compilation_passed": true, "time": 0.012449979782104492, "tests_passed": false, "error": "TypeError"}
{"code": " np.full(len(df), True)", "compilation_passed": true, "time": 0.008806943893432617, "tests_passed": true, "error": null}
{"code": " [False] * len(df)  # Create a boolean mask to mark rows to be removed", "compilation_passed": true, "time": 0.010968208312988281, "tests_passed": false, "error": "TypeError"}
{"code": " ~np.all(np.isin(df, tuples, axis=1), axis=1)", "compilation_passed": true, "time": 0.00989222526550293, "tests_passed": false, "error": "TypeError"}
{"code": " df.apply(lambda x: tuple(x.astype(int).dropna().values) in tuples, axis=0).values", "compilation_passed": true, "time": 0.017926931381225586, "tests_passed": false, "error": "ValueError"}
{"code": " df.iloc[:, -2:].isin(tuples)", "compilation_passed": true, "time": 0.42090392112731934, "tests_passed": true, "error": null}
{"code": " ~df.apply(lambda row: any(tuple(row[c] for c in cols) in values for cols, values in tuples), axis=1)", "compilation_passed": true, "time": 0.02864217758178711, "tests_passed": false, "error": "ValueError"}
{"code": " np.ones(df.shape[0], dtype=bool)", "compilation_passed": true, "time": 0.011222124099731445, "tests_passed": true, "error": null}
{"code": " (", "compilation_passed": false, "time": 0.00018930435180664062, "tests_passed": false, "error": "SyntaxError"}
{"code": " np.ones(len(df), dtype=bool)", "compilation_passed": true, "time": 0.008856773376464844, "tests_passed": true, "error": null}
{"code": " (df.iloc[:, COLUMNS].isin(tuples)) | (df.iloc[:, COLUMNS].isin(tuples))", "compilation_passed": true, "time": 0.01954507827758789, "tests_passed": false, "error": "IndexError"}
{"code": " None", "compilation_passed": true, "time": 0.011617660522460938, "tests_passed": false, "error": "TypeError"}
{"code": " [all(val not in row for val in vals) for row, vals in zip(df.to_numpy(), zip(*tuples))]", "compilation_passed": true, "time": 0.016662120819091797, "tests_passed": false, "error": "TypeError"}
{"code": " True", "compilation_passed": true, "time": 0.031061172485351562, "tests_passed": false, "error": "KeyError"}
{"code": " df.isin(tuples).all(axis=1)", "compilation_passed": true, "time": 0.43961596488952637, "tests_passed": true, "error": null}
{"code": " np.ones(len(df), bool)", "compilation_passed": true, "time": 0.008008956909179688, "tests_passed": true, "error": null}
{"code": " np.ones((len(df),), dtype=bool)", "compilation_passed": true, "time": 0.008819818496704102, "tests_passed": true, "error": null}
{"code": " np.ones(df.shape[0])", "compilation_passed": true, "time": 0.009756326675415039, "tests_passed": false, "error": "TypeError"}
