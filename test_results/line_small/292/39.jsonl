{"code": " bins = np.histogram(df_grouped['income'].to_numpy(), bins=10)", "compilation_passed": true, "time": 0.18286585807800293, "tests_passed": true, "error": null}
{"code": " edges = np.histogram(", "compilation_passed": false, "time": 0.00020623207092285156, "tests_passed": false, "error": "SyntaxError"}
{"code": " bins = np.histogram(df_grouped['income'], bins='auto')", "compilation_passed": true, "time": 0.12200808525085449, "tests_passed": true, "error": null}
{"code": " bins = np.histogram(df_grouped['income'].values, bins=10)", "compilation_passed": true, "time": 0.18697023391723633, "tests_passed": true, "error": null}
{"code": " bin_edges = np.histogram(df_grouped['income'].values, bins=10)", "compilation_passed": true, "time": 0.0751650333404541, "tests_passed": false, "error": "NameError"}
{"code": " bins = np.histogram(", "compilation_passed": false, "time": 0.00016617774963378906, "tests_passed": false, "error": "SyntaxError"}
{"code": " bin_edges = np.histogram(df_grouped['income'], bins=20)", "compilation_passed": true, "time": 0.07441377639770508, "tests_passed": false, "error": "NameError"}
{"code": " _, _ = plt.hist(", "compilation_passed": false, "time": 0.0001900196075439453, "tests_passed": false, "error": "SyntaxError"}
{"code": " bins = np.histogram(df_grouped['income'].to_numpy(), bins=20)", "compilation_passed": true, "time": 0.12277102470397949, "tests_passed": true, "error": null}
{"code": " _ = np.histogram(", "compilation_passed": false, "time": 0.0001590251922607422, "tests_passed": false, "error": "SyntaxError"}
{"code": " bin_edges = np.histogram(df_grouped.income, bins=20)", "compilation_passed": true, "time": 0.07414412498474121, "tests_passed": false, "error": "NameError"}
{"code": " bins = np.histogram(df_grouped.income.values, bins=10)", "compilation_passed": true, "time": 0.17772197723388672, "tests_passed": true, "error": null}
{"code": " bins = np.histogram(df_grouped['income'], bins=50, density=True)", "compilation_passed": true, "time": 0.11518168449401855, "tests_passed": true, "error": null}
{"code": " _, _ = plt.hist(df_grouped.iloc[0]['income'].values, bins=20)", "compilation_passed": true, "time": 0.07944083213806152, "tests_passed": false, "error": "NameError"}
{"code": " bins = np.histogram(df_grouped['income'], bins=10)", "compilation_passed": true, "time": 0.18216586112976074, "tests_passed": true, "error": null}
{"code": " bins = np.histogram(df_grouped['income'], bins=20)", "compilation_passed": true, "time": 0.11553001403808594, "tests_passed": true, "error": null}
{"code": " bin_edges = np.histogram(df_grouped['income'], bins=10)", "compilation_passed": true, "time": 0.07787895202636719, "tests_passed": false, "error": "NameError"}
{"code": " bins = np.histogram(df_grouped['income'], bins=20, density=True)", "compilation_passed": true, "time": 0.11317300796508789, "tests_passed": true, "error": null}
{"code": " bin_edges = np.histogram(df_grouped['income'])", "compilation_passed": true, "time": 0.08037519454956055, "tests_passed": false, "error": "NameError"}
{"code": " bins = np.histogram(df_grouped.income, bins=np.arange(0,10001,2500))", "compilation_passed": true, "time": 0.11658811569213867, "tests_passed": true, "error": null}
{"code": " bins = np.histogram(df_grouped.income, bins=20)", "compilation_passed": true, "time": 0.11529302597045898, "tests_passed": true, "error": null}
{"code": " _ = np.histogram(df_grouped['income'])", "compilation_passed": true, "time": 0.07512807846069336, "tests_passed": false, "error": "NameError"}
{"code": " bins, _ = plt.hist(df_grouped.income.values, bins=10, density=True)", "compilation_passed": true, "time": 0.07364892959594727, "tests_passed": false, "error": "NameError"}
{"code": " bins, bar_labels = np.histogram(df_grouped[df_grouped['id'].notnull()]['income'])", "compilation_passed": true, "time": 0.08492708206176758, "tests_passed": false, "error": "KeyError"}
