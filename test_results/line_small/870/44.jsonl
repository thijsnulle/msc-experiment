{"code": " list(zip(*data_list, *itertools.repeat(np.nan)))", "compilation_passed": true, "time": 1.0, "tests_passed": false, "error": "MemoryError"}
{"code": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "compilation_passed": true, "time": 0.004229307174682617, "tests_passed": true, "error": null}
{"code": " [np.nan_to_num(val) for val in zip(*data_list)]", "compilation_passed": true, "time": 0.003820657730102539, "tests_passed": true, "error": null}
{"code": " [item for sublist in data_list for item in zip(*sublist)]", "compilation_passed": true, "time": 0.006425142288208008, "tests_passed": false, "error": "TypeError"}
{"code": " map(np.nan_to_num, zip(*data_list))", "compilation_passed": true, "time": 0.004741191864013672, "tests_passed": false, "error": "TypeError"}
{"code": " np.array(list(zip(*list(map(lambda x: x if x is not None else [np.nan], data_list)))))", "compilation_passed": true, "time": 0.0038597583770751953, "tests_passed": true, "error": null}
{"code": " list(zip(*[itertools.zip_longest(*data_list, fillvalue=np.nan)]))", "compilation_passed": true, "time": 0.004544973373413086, "tests_passed": true, "error": null}
{"code": " itertools.zip_longest(*data_list, fillvalue=np.nan)", "compilation_passed": true, "time": 0.004703044891357422, "tests_passed": false, "error": "TypeError"}
{"code": " zip(*[iter(itertools.chain(*data_list))] * 3)", "compilation_passed": true, "time": 0.004830121994018555, "tests_passed": false, "error": "TypeError"}
{"code": " []", "compilation_passed": true, "time": 0.023720264434814453, "tests_passed": false, "error": "KeyError"}
{"code": " zip(*[itertools.zip_longest(", "compilation_passed": false, "time": 0.00028586387634277344, "tests_passed": false, "error": "SyntaxError"}
{"code": " np.array(list(zip(*data_list, np.nan)))", "compilation_passed": true, "time": 0.005074977874755859, "tests_passed": false, "error": "TypeError"}
{"code": " zip(*map(lambda x: np.nan_to_num(pd.Series(x)), zip(*data_list)))", "compilation_passed": true, "time": 0.0051920413970947266, "tests_passed": false, "error": "TypeError"}
{"code": " list(map(list, zip(*[itertools.zip_longest(*data_list, fillvalue=np.nan)])))", "compilation_passed": true, "time": 0.0036628246307373047, "tests_passed": true, "error": null}
{"code": " zip(*data_list)", "compilation_passed": true, "time": 0.006237983703613281, "tests_passed": false, "error": "TypeError"}
{"code": " zip(*data_list, [np.nan] * len(data_list))", "compilation_passed": true, "time": 0.004587888717651367, "tests_passed": false, "error": "TypeError"}
{"code": " [np.nan_to_num(x) for x in zip(*data_list)]", "compilation_passed": true, "time": 0.004200935363769531, "tests_passed": true, "error": null}
{"code": " zip(*data_list, unzip=True)", "compilation_passed": true, "time": 0.004804849624633789, "tests_passed": false, "error": "TypeError"}
{"code": " [list(itertools.zip_longest(data, fillvalue=np.nan)) for data in zip(*data_list)]", "compilation_passed": true, "time": 0.004405975341796875, "tests_passed": true, "error": null}
{"code": " list(zip(*data_list))", "compilation_passed": true, "time": 0.01170206069946289, "tests_passed": false, "error": "KeyError"}
{"code": " [list(item) for item in zip(*[iter(data_list)] * 3)]", "compilation_passed": true, "time": 0.010144948959350586, "tests_passed": false, "error": "KeyError"}
{"code": " list(map(list, zip(*data_list)))", "compilation_passed": true, "time": 0.011870384216308594, "tests_passed": false, "error": "KeyError"}
{"code": " zip(*[iter(data_list)] * 3)", "compilation_passed": true, "time": 0.005300045013427734, "tests_passed": false, "error": "TypeError"}
{"code": " list(zip(*[x[0] if len(x) > 1 else np.nan for x in data_list]))", "compilation_passed": true, "time": 0.010022878646850586, "tests_passed": false, "error": "KeyError"}
{"code": " np.array([row[1:] for row in zip(*data_list) if row[0] is not None])", "compilation_passed": true, "time": 0.003795146942138672, "tests_passed": true, "error": null}
