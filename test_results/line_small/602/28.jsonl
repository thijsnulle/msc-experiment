{"code": " np.random.choice(LETTERS, size=(50, 50))", "compilation_passed": true, "time": 0.006014108657836914, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(1000, 1000)).tolist()", "compilation_passed": true, "time": 0.03766179084777832, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, (50, 20))", "compilation_passed": true, "time": 0.006602048873901367, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(40, 60)).tolist()", "compilation_passed": true, "time": 0.007718086242675781, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, (10, 10))", "compilation_passed": true, "time": 0.005555152893066406, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(26, 26), replace=False).tolist()", "compilation_passed": true, "time": 0.006515979766845703, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.choice(LETTERS, (3, 4))", "compilation_passed": true, "time": 0.0063037872314453125, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, 100, True).reshape(10, 10)", "compilation_passed": true, "time": 0.006350040435791016, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, 26, replace=False).reshape(6, 5).tolist()", "compilation_passed": true, "time": 0.00506281852722168, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.choice(LETTERS, size=(1000, 1000))", "compilation_passed": true, "time": 0.015330076217651367, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(3,3))", "compilation_passed": true, "time": 0.0065000057220458984, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(10, 10))", "compilation_passed": true, "time": 0.006961822509765625, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(5, 5))", "compilation_passed": true, "time": 0.007216930389404297, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, (50, 50))", "compilation_passed": true, "time": 0.005321979522705078, "tests_passed": false, "error": "AttributeError"}
{"code": " np.char.lower(np.random.choice(LETTERS, (100, 100)))", "compilation_passed": true, "time": 0.01355433464050293, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, 2500).reshape((50, 50))", "compilation_passed": true, "time": 0.0064699649810791016, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(50, 50), replace=False)", "compilation_passed": true, "time": 0.0071909427642822266, "tests_passed": false, "error": "ValueError"}
{"code": " np.random.choice(LETTERS, size=(4, 4))", "compilation_passed": true, "time": 0.005285978317260742, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, (20, 20), True)", "compilation_passed": true, "time": 0.0054929256439208984, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, 10, replace=False).reshape(2, 5)", "compilation_passed": true, "time": 0.005672931671142578, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, (20, 30))", "compilation_passed": true, "time": 0.005804777145385742, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, (50, 10))", "compilation_passed": true, "time": 0.006426811218261719, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(100, 100))", "compilation_passed": true, "time": 0.005686759948730469, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, size=(10, 10), replace=True)", "compilation_passed": true, "time": 0.005326986312866211, "tests_passed": false, "error": "AttributeError"}
{"code": " pd.DataFrame(np.random.choice(LETTERS, (26, 26)))", "compilation_passed": true, "time": 0.0076100826263427734, "tests_passed": true, "error": null}
{"code": " np.random.choice(LETTERS, size=(2, 3), replace=False)", "compilation_passed": true, "time": 0.006127834320068359, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, (1000, 1000))", "compilation_passed": true, "time": 0.01653599739074707, "tests_passed": false, "error": "AttributeError"}
{"code": " np.random.choice(LETTERS, (20, 15))", "compilation_passed": true, "time": 0.006908893585205078, "tests_passed": false, "error": "AttributeError"}
