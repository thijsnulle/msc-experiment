{"code": " re.match(pattern, file) and os.path.isfile(os.path.join(dir_path, file)):", "compilation_passed": true, "time": 0.019805192947387695, "tests_passed": true, "error": null}
{"code": " re.search(pattern, file):", "compilation_passed": true, "time": 0.019809961318969727, "tests_passed": true, "error": null}
{"code": " re.match(pattern, file):", "compilation_passed": true, "time": 0.019468069076538086, "tests_passed": true, "error": null}
{"code": " file.startswith(pattern):", "compilation_passed": true, "time": 0.008369207382202148, "tests_passed": true, "error": null}
{"code": " re.search(pattern, file) and os.path.isfile(file):", "compilation_passed": true, "time": 0.008393049240112305, "tests_passed": true, "error": null}
{"code": " re.search(pattern, file) and os.path.isfile(os.path.join(dir_path, file)):", "compilation_passed": true, "time": 0.020695209503173828, "tests_passed": true, "error": null}
{"code": " file.startswith(pattern) and os.path.isfile(os.path.join(dir_path, file)):", "compilation_passed": true, "time": 0.008402347564697266, "tests_passed": true, "error": null}
{"code": " re.match(pattern, file) is not None:", "compilation_passed": true, "time": 0.01881718635559082, "tests_passed": true, "error": null}
