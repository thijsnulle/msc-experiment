{"code": " df.pivot_table(index=\"col1\", columns=\"col2\", values=\"col3\")", "compilation_passed": true, "time": 0.03252911567687988, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby([\"col1\", \"col2\"])[\"col3\"].agg([\"count\"])", "compilation_passed": true, "time": 0.030320167541503906, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(\"col1\").aggregate(lambda x: x.value_counts(dropna=False, normalize=True))[\"col3\"].unstack()", "compilation_passed": true, "time": 0.017308950424194336, "tests_passed": false, "error": "ValueError"}
{"code": " df.groupby('col1', group_keys=False).apply(lambda x: (x['col2'].unique().size, x['col3'].value_counts())).sort_values(by='col2')", "compilation_passed": true, "time": 0.02393317222595215, "tests_passed": false, "error": "TypeError"}
{"code": " df.groupby(['col1', 'col2'])[['col3']].count().reset_index()", "compilation_passed": true, "time": 0.4249880313873291, "tests_passed": true, "error": null}
{"code": " df.groupby([df.columns[0], df.columns[1]])['col3'].value_counts().unstack()", "compilation_passed": true, "time": 0.037255048751831055, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(['col1', 'col2']).col3.describe()", "compilation_passed": true, "time": 0.04974675178527832, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(['col1', 'col2']).agg(['count']).reset_index().pivot_table(values='count', index=['col1'], columns=['col2'], aggfunc='count', fill_value=0)", "compilation_passed": true, "time": 0.023971080780029297, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(['col1', 'col2']).agg({'col3': 'mean'}).unstack('col2')", "compilation_passed": true, "time": 0.03373408317565918, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(['col1', 'col2'])['col3'].value_counts().unstack()", "compilation_passed": true, "time": 0.033091068267822266, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(['col1', 'col2'])[COLUMNS[2]].value_counts().unstack('col2')", "compilation_passed": true, "time": 0.033659934997558594, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(\"col1\").agg({\"col3\": \"mean\"}).transpose().assign(col3=\"mean\").melt(\"col1\", [\"col3\"], id_vars=\"col2\").pivot_table(values=\"value\", index=\"col2\", columns=\"col3\").rename_axis(\"col3\", axis=\"columns\")", "compilation_passed": true, "time": 0.012895822525024414, "tests_passed": false, "error": "TypeError"}
{"code": " df.groupby(['col1', 'col2']).col3.value_counts().reset_index()", "compilation_passed": true, "time": 0.014058113098144531, "tests_passed": false, "error": "ValueError"}
{"code": " df.pivot_table(values=\"col3\",", "compilation_passed": false, "time": 0.0002079010009765625, "tests_passed": false, "error": "SyntaxError"}
{"code": " df.pivot_table(index='col1', columns='col2', values='col3')", "compilation_passed": true, "time": 0.025651931762695312, "tests_passed": false, "error": "KeyError"}
{"code": " df.pivot_table(index='col1', columns='col2')", "compilation_passed": true, "time": 0.025663137435913086, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby('col1').apply(lambda group: group.groupby('col2')['col3'].count().sort_values().value_counts()).unstack()", "compilation_passed": true, "time": 0.014402151107788086, "tests_passed": false, "error": "AttributeError"}
{"code": " df.groupby(['col1', 'col2'])['col3'].count().reset_index(name=\"Count\")", "compilation_passed": true, "time": 0.030564069747924805, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(['col1', 'col2']).agg(['mean', 'count']).reset_index()", "compilation_passed": true, "time": 0.018604755401611328, "tests_passed": false, "error": "ValueError"}
{"code": " df.groupby(['col1', 'col2'])['col3'].value_counts().unstack().fillna(0)", "compilation_passed": true, "time": 0.024606943130493164, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby([\"col1\", \"col2\"])[\"col3\"].count().unstack()", "compilation_passed": true, "time": 0.021570920944213867, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(by=[df.col1, df.col2]).agg(count=('col3', 'count'))", "compilation_passed": true, "time": 0.031009912490844727, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby([\"col1\", \"col2\"])[\"col3\"].value_counts().unstack()", "compilation_passed": true, "time": 0.02351212501525879, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby([\"col1\", \"col2\"])[\"col3\"].value_counts().unstack(\"col1\").unstack(\"col2\")", "compilation_passed": true, "time": 0.02535390853881836, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby([\"col1\", \"col2\"])[\"col3\"].count()", "compilation_passed": true, "time": 0.015208005905151367, "tests_passed": false, "error": "AttributeError"}
{"code": " df.groupby(['col1', 'col2'])['col3'].count().unstack().reset_index()", "compilation_passed": true, "time": 0.02650284767150879, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby(['col1', 'col2'])['col3'].agg(['count', 'min', 'max', 'sum'])", "compilation_passed": true, "time": 0.031466007232666016, "tests_passed": false, "error": "KeyError"}
{"code": " df.groupby('col1')[COLUMNS[-1]].value_counts(normalize=True).reset_index(name='freq').sort_values('freq', ascending=False)", "compilation_passed": true, "time": 0.03239727020263672, "tests_passed": false, "error": "KeyError"}
