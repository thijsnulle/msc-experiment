{"code": " pd.Series([np.nan, np.nan, np.nan, np.nan, np.nan], index=['mean', 'median', 'min', 'max', 'std'])", "compilation_passed": false, "time": 0.00032520294189453125, "tests_passed": false, "error": "IndentationError"}
{"code": " np.array([(np.nan, np.nan, np.nan, np.nan, np.nan)],", "compilation_passed": false, "time": 0.0001857280731201172, "tests_passed": false, "error": "SyntaxError"}
{"code": " np.array([np.nan, np.nan, np.nan, np.nan, np.nan])", "compilation_passed": false, "time": 0.00020813941955566406, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series([np.nan, np.nan, np.nan, np.nan, np.nan, datetime.now().strftime(DATE_FORMAT)],", "compilation_passed": false, "time": 0.0002090930938720703, "tests_passed": false, "error": "SyntaxError"}
{"code": " [np.nan for _ in range(5)]", "compilation_passed": false, "time": 0.00019097328186035156, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series(np.nan, index=['mean', 'median', 'min', 'max', 'std', 'current_time'])", "compilation_passed": false, "time": 0.00020194053649902344, "tests_passed": false, "error": "IndentationError"}
{"code": " np.array([np.nan] * 5)", "compilation_passed": false, "time": 0.00018715858459472656, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series([np.nan] * 5, index=['mean', 'median', 'min', 'max', 'std'])", "compilation_passed": false, "time": 0.00020599365234375, "tests_passed": false, "error": "IndentationError"}
{"code": " {'mean': np.nan, 'median': np.nan, 'min': np.nan, 'max': np.nan, 'std': np.nan, 'current_time': datetime.now().strftime(DATE_FORMAT)}", "compilation_passed": false, "time": 0.00019931793212890625, "tests_passed": false, "error": "IndentationError"}
{"code": " np.array(['nan', 'nan', 'nan', 'nan', 'nan'])", "compilation_passed": false, "time": 0.0001888275146484375, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series({'mean': np.nan, 'median': np.nan, 'min': np.nan, 'max': np.nan, 'std': np.nan})", "compilation_passed": false, "time": 0.00021076202392578125, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series(", "compilation_passed": false, "time": 0.00017213821411132812, "tests_passed": false, "error": "SyntaxError"}
{"code": " pd.Series([np.nan, np.nan, np.nan, np.nan, np.nan],", "compilation_passed": false, "time": 0.00018310546875, "tests_passed": false, "error": "SyntaxError"}
{"code": " {", "compilation_passed": true, "time": 0.00516819953918457, "tests_passed": true, "error": null}
{"code": " pd.Series([np.nan, np.nan, np.nan, np.nan, np.nan, datetime.now().strftime(DATE_FORMAT)], index=['mean', 'median', 'min', 'max', 'std', 'current_time'])", "compilation_passed": false, "time": 0.0002110004425048828, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series([np.nan] * 6, index=['mean', 'median', 'min', 'max', 'std', 'current_time'])", "compilation_passed": false, "time": 0.00021600723266601562, "tests_passed": false, "error": "IndentationError"}
{"code": " {'mean': np.nan, 'median': np.nan, 'min': np.nan, 'max': np.nan, 'std': np.nan}", "compilation_passed": false, "time": 0.000202178955078125, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series([np.nan, np.nan, np.nan, np.nan, np.nan, datetime.strftime(datetime.now(), DATE_FORMAT)],", "compilation_passed": false, "time": 0.00021076202392578125, "tests_passed": false, "error": "SyntaxError"}
{"code": " np.nan", "compilation_passed": false, "time": 0.00020694732666015625, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series(dtype=float)", "compilation_passed": false, "time": 0.00017213821411132812, "tests_passed": false, "error": "IndentationError"}
{"code": " pd.Series({'mean': np.nan,", "compilation_passed": false, "time": 0.00022912025451660156, "tests_passed": false, "error": "SyntaxError"}
{"code": " [np.nan, np.nan, np.nan, np.nan, np.nan]", "compilation_passed": false, "time": 0.0001971721649169922, "tests_passed": false, "error": "IndentationError"}
