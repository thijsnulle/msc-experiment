{"code": " math.sin(ts / 1000) + np.random.normal(0, 0.05)", "compilation_passed": true, "time": 0.003144979476928711, "tests_passed": true, "error": null}
{"code": " np.sin(ts / 1000) + np.random.normal(scale=0.001)", "compilation_passed": true, "time": 0.003228902816772461, "tests_passed": true, "error": null}
{"code": " math.sin(ts / 1000) + np.random.uniform(low=-0.1, high=0.1)", "compilation_passed": true, "time": 0.0032508373260498047, "tests_passed": true, "error": null}
{"code": " np.sin(ts / 1000) + np.random.normal(scale=0.1)", "compilation_passed": true, "time": 0.0044858455657958984, "tests_passed": true, "error": null}
{"code": " math.sin(ts) + np.random.normal(0, 0.01)", "compilation_passed": true, "time": 0.003104686737060547, "tests_passed": true, "error": null}
{"code": " math.sin(ts / 1000) + np.random.uniform(-0.1, 0.1)", "compilation_passed": true, "time": 0.0032188892364501953, "tests_passed": true, "error": null}
{"code": " math.sin(ts / 1000) + np.random.normal(0, 0.01)", "compilation_passed": true, "time": 0.003125905990600586, "tests_passed": true, "error": null}
{"code": " math.sin(ts / 1000) + np.random.normal(0, 0.1)", "compilation_passed": true, "time": 0.004290103912353516, "tests_passed": true, "error": null}
{"code": " math.sin(ts / 1000) + np.random.normal(0, 0.005)", "compilation_passed": true, "time": 0.0031290054321289062, "tests_passed": true, "error": null}
{"code": " np.sin(ts / 1000) + np.random.uniform(-0.1, 0.1)", "compilation_passed": true, "time": 0.0033173561096191406, "tests_passed": true, "error": null}
{"code": " np.sin(ts / 1000) + np.random.normal(0, 0.1)", "compilation_passed": true, "time": 0.004460811614990234, "tests_passed": true, "error": null}
{"code": " math.sin(ts / 1000) + (np.random.random() / 50)", "compilation_passed": true, "time": 0.0031518936157226562, "tests_passed": true, "error": null}
{"code": " math.sin(ts) + (np.random.rand() / 10)", "compilation_passed": true, "time": 0.0031151771545410156, "tests_passed": true, "error": null}
{"code": " math.sin(ts / 1000) * (1 + (0.2 * np.random.normal()))", "compilation_passed": true, "time": 0.0032529830932617188, "tests_passed": true, "error": null}
{"code": " (", "compilation_passed": false, "time": 0.00021910667419433594, "tests_passed": false, "error": "SyntaxError"}
{"code": " math.sin(ts / 1000) + np.random.uniform(-0.25, 0.25)", "compilation_passed": true, "time": 0.003281831741333008, "tests_passed": true, "error": null}
