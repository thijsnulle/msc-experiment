{"code": " dataframe.apply(lambda x: (x == target_value).sum())", "compilation_passed": true, "time": 0.03978323936462402, "tests_passed": true, "error": null}
{"code": " dataframe.apply(lambda x: x.eq(target_value).sum())", "compilation_passed": true, "time": 0.040593862533569336, "tests_passed": true, "error": null}
{"code": " {}", "compilation_passed": true, "time": 0.005048036575317383, "tests_passed": false, "error": "AttributeError"}
{"code": " dataframe.apply(lambda x: x.str.contains(target_value, na=False).sum())", "compilation_passed": true, "time": 0.04190206527709961, "tests_passed": true, "error": null}
{"code": " dataframe.apply(lambda column: column.eq(target_value).sum())", "compilation_passed": true, "time": 0.04643416404724121, "tests_passed": true, "error": null}
{"code": " dataframe.eq(str(target_value)).any(axis=0)", "compilation_passed": true, "time": 0.00640106201171875, "tests_passed": false, "error": "TypeError"}
{"code": " dataframe[dataframe==target_value].count()", "compilation_passed": true, "time": 0.04001212120056152, "tests_passed": true, "error": null}
{"code": " dataframe.apply(lambda x: x.str.count(target_value))", "compilation_passed": true, "time": 0.06386899948120117, "tests_passed": false, "error": "ValueError"}
{"code": " dataframe.eq(str(target_value)).any().sum()", "compilation_passed": true, "time": 0.0056688785552978516, "tests_passed": false, "error": "AttributeError"}
{"code": " dataframe.eq(target_value).any()", "compilation_passed": true, "time": 0.007783174514770508, "tests_passed": false, "error": "TypeError"}
{"code": " dataframe.apply(lambda col: col.str.count(target_value))", "compilation_passed": true, "time": 0.05324101448059082, "tests_passed": false, "error": "ValueError"}
{"code": " dataframe.apply(lambda x: (x == str(target_value)).sum())", "compilation_passed": true, "time": 0.03395581245422363, "tests_passed": true, "error": null}
{"code": " dataframe[target_value].value_counts()", "compilation_passed": true, "time": 0.022471189498901367, "tests_passed": false, "error": "KeyError"}
{"code": " dataframe.apply(lambda col: col.apply(lambda cell: target_value in str(cell)))", "compilation_passed": true, "time": 0.006721973419189453, "tests_passed": false, "error": "TypeError"}
{"code": " dataframe.apply(lambda x: x.apply(lambda y: y == target_value))", "compilation_passed": true, "time": 0.00666499137878418, "tests_passed": false, "error": "TypeError"}
{"code": " dataframe.apply(lambda x: x[x == target_value].count(), axis=0)", "compilation_passed": true, "time": 0.03523993492126465, "tests_passed": true, "error": null}
{"code": " dataframe.apply(lambda col: col[col == target_value].count())", "compilation_passed": true, "time": 0.03279685974121094, "tests_passed": true, "error": null}
{"code": " dataframe.apply(lambda col: col.str.contains(target_value, na=False).sum())", "compilation_passed": true, "time": 0.034809112548828125, "tests_passed": true, "error": null}
{"code": " dataframe.eq(target_value).sum()", "compilation_passed": true, "time": 0.031136035919189453, "tests_passed": true, "error": null}
{"code": " dataframe.apply(lambda x: x[x == target_value].count(), axis=0)  # Count the number of rows per column", "compilation_passed": true, "time": 0.03855299949645996, "tests_passed": true, "error": null}
{"code": " dataframe.apply(lambda x: x == target_value)", "compilation_passed": true, "time": 0.008080005645751953, "tests_passed": false, "error": "TypeError"}
{"code": " dataframe.apply(lambda col: col.str.count(target_value).sum())", "compilation_passed": true, "time": 0.03465390205383301, "tests_passed": true, "error": null}
{"code": " dataframe.apply(lambda x: x.str.contains(target_value, na=False)).sum()", "compilation_passed": true, "time": 0.035794734954833984, "tests_passed": true, "error": null}
