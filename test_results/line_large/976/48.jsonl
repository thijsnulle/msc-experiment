{"code": " ValueError(\"records is not 2D\")", "compilation_passed": true, "time": 0.0067348480224609375, "tests_passed": true, "error": null}
{"code": " ValueError(", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}
{"code": " ValueError(\"Records should be 2D\")", "compilation_passed": true, "time": 0.006442070007324219, "tests_passed": true, "error": null}
{"code": " ValueError(\"Invalid input shape: expected 2D array\")", "compilation_passed": true, "time": 0.006306886672973633, "tests_passed": true, "error": null}
{"code": " ValueError(\"'records' must be a 2D array\")", "compilation_passed": true, "time": 0.006209135055541992, "tests_passed": true, "error": null}
{"code": " ValueError(\"Records must have 2 dimensions\")", "compilation_passed": true, "time": 0.00648188591003418, "tests_passed": true, "error": null}
{"code": " ValueError(\"records should be a 2D array\")", "compilation_passed": true, "time": 0.006951093673706055, "tests_passed": true, "error": null}
{"code": " ValueError(\"records must be 2D\")", "compilation_passed": true, "time": 0.006367206573486328, "tests_passed": true, "error": null}
{"code": " ValueError('records must be 2D')", "compilation_passed": true, "time": 0.007714986801147461, "tests_passed": true, "error": null}
{"code": " ValueError(\"This function only supports 2D arrays.\")", "compilation_passed": true, "time": 0.006445169448852539, "tests_passed": true, "error": null}
{"code": " ValueError(\"Array must be 2D\")", "compilation_passed": true, "time": 0.006368875503540039, "tests_passed": true, "error": null}
{"code": " ValueError(\"The input array must be 2D.\")", "compilation_passed": true, "time": 0.0066378116607666016, "tests_passed": true, "error": null}
{"code": " ValueError(\"Expects 2D data\")", "compilation_passed": true, "time": 0.006415128707885742, "tests_passed": true, "error": null}
{"code": " ValueError(\"Provided array is not 2D.\")", "compilation_passed": true, "time": 0.007252931594848633, "tests_passed": true, "error": null}
{"code": " ValueError(\"records must be a 2D numpy array.\")", "compilation_passed": true, "time": 0.0067691802978515625, "tests_passed": true, "error": null}
{"code": " ValueError('Data must be 2-dimensional.')", "compilation_passed": true, "time": 0.007345914840698242, "tests_passed": true, "error": null}
{"code": " ValueError(\"Invalid 'records' dimension, expected 2.\")", "compilation_passed": true, "time": 0.006487131118774414, "tests_passed": true, "error": null}
{"code": " ValueError('Expected 2D array')", "compilation_passed": true, "time": 0.0073642730712890625, "tests_passed": true, "error": null}
{"code": " ValueError(\"'records' should be a 2D np array\")", "compilation_passed": true, "time": 0.006943941116333008, "tests_passed": true, "error": null}
{"code": " ValueError(\"records must be a 2D np.ndarray\")", "compilation_passed": true, "time": 0.007581949234008789, "tests_passed": true, "error": null}
{"code": " ValueError(\"Expected 2D array, got {}-D\".format(records.ndim))", "compilation_passed": true, "time": 0.007773876190185547, "tests_passed": true, "error": null}
{"code": " ValueError(\"Input should be 2 dimensional\")", "compilation_passed": true, "time": 0.006683826446533203, "tests_passed": true, "error": null}
{"code": " ValueError(\"records should be 2D\")", "compilation_passed": true, "time": 0.007233142852783203, "tests_passed": true, "error": null}
{"code": " ValueError(\"records should be 2D array\")", "compilation_passed": true, "time": 0.006391048431396484, "tests_passed": true, "error": null}
{"code": " ValueError(\"records should be a 2D np.ndarray\")", "compilation_passed": true, "time": 0.008110284805297852, "tests_passed": true, "error": null}
