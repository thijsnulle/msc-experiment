{"code": " pd.Series(np.random.normal(float(value), float(value), n))", "compilation_passed": true, "time": 0.09834504127502441, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value)/2, n))", "compilation_passed": true, "time": 0.09891200065612793, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value) / 10, n))", "compilation_passed": true, "time": 0.09825992584228516, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value)/10, size=n), name=key)", "compilation_passed": true, "time": 0.09968686103820801, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value) / 3, n), name='dataset')", "compilation_passed": true, "time": 0.09922599792480469, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value) / 2, n))", "compilation_passed": true, "time": 0.0957040786743164, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value)/10, size=n))", "compilation_passed": true, "time": 0.09918689727783203, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), 0.5, n))", "compilation_passed": true, "time": 0.09720087051391602, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), 20, n))", "compilation_passed": true, "time": 0.09585785865783691, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), 1, n))", "compilation_passed": true, "time": 0.10000419616699219, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value)/10, n))", "compilation_passed": true, "time": 0.09611177444458008, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value), n), name=\"Data\")", "compilation_passed": true, "time": 0.09823107719421387, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), np.sqrt(float(value)), n))", "compilation_passed": true, "time": 0.09840011596679688, "tests_passed": true, "error": null}
{"code": " pd.Series(np.random.normal(float(value), float(value) / 2, size=n))", "compilation_passed": true, "time": 0.09855794906616211, "tests_passed": true, "error": null}
