{"code": " re.split('[.!?]', text)", "compilation_passed": true, "time": 0.025418996810913086, "tests_passed": true, "error": null}
{"code": " re.sub(r'([.?!][^\\s])', r'\\1 ', text).split(\".\")", "compilation_passed": true, "time": 0.011860847473144531, "tests_passed": true, "error": null}
{"code": " re.split(r'\\.\\s', text)", "compilation_passed": true, "time": 0.011123895645141602, "tests_passed": true, "error": null}
{"code": " re.split(r\"\\.\\s\", text)", "compilation_passed": true, "time": 0.010746955871582031, "tests_passed": true, "error": null}
{"code": " re.split(r'[?!.]\\s*', text)", "compilation_passed": true, "time": 0.006347179412841797, "tests_passed": true, "error": null}
{"code": " re.sub(r\"\\b(\"+\"|\".join(STOPWORDS)+\")\\b\\s*\", \"\", text)", "compilation_passed": true, "time": 0.005609989166259766, "tests_passed": true, "error": null}
{"code": " re.split(\"[.!?]+\", text)", "compilation_passed": true, "time": 0.011260032653808594, "tests_passed": true, "error": null}
{"code": " text.split(\". \")", "compilation_passed": true, "time": 0.01102900505065918, "tests_passed": true, "error": null}
{"code": " [re.split('\\.\\s*', sentence) for sentence in text.split('\\n')]", "compilation_passed": true, "time": 0.00790095329284668, "tests_passed": false, "error": "AttributeError"}
{"code": " re.sub(r\"[^a-zA-Z0-9\\s\\.]\", \"\", text).split('.')", "compilation_passed": true, "time": 0.011133909225463867, "tests_passed": true, "error": null}
{"code": " re.split(r'\\.\\s*(?=[A-Z])', text)", "compilation_passed": true, "time": 0.011477947235107422, "tests_passed": true, "error": null}
{"code": " re.split(r'[.]', text)", "compilation_passed": true, "time": 0.011137008666992188, "tests_passed": true, "error": null}
{"code": " re.findall(r\"[^.!?]+[.!?]+\", text) # find sentences", "compilation_passed": true, "time": 0.011624813079833984, "tests_passed": true, "error": null}
{"code": " re.split(r'[.!?]+', text)", "compilation_passed": true, "time": 0.011235952377319336, "tests_passed": true, "error": null}
{"code": " re.split(r\"[.]\", text)", "compilation_passed": true, "time": 0.010958194732666016, "tests_passed": true, "error": null}
{"code": " [sentence for sentence in re.sub(r'[^\\w\\s]','',text).lower().strip().split(\" \") if sentence not in STOPWORDS]", "compilation_passed": true, "time": 0.005125284194946289, "tests_passed": true, "error": null}
{"code": " [s for s in re.split(r\"[!.?]\\s*\",text) if s]", "compilation_passed": true, "time": 0.0067479610443115234, "tests_passed": true, "error": null}
{"code": " re.split(r'[?!.] ', text)", "compilation_passed": true, "time": 0.011867046356201172, "tests_passed": true, "error": null}
{"code": " re.split(r'[\\.?!]+', text)", "compilation_passed": true, "time": 0.011100053787231445, "tests_passed": true, "error": null}
{"code": " re.split(r'\\.\\s*', text)", "compilation_passed": true, "time": 0.003170013427734375, "tests_passed": true, "error": null}
{"code": " re.split(r'[.] ', text)", "compilation_passed": true, "time": 0.01116323471069336, "tests_passed": true, "error": null}
{"code": " re.split(\"(?<=[.!?]) +\", text)", "compilation_passed": true, "time": 0.010952949523925781, "tests_passed": true, "error": null}
{"code": " re.sub(r'(\\.)(\\w)', r'\\1 \\2', text).split(\".\")", "compilation_passed": true, "time": 0.011217832565307617, "tests_passed": true, "error": null}
{"code": " re.split(r'[.?!]', text)", "compilation_passed": true, "time": 0.011257648468017578, "tests_passed": true, "error": null}
{"code": " re.split('[?.!]', text)", "compilation_passed": true, "time": 0.011380910873413086, "tests_passed": true, "error": null}
{"code": " [\"Sentence \" + str(i+1) for i in range(len(re.findall(r'\\b[^.?!\\s]+[^?!]', text)))]", "compilation_passed": true, "time": 0.005468130111694336, "tests_passed": true, "error": null}
{"code": " re.split('\\.\\s*', text)", "compilation_passed": true, "time": 0.0031647682189941406, "tests_passed": true, "error": null}
{"code": " re.split('[?.!] ', text)", "compilation_passed": true, "time": 0.011329889297485352, "tests_passed": true, "error": null}
{"code": " re.split(\"[!?.]\\s\", text)", "compilation_passed": true, "time": 0.011476993560791016, "tests_passed": true, "error": null}
