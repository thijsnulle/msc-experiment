{"code": " [(letter, ALPHABET.index(letter.lower()) + 1) for letter in word]", "compilation_passed": true, "time": 0.007131099700927734, "tests_passed": true, "error": null}
{"code": " [(letter, ALPHABET.index(letter)+1) for letter in word]", "compilation_passed": true, "time": 0.0062868595123291016, "tests_passed": true, "error": null}
{"code": " list(map(lambda letter: (letter, ALPHABET.index(letter)+1), word))", "compilation_passed": true, "time": 0.017407894134521484, "tests_passed": true, "error": null}
{"code": " [(letter, ALPHABET.index(letter) + 1) for letter in word]", "compilation_passed": true, "time": 0.005285024642944336, "tests_passed": true, "error": null}
{"code": " [(char, ALPHABET.index(char) + 1) for char in word]", "compilation_passed": true, "time": 0.004459857940673828, "tests_passed": true, "error": null}
{"code": " [(char, ALPHABET.index(char.lower()) + 1) for char in word]", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}
{"code": " list(map(lambda x: (x, ALPHABET.index(x)+1), word))", "compilation_passed": true, "time": 0.004016876220703125, "tests_passed": true, "error": null}
{"code": " list(map(lambda x: (x, ALPHABET.index(x) + 1), word))", "compilation_passed": true, "time": 0.00391697883605957, "tests_passed": true, "error": null}
{"code": " list(zip(list(word), [ALPHABET.index(letter)+1 for letter in list(word)]))", "compilation_passed": true, "time": 0.004007816314697266, "tests_passed": true, "error": null}
{"code": " []", "compilation_passed": true, "time": 0.00709080696105957, "tests_passed": false, "error": "IndexError"}
{"code": " [ALPHABET.index(letter) + 1 for letter in word]", "compilation_passed": true, "time": 0.002115011215209961, "tests_passed": true, "error": null}
{"code": " list(zip(word, [ALPHABET.index(char) + 1 for char in word]))", "compilation_passed": true, "time": 0.004081010818481445, "tests_passed": true, "error": null}
{"code": " [", "compilation_passed": false, "time": 0.00013589859008789062, "tests_passed": false, "error": "SyntaxError"}
{"code": " [tuple((letter, ALPHABET.index(letter.lower()) + 1)) for letter in word]", "compilation_passed": true, "time": 0.004067897796630859, "tests_passed": true, "error": null}
