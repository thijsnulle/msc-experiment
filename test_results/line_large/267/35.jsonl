{"code": " np.cos(np.pi * signal * time)", "compilation_passed": true, "time": 0.009334087371826172, "tests_passed": false, "error": "ValueError"}
{"code": " np.interp(time, np.linspace(0, 2, len(signal)), signal)", "compilation_passed": true, "time": 0.22981715202331543, "tests_passed": true, "error": null}
{"code": " np.cos(time * 5) + np.sin(time * 10 + 1)", "compilation_passed": true, "time": 0.3514590263366699, "tests_passed": true, "error": null}
{"code": " np.sin(2 * np.pi * 1 * time) + np.sin(2 * np.pi * 2 * time)", "compilation_passed": true, "time": 0.2855551242828369, "tests_passed": true, "error": null}
{"code": " signal[:, None] * np.sin(2 * np.pi * time * signal)", "compilation_passed": true, "time": 0.00931692123413086, "tests_passed": false, "error": "ValueError"}
{"code": " np.cos(2 * np.pi * 60 * time) + np.cos(2 * np.pi * 120 * time)", "compilation_passed": true, "time": 0.4144442081451416, "tests_passed": true, "error": null}
{"code": " np.sin(np.pi * time * signal)", "compilation_passed": true, "time": 0.00852513313293457, "tests_passed": false, "error": "ValueError"}
{"code": " np.sin(20 * 2 * np.pi * time) + np.sin(100 * 2 * np.pi * time) + np.sin(5 * 2 * np.pi * time)", "compilation_passed": true, "time": 0.2459261417388916, "tests_passed": true, "error": null}
{"code": " np.sin(signal * 2 * np.pi * time)", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": false, "error": "ValueError"}
{"code": " np.sin(signal * time) + (signal.reshape(-1, 1) * np.sin(time))", "compilation_passed": true, "time": 0.007610797882080078, "tests_passed": false, "error": "ValueError"}
{"code": " np.cos(signal * time)", "compilation_passed": true, "time": 0.00818777084350586, "tests_passed": false, "error": "ValueError"}
{"code": " np.cos(2 * np.pi * signal * time)", "compilation_passed": true, "time": 0.008206844329833984, "tests_passed": false, "error": "ValueError"}
{"code": " np.cos(2 * np.pi * signal) * np.heaviside(time, 0.5)", "compilation_passed": true, "time": 0.009642839431762695, "tests_passed": false, "error": "ValueError"}
{"code": " signal + np.cos(2 * np.pi * 5 * time) + np.sin(2 * np.pi * 10 * time)", "compilation_passed": true, "time": 0.008312225341796875, "tests_passed": false, "error": "ValueError"}
{"code": " np.cos(np.pi * time) * signal", "compilation_passed": true, "time": 0.008235931396484375, "tests_passed": false, "error": "ValueError"}
{"code": " np.cos(np.pi * time) * signal[:, np.newaxis]", "compilation_passed": true, "time": 1.023097038269043, "tests_passed": false, "error": "TimeoutError"}
{"code": " np.cos(np.pi * 2 * 0.01 * time) * np.exp(4 * time) + 2 * np.cos(", "compilation_passed": false, "time": 0.000247955322265625, "tests_passed": false, "error": "SyntaxError"}
{"code": " np.cos(signal * 2 * np.pi * time)", "compilation_passed": true, "time": 0.008622169494628906, "tests_passed": false, "error": "ValueError"}
{"code": " np.cos(time) + np.cos(4 * time)", "compilation_passed": true, "time": 0.24090909957885742, "tests_passed": true, "error": null}
{"code": " np.sin(signal * time)", "compilation_passed": true, "time": 0.009825706481933594, "tests_passed": false, "error": "ValueError"}
{"code": " np.sin(np.pi * np.outer(time, signal))", "compilation_passed": true, "time": 0.29195094108581543, "tests_passed": true, "error": null}
{"code": " np.sin(time * 100) + np.cos(time * 1000) + np.sin(time * 4000)", "compilation_passed": true, "time": 0.2655758857727051, "tests_passed": true, "error": null}
{"code": " signal * np.cos(2 * np.pi * 120 * time)", "compilation_passed": true, "time": 0.008958101272583008, "tests_passed": false, "error": "ValueError"}
{"code": " signal * np.cos(2 * np.pi * time)", "compilation_passed": true, "time": 0.009282112121582031, "tests_passed": false, "error": "ValueError"}
