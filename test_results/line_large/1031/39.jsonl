{"code": " df[\"String\"].value_counts()", "compilation_passed": true, "time": 0.1877000331878662, "tests_passed": true, "error": null}
{"code": " df[\"String\"].value_counts().head(30)", "compilation_passed": true, "time": 0.19254803657531738, "tests_passed": true, "error": null}
{"code": " df.groupby(\"String\").size().sort_values(ascending=False)[:30]", "compilation_passed": true, "time": 0.206773042678833, "tests_passed": true, "error": null}
{"code": " df.groupby(\"String\").size()", "compilation_passed": true, "time": 0.19593501091003418, "tests_passed": true, "error": null}
{"code": " df.groupby(\"String\")[\"String\"].count().sort_values(ascending=False).head(30)", "compilation_passed": true, "time": 0.20072221755981445, "tests_passed": true, "error": null}
{"code": " df.groupby([\"String\"]).size()", "compilation_passed": true, "time": 0.21784400939941406, "tests_passed": true, "error": null}
{"code": " df[\"String\"].value_counts(sort=True).head(30)", "compilation_passed": true, "time": 0.20774602890014648, "tests_passed": true, "error": null}
{"code": " df[\"String\"].value_counts().nlargest(n=30).sort_values(ascending=False)", "compilation_passed": true, "time": 0.20047473907470703, "tests_passed": true, "error": null}
{"code": " df[\"String\"].value_counts()[:30].sort_values(ascending=True)", "compilation_passed": true, "time": 0.2642841339111328, "tests_passed": true, "error": null}
{"code": " df[\"String\"].value_counts()[:30]", "compilation_passed": true, "time": 0.30616307258605957, "tests_passed": true, "error": null}
{"code": " df.groupby(\"String\").size().sort_values(ascending=False)", "compilation_passed": true, "time": 0.17364001274108887, "tests_passed": true, "error": null}
