{"code": " ols('count ~ C(bins) + C(bins)**2', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.08197188377380371, "tests_passed": false, "error": "KeyError"}
{"code": " ols(f'count ~ np.poly([{num_bins - 1}])', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.06335687637329102, "tests_passed": false, "error": "            ^^^^^^^^^^^^^"}
{"code": " ols(\"count ~ bins + np.square(bins)\", {'count': count, 'bins': bins})", "compilation_passed": true, "time": 0.0639047622680664, "tests_passed": false, "error": "AttributeError"}
{"code": " ols('count ~ np.poly(bins, 2)', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.07265520095825195, "tests_passed": false, "error": "            ^^^^^^^^^^^^^^^^"}
{"code": " ols(f'count ~ np.polyomial(bins, 2)')", "compilation_passed": true, "time": 0.059194087982177734, "tests_passed": false, "error": "TypeError"}
{"code": " ols('count ~ bins + I(bins ** 2)', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.06848621368408203, "tests_passed": false, "error": "KeyError"}
{"code": " ols(\"count ~ np.square(bins) + bins\", {\"count\": count, \"bins\": bins}).fit()", "compilation_passed": true, "time": 0.07409095764160156, "tests_passed": false, "error": "KeyError"}
{"code": " ols('count ~ np.poly(bins, 2)', data={\"count\": count, \"bins\": bins})", "compilation_passed": true, "time": 0.06320905685424805, "tests_passed": false, "error": "            ^^^^^^^^^^^^^^^^"}
{"code": " ols(\"count ~ bins + np.power(bins, 2)\", {\"count\": count, \"bins\": bins}).fit()", "compilation_passed": true, "time": 0.2926361560821533, "tests_passed": true, "error": null}
{"code": " ols('count ~ np.power(bins, 1) + np.power(bins, 2)', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.07229065895080566, "tests_passed": false, "error": "KeyError"}
{"code": " ols('count ~ C(bins) + C(bins)^2', {'count':count, 'bins':bins}).fit()", "compilation_passed": true, "time": 0.059983015060424805, "tests_passed": false, "error": "                      ^^^^^^^^^"}
{"code": " ols(", "compilation_passed": false, "time": 0.0003719329833984375, "tests_passed": false, "error": "SyntaxError"}
{"code": " ols('count ~ np.poly(bins, degree=2)')", "compilation_passed": true, "time": 0.05630183219909668, "tests_passed": false, "error": "TypeError"}
{"code": " ols(\"count~bins\",{\"count\":count, \"bins\":bins}).fit()", "compilation_passed": true, "time": 0.06580114364624023, "tests_passed": false, "error": "KeyError"}
{"code": " ols(\"count ~ np.power(bins, 1) + np.power(bins, 2)\", {\"count\": count, \"bins\": bins}).fit()", "compilation_passed": true, "time": 0.06852102279663086, "tests_passed": false, "error": "KeyError"}
{"code": " ols(\"count ~ np.poly(bins, deg=2)\", {\"count\": count, \"bins\": bins}).fit()", "compilation_passed": true, "time": 0.06646299362182617, "tests_passed": false, "error": "            ^^^^^^^^^^^^^^^^^^^^"}
{"code": " ols(\"count~bins+np.square(bins)\", {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.06960773468017578, "tests_passed": false, "error": "KeyError"}
{"code": " ols('count ~ bins + I(bins**2)', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.07156610488891602, "tests_passed": false, "error": "KeyError"}
{"code": " ols(f'count ~ C(bins) + I(C(bins)**2)', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.06412291526794434, "tests_passed": false, "error": "                      ^^^^^^^^^^^^^"}
{"code": " ols(f\"count ~ np.polyomial(bins, [2])\",", "compilation_passed": false, "time": 0.0003418922424316406, "tests_passed": false, "error": "SyntaxError"}
{"code": " ols('count ~ np.power(bins, 1) + np.power(bins, 2)', {'count': count, 'bins': bins})", "compilation_passed": true, "time": 0.06069016456604004, "tests_passed": false, "error": "AttributeError"}
{"code": " ols('count ~ np.poly(bins, 2)').fit(", "compilation_passed": false, "time": 0.00042700767517089844, "tests_passed": false, "error": "SyntaxError"}
{"code": " ols('count ~ C(bins) + np.power(C(bins), 2)')", "compilation_passed": true, "time": 0.05666303634643555, "tests_passed": false, "error": "TypeError"}
{"code": " ols('count ~ C(bins) + C(bins)^2', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.059303998947143555, "tests_passed": false, "error": "                      ^^^^^^^^^"}
{"code": " ols('count ~ np.poly([bins, bins**2])')", "compilation_passed": true, "time": 0.06009078025817871, "tests_passed": false, "error": "TypeError"}
{"code": " ols(\"count ~ np.log10(bins) + np.log10(bins)**2\", {\"count\": count, \"bins\": bins}).fit()", "compilation_passed": true, "time": 0.07714200019836426, "tests_passed": false, "error": "KeyError"}
{"code": " ols('count ~ np.log(bins) + I(np.log(bins) ** 2)')", "compilation_passed": true, "time": 0.06073713302612305, "tests_passed": false, "error": "TypeError"}
{"code": " ols(f'count ~ C(bins) + I(bins**2)', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.07410097122192383, "tests_passed": false, "error": "KeyError"}
{"code": " ols('count ~ bins + np.power(bins, 2)', {'count': count, 'bins': bins}).fit()", "compilation_passed": true, "time": 0.3162119388580322, "tests_passed": true, "error": null}
