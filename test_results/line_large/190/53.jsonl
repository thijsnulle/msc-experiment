{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([\"?\" for _ in cols])})', [v for v in row.values()])", "compilation_passed": true, "time": 0.02577495574951172, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join(map(lambda x: \"?\", row.values()))})', list(row.values()))", "compilation_passed": true, "time": 0.030582189559936523, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([\"?\"] * len(cols))})', tuple(row.values()))", "compilation_passed": true, "time": 0.026362895965576172, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join(['?' for _ in range(len(cols))])})\", tuple(row.values()))", "compilation_passed": true, "time": 0.025784730911254883, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} ({\", \".join(cols)}) VALUES ({\", \".join([\"?\" for _ in cols])})', tuple(row.values()))", "compilation_passed": true, "time": 0.02490711212158203, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"?\" for _ in cols])})', list(row.values()))", "compilation_passed": true, "time": 0.0244901180267334, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} ({\", \".join(cols)}) VALUES ({\", \".join(map(lambda v: \"?\", cols))})', tuple(row.values()))", "compilation_passed": true, "time": 0.024039030075073242, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"\\'{val}\\'\" for val in row.values()])})')", "compilation_passed": false, "time": 0.0004229545593261719, "tests_passed": false, "error": "SyntaxError"}
{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"?\" for _ in cols])})', tuple(row.values()))", "compilation_passed": true, "time": 0.025215864181518555, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join(['?' for _ in cols])})\", tuple(row.values()))", "compilation_passed": true, "time": 0.02468705177307129, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([\"?\" for _ in cols])})', tuple(row.values()))", "compilation_passed": true, "time": 0.025001049041748047, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} ({\", \".join(cols)}) VALUES ({\", \".join([f\"?\" for _ in cols])})', tuple(row.values()))", "compilation_passed": true, "time": 0.024855852127075195, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} ({\", \".join(cols)}) VALUES ({\", \".join([\"?\"]*len(cols))})', list(row.values()))", "compilation_passed": true, "time": 0.02714371681213379, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join(['?'] * len(row))})\", list(row.values()))", "compilation_passed": true, "time": 0.0256650447845459, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} ({', '.join(cols)}) VALUES ({', '.join(['?' for _ in cols])})\",", "compilation_passed": false, "time": 0.0003688335418701172, "tests_passed": false, "error": "SyntaxError"}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join(['?' for col in cols])})\",", "compilation_passed": false, "time": 0.00045490264892578125, "tests_passed": false, "error": "SyntaxError"}
{"code": "execute(f'INSERT INTO {TABLE_NAME} ({\", \".join(cols)}) VALUES ({\", \".join([\"?\" for _ in range(len(cols))])})', [val for val in row.values()])", "compilation_passed": true, "time": 0.02932000160217285, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} ({', '.join(cols)}) VALUES ({', '.join(['?' for col in cols])})\", tuple(row.values()))", "compilation_passed": true, "time": 0.02475118637084961, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join(['?'] * len(cols))})\", tuple(row.values()))", "compilation_passed": true, "time": 0.026282787322998047, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join(['?'] * len(cols))})\", list(row.values()))", "compilation_passed": true, "time": 0.03052687644958496, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join(['?' for _ in cols])})\", list(row.values()))", "compilation_passed": true, "time": 0.026130199432373047, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"?\" for _ in range(len(cols))])})',", "compilation_passed": false, "time": 0.00035190582275390625, "tests_passed": false, "error": "SyntaxError"}
{"code": "execute(f'INSERT INTO {TABLE_NAME} ({\",\".join(cols)}) VALUES ({\",\".join([\"?\"]*len(cols))})', tuple(row.values()))", "compilation_passed": true, "time": 0.025455951690673828, "tests_passed": true, "error": null}
{"code": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join(['?' for _ in cols])})\", [str(value) for value in row.values()])", "compilation_passed": true, "time": 0.0243990421295166, "tests_passed": true, "error": null}
{"code": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([\"?\"]*len(cols))})', tuple(row.values()))", "compilation_passed": true, "time": 0.024519920349121094, "tests_passed": true, "error": null}
