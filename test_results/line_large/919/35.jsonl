{"code": " df[column].value_counts(sort=False)", "compilation_passed": true, "time": 0.039118051528930664, "tests_passed": true, "error": null}
{"code": " df[column].value_counts(dropna=False)", "compilation_passed": true, "time": 0.04081010818481445, "tests_passed": true, "error": null}
{"code": " df[column].value_counts()", "compilation_passed": true, "time": 0.042738914489746094, "tests_passed": true, "error": null}
{"code": " {cat: (data[column].count(cat) if cat in data[column] else 0) for cat in CATEGORIES}", "compilation_passed": true, "time": 0.015601873397827148, "tests_passed": false, "error": "AttributeError"}
{"code": " df[column].value_counts(sort=False, normalize=False)", "compilation_passed": true, "time": 0.042807817459106445, "tests_passed": true, "error": null}
{"code": " df.set_index(column).loc[CATEGORIES].value_counts(normalize=True)", "compilation_passed": true, "time": 0.036103010177612305, "tests_passed": false, "error": "ValueError"}
{"code": " dict.fromkeys(CATEGORIES, 0)", "compilation_passed": true, "time": 0.015430212020874023, "tests_passed": false, "error": "AttributeError"}
{"code": " dict(df[column].value_counts())", "compilation_passed": true, "time": 0.016162872314453125, "tests_passed": false, "error": "AttributeError"}
{"code": " df.loc[df[column].isin(CATEGORIES)][column].value_counts().reindex(CATEGORIES).fillna(0).astype(int)", "compilation_passed": true, "time": 0.04948902130126953, "tests_passed": true, "error": null}
{"code": " {}", "compilation_passed": true, "time": 0.015459299087524414, "tests_passed": false, "error": "AttributeError"}
{"code": " {cat: sum(df[column] == cat) for cat in CATEGORIES}", "compilation_passed": true, "time": 0.01645374298095703, "tests_passed": false, "error": "AttributeError"}
{"code": " {category: 0 for category in CATEGORIES}", "compilation_passed": true, "time": 0.015572071075439453, "tests_passed": false, "error": "AttributeError"}
{"code": " [df[column].value_counts()[category] if category in df[column].value_counts() else 0 for category in CATEGORIES]", "compilation_passed": true, "time": 0.019201993942260742, "tests_passed": false, "error": "TypeError"}
{"code": " {category: df[column].value_counts()[category] if category in df[column].value_counts() else 0 for category in CATEGORIES}", "compilation_passed": true, "time": 0.019595861434936523, "tests_passed": false, "error": "AttributeError"}
