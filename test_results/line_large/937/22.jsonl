{"code": " re.sub(r'\\W+', '', input_str)  # Remove special characters", "compilation_passed": true, "time": 0.009182214736938477, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^a-zA-Z0-9]', '', input_str).lower()", "compilation_passed": true, "time": 0.002774953842163086, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^\\w]', '', input_str.lower())", "compilation_passed": true, "time": 0.0018322467803955078, "tests_passed": true, "error": null}
{"code": " re.sub('[^a-zA-Z0-9]', '', input_str).lower()", "compilation_passed": true, "time": 0.0027892589569091797, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W', '', input_str)", "compilation_passed": true, "time": 0.009285926818847656, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()", "compilation_passed": true, "time": 0.002782106399536133, "tests_passed": true, "error": null}
{"code": " re.sub(r\"[\\W_]+\", '', input_str.lower()) # Remove all non-alphanumeric characters, including spaces and underscores", "compilation_passed": true, "time": 0.0029757022857666016, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W+', '', input_str) # Remove non-alphanumeric characters and spaces", "compilation_passed": true, "time": 0.00927877426147461, "tests_passed": true, "error": null}
{"code": " re.sub(r\"\\W\", \"\", input_str.lower())", "compilation_passed": true, "time": 0.0028290748596191406, "tests_passed": true, "error": null}
{"code": " re.sub('[^a-zA-Z0-9]+', '', input_str).lower()", "compilation_passed": true, "time": 0.0027992725372314453, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^\\w]', '', input_str)", "compilation_passed": true, "time": 0.00913381576538086, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W', '', input_str).lower()", "compilation_passed": true, "time": 0.002811908721923828, "tests_passed": true, "error": null}
{"code": " ''.join(filter(str.isalnum, input_str)).lower()", "compilation_passed": true, "time": 0.002789020538330078, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W+', '', input_str)", "compilation_passed": true, "time": 0.00923609733581543, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W', '', input_str.lower())", "compilation_passed": true, "time": 0.0028231143951416016, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^a-zA-Z0-9]', '', input_str)", "compilation_passed": true, "time": 0.008771896362304688, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^A-Za-z0-9]+', '', input_str)", "compilation_passed": true, "time": 0.00915384292602539, "tests_passed": true, "error": null}
{"code": " ''.join(re.findall(r'\\w+', input_str)).lower()", "compilation_passed": true, "time": 0.002950906753540039, "tests_passed": true, "error": null}
{"code": " ''.join(re.findall('[a-zA-Z0-9]+', input_str)).lower()", "compilation_passed": true, "time": 0.003032207489013672, "tests_passed": true, "error": null}
{"code": " re.sub(r'\\W+', '', input_str.lower())", "compilation_passed": true, "time": 0.002816915512084961, "tests_passed": true, "error": null}
{"code": " re.sub(r'[^\\w\\s]', '', input_str).replace(' ', '').lower()", "compilation_passed": true, "time": 0.00292205810546875, "tests_passed": true, "error": null}
{"code": " re.sub('[^a-zA-Z0-9]', '', input_str.lower())", "compilation_passed": true, "time": 0.002816915512084961, "tests_passed": true, "error": null}
