{"code": " [float(val) for val in column if isinstance(val, (str, float, int))]", "compilation_passed": true, "time": 0.0016851425170898438, "tests_passed": false, "error": "ValueError"}
{"code": " np.array([val for val in column if isinstance(val, (int, float))])", "compilation_passed": true, "time": 0.001081705093383789, "tests_passed": false, "error": "ValueError"}
{"code": " [float(value) for value in column if str(value).replace('.', '', 1).isdigit()]", "compilation_passed": true, "time": 0.0018413066864013672, "tests_passed": true, "error": null}
{"code": " [val for val in column if isinstance(val, (int, float))]", "compilation_passed": true, "time": 0.0018439292907714844, "tests_passed": true, "error": null}
{"code": " [float(value) for value in column if not np.isnan(value)]", "compilation_passed": true, "time": 0.0015139579772949219, "tests_passed": false, "error": "TypeError"}
{"code": " [value for value in column if isinstance(value, (int, float))]", "compilation_passed": true, "time": 0.0018329620361328125, "tests_passed": true, "error": null}
{"code": " np.array([np.nan if isinstance(element, str) else element for element in column])", "compilation_passed": true, "time": 0.0010919570922851562, "tests_passed": false, "error": "ValueError"}
{"code": " [float(value) if isinstance(value, (float, int)) else np.nan for value in column]", "compilation_passed": true, "time": 0.001744985580444336, "tests_passed": true, "error": null}
{"code": " [val for val in column if isinstance(val, (float, int))]", "compilation_passed": true, "time": 0.0017800331115722656, "tests_passed": true, "error": null}
{"code": " [val for val in column if str(val).replace('.', '', 1).isdigit() or val is np.nan]", "compilation_passed": true, "time": 0.0019099712371826172, "tests_passed": true, "error": null}
{"code": " np.array(column, dtype=float)", "compilation_passed": true, "time": 0.0011451244354248047, "tests_passed": false, "error": "ValueError"}
{"code": " [float(val) for val in column if isinstance(val, (int, float)) or str(val).replace('.', '', 1).isdigit()]", "compilation_passed": true, "time": 0.0019178390502929688, "tests_passed": true, "error": null}
{"code": " [float(x) for x in column if str(x).replace('.','',1).isdigit()]", "compilation_passed": true, "time": 0.0018079280853271484, "tests_passed": true, "error": null}
{"code": " np.array(column)", "compilation_passed": true, "time": 0.0011267662048339844, "tests_passed": false, "error": "ValueError"}
{"code": " [x for x in column if isinstance(x, (int, float))]", "compilation_passed": true, "time": 0.0018031597137451172, "tests_passed": true, "error": null}
{"code": " [item for item in column if isinstance(item, (int, float))]", "compilation_passed": true, "time": 0.001875162124633789, "tests_passed": true, "error": null}
{"code": " [float(val) for val in column if isinstance(val, (float, int))]", "compilation_passed": true, "time": 0.0018770694732666016, "tests_passed": true, "error": null}
{"code": " []", "compilation_passed": true, "time": 0.0015261173248291016, "tests_passed": true, "error": null}
{"code": " np.asarray(column).astype(np.float64)", "compilation_passed": true, "time": 0.0010859966278076172, "tests_passed": false, "error": "ValueError"}
{"code": " [value for value in column if isinstance(value, (float, int))]", "compilation_passed": true, "time": 0.0018172264099121094, "tests_passed": true, "error": null}
