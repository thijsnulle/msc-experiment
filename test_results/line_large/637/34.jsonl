{"code": " 'Alice Bob Charlie David Eric Florence Gael'.split()", "compilation_passed": true, "time": 0.0010859966278076172, "tests_passed": false, "error": "ValueError"}
{"code": " ['Anna', 'John', 'Mary', 'Bob', 'Alice', 'Steve', 'Nick', 'Alina', 'Maks', 'Alex',", "compilation_passed": false, "time": 0.00016307830810546875, "tests_passed": false, "error": "SyntaxError"}
{"code": " [", "compilation_passed": false, "time": 0.0001380443572998047, "tests_passed": false, "error": "SyntaxError"}
{"code": " [chr(i + 97) for i in range(26)]", "compilation_passed": true, "time": 0.03178906440734863, "tests_passed": false, "error": "ValueError"}
{"code": " [chr(i) for i in range(65, 91)]", "compilation_passed": true, "time": 0.032259225845336914, "tests_passed": false, "error": "ValueError"}
{"code": " [\"John\", \"Alice\", \"Bob\", \"David\", \"Carol\", \"Mike\", \"Karen\", \"Tom\", \"Sarah\", \"Daniel\", \"Emma\", \"Olivia\",", "compilation_passed": false, "time": 0.0001678466796875, "tests_passed": false, "error": "SyntaxError"}
{"code": " 'A B C D E F G H I J K L M N O P Q R S T U V W X Y Z'.split()", "compilation_passed": true, "time": 0.032614946365356445, "tests_passed": false, "error": "ValueError"}
{"code": " ['Alice', 'Bob', 'Charlie', 'Dave', 'Eve', 'Frank', 'Grace', 'Henry', 'Ivan', 'Jack', 'Kate', 'Liam', 'Mary',", "compilation_passed": false, "time": 0.00015783309936523438, "tests_passed": false, "error": "SyntaxError"}
{"code": " [chr(i) for i in range(65, 65+num_students)]", "compilation_passed": true, "time": 0.1673891544342041, "tests_passed": true, "error": null}
{"code": " [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Emily\", \"Frank\", \"Grace\", \"Henry\", \"Isabel\", \"Jack\"]", "compilation_passed": true, "time": 0.04335904121398926, "tests_passed": false, "error": "ValueError"}
{"code": " ['Alice', 'Bob', 'Charlie', 'Dave', 'Eve', 'Frank', 'Grace', 'Hope', 'Irene', 'Jack', 'Kate', 'Lily', 'Mike', 'Nina', 'Oscar', 'Pete', 'Quinn', 'Ruth', 'Sarah', 'Tom', 'Ursula', 'Victor', 'Wendy', 'Xavier', 'Yara', 'Zack']", "compilation_passed": true, "time": 0.04282808303833008, "tests_passed": false, "error": "ValueError"}
{"code": " list(range(10))", "compilation_passed": true, "time": 0.03261590003967285, "tests_passed": false, "error": "ValueError"}
{"code": " ['Student {}'.format(i) for i in range(1, num_students+1)]", "compilation_passed": true, "time": 0.15850496292114258, "tests_passed": true, "error": null}
{"code": " (", "compilation_passed": false, "time": 0.00013589859008789062, "tests_passed": false, "error": "SyntaxError"}
{"code": " ('Ann', 'Bob', 'Eve', 'Sam', 'Ted', 'Alex', 'Olga', 'Alisa', 'Tanya', 'Tamara')", "compilation_passed": true, "time": 0.03329801559448242, "tests_passed": false, "error": "ValueError"}
{"code": " [f'student_{i+1}' for i in range(num_students)]", "compilation_passed": true, "time": 0.15636301040649414, "tests_passed": true, "error": null}
{"code": " [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\", \"Frank\", \"Grace\", \"Henry\", \"Irene\", \"Jack\", \"Karen\", \"Leonard\", \"Martha\", \"Nancy\", \"Oscar\", \"Peggy\", \"Quinn\", \"Roger\", \"Sarah\", \"Tom\", \"Ursula\", \"Victor\", \"Wendy\", \"Xavier\", \"Yvonne\", \"Zack\"]", "compilation_passed": true, "time": 0.03421187400817871, "tests_passed": false, "error": "ValueError"}
{"code": " ['student_' + str(i) for i in range(100)]", "compilation_passed": true, "time": 0.15811920166015625, "tests_passed": true, "error": null}
{"code": " [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"]", "compilation_passed": true, "time": 0.0010590553283691406, "tests_passed": false, "error": "ValueError"}
{"code": " (\"Abe\", \"Bob\", \"Charlie\", \"Dennis\", \"Edina\", \"Fiona\",", "compilation_passed": false, "time": 0.00015425682067871094, "tests_passed": false, "error": "SyntaxError"}
{"code": " [\"Alice\", \"Bob\", \"Carol\", \"David\", \"Eve\", \"Frank\", \"Grace\", \"Heidi\", \"Ivan\", \"Jack\"]", "compilation_passed": true, "time": 0.032958984375, "tests_passed": false, "error": "ValueError"}
{"code": " [chr(i) for i in range(ord('A'), ord('Z') + 1)]", "compilation_passed": true, "time": 0.0326080322265625, "tests_passed": false, "error": "ValueError"}
{"code": " list(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")", "compilation_passed": true, "time": 0.03358101844787598, "tests_passed": false, "error": "ValueError"}
{"code": " \"Student\" + \" \" + \"\"", "compilation_passed": true, "time": 0.001039266586303711, "tests_passed": false, "error": "ValueError"}
{"code": " ['Student_{}'.format(str(x + 1).zfill(2)) for x in range(100)]", "compilation_passed": true, "time": 0.18129897117614746, "tests_passed": true, "error": null}
