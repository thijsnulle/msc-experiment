{"code": "try:\n        if os.path.isdir(directory):\n            filenames = os.listdir(directory)\n            for file in filenames:\n                if pattern in file:\n                    new_file = re.sub(pattern, replacement, file)\n                    os.rename(directory + '/' + file, directory + '/' + new_file)\n            return True\n        return False\n    except Exception as e:\n        print(f\"Error occurred during file renaming: {e}\")", "compilation_passed": true, "time": 0.0029211044311523438, "tests_passed": true, "error": null}
{"code": "files = os.listdir(directory)\n    if len(files) == 0:\n        return False\n    for filename in files:\n        if re.search(pattern, filename):\n            os.rename(os.path.join(directory, filename),\n                      os.path.join(directory, filename.replace(pattern, replacement)))\n    return True", "compilation_passed": true, "time": 0.0016529560089111328, "tests_passed": true, "error": null}
{"code": "try:\n        files = os.listdir(directory)\n        files = [f for f in files if re.match(pattern, os.path.basename(f))]\n        for filename in files:\n            os.rename(os.path.join(directory, filename), os.path.join(directory, filename.replace(pattern, replacement)))\n        return True\n    except FileNotFoundError:\n        return False", "compilation_passed": true, "time": 0.0016162395477294922, "tests_passed": true, "error": null}
{"code": "files = os.listdir(directory)\n    if pattern not in files:\n        return False\n    for file in files:\n        if file.endswith('.pdf'):\n            filename = file.replace(pattern, replacement)\n            if filename != file:\n                os.rename(file, filename)\n                print(\"Renamed file:\", file, \"->\", filename)\n    return True", "compilation_passed": true, "time": 0.0012171268463134766, "tests_passed": true, "error": null}
{"code": "# TODO: Implement the task functionality here\n    # You should return a boolean value indicating whether the operation was successful\n\n    file_list = os.listdir(directory)\n    for file in file_list:\n        if re.search(pattern, file):\n            os.rename(os.path.join(directory, file), os.path.join(directory, file.replace(pattern, replacement)))\n    return True", "compilation_passed": true, "time": 0.002185344696044922, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        pattern_regex = re.compile(pattern)\n        for filename in os.listdir(directory):\n            if pattern_regex.search(filename):\n                os.rename(os.path.join(directory, filename), os.path.join(directory, pattern_regex.sub(replacement, filename)))\n        return True\n    except FileNotFoundError:\n        return False", "compilation_passed": true, "time": 0.0028989315032958984, "tests_passed": true, "error": null}
{"code": "result = False\n    for filename in os.listdir(directory):\n        if re.search(pattern, filename):\n            new_filename = re.sub(pattern, replacement, filename)\n            print(f'Renaming: {filename} to {new_filename}')\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n            result = True\n    return result", "compilation_passed": true, "time": 0.0016679763793945312, "tests_passed": true, "error": null}
{"code": "file_list = [f for f in os.listdir(directory) if re.search(pattern, f)]\n    for file in file_list:\n        os.rename(os.path.join(directory, file), os.path.join(directory, re.sub(pattern, replacement, file)))\n    return True", "compilation_passed": true, "time": 0.0023338794708251953, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        pattern_regex = re.compile(pattern)\n\n        for filename in os.listdir(directory):\n            if pattern_regex.search(filename):\n                new_filename = filename.replace(pattern, replacement)\n                os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n        return True\n    except Exception as e:\n        print(e)\n        return False", "compilation_passed": true, "time": 0.003387928009033203, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        return False\n\n    file_names = os.listdir(directory)\n    for file_name in file_names:\n        if re.match(pattern, file_name):\n            os.rename(\n                os.path.join(directory, file_name),\n                os.path.join(directory, f\"{replacement}{file_name[len(pattern):]}\"),\n            )\n    return True", "compilation_passed": true, "time": 0.001547098159790039, "tests_passed": true, "error": null}
{"code": "files = os.listdir(directory)\n    for file in files:\n        if re.search(pattern, file) and os.path.isfile(os.path.join(directory, file)):\n            os.rename(os.path.join(directory, file), re.sub(pattern, replacement, os.path.join(directory, file)))\n    return True", "compilation_passed": true, "time": 0.0021970272064208984, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        file_list = os.listdir(directory)\n        for file in file_list:\n            if re.search(pattern, file):\n                os.rename(os.path.join(directory, file), os.path.join(directory, re.sub(pattern, replacement, file)))\n        return True\n    except FileNotFoundError:\n        return False", "compilation_passed": true, "time": 0.003118753433227539, "tests_passed": true, "error": null}
{"code": "file_names = os.listdir(directory)\n    for file_name in file_names:\n        if re.search(pattern, file_name):\n            os.rename(\n                os.path.join(directory, file_name),\n                os.path.join(directory, re.sub(pattern, replacement, file_name)))\n    return True", "compilation_passed": true, "time": 0.002469301223754883, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "filenames = os.listdir(directory)\n    for filename in filenames:\n        if re.search(pattern, filename):\n            new_name = re.sub(pattern, replacement, filename)\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_name))\n            return True\n    return False", "compilation_passed": true, "time": 0.1783292293548584, "tests_passed": true, "error": null}
{"code": "try:\n        os.makedirs(directory, exist_ok=True)\n        matches = [file for file in os.listdir(directory) if re.search(pattern, file)]\n\n        for match in matches:\n            os.rename(os.path.join(directory, match),\n                      os.path.join(directory, match.replace(pattern, replacement)))\n\n        return True\n    except:\n        return False", "compilation_passed": true, "time": 0.0031480789184570312, "tests_passed": true, "error": null}
{"code": "try:\n        with os.scandir(directory) as scandir:\n            for entry in scandir:\n                if entry.is_file():  # and '.py' in entry.name:\n                    new_name = re.sub(pattern, replacement, entry.name)\n                    os.rename(entry.path, os.path.join(directory, new_name))\n    except FileNotFoundError as fnfe:\n        print(f\"Error: {fnfe.strerror}\")\n    except PermissionError as perm_err:\n        print(f\"Error: {perm_err.strerror}\")\n    except NotADirectoryError as ndir:\n        print(f\"Error: {ndir.strerror}\")\n    except IsADirectoryError as iadr:\n        print(f\"Error: {iadr.strerror}\")\n    return True", "compilation_passed": true, "time": 0.002483844757080078, "tests_passed": true, "error": null}
{"code": "match_count = 0\n    for filename in os.listdir(directory):\n        if re.search(pattern, filename):\n            match_count += 1\n            new_filename = re.sub(pattern, replacement, filename)\n            os.rename(filename, new_filename)\n    return match_count > 0", "compilation_passed": true, "time": 0.001219034194946289, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "pattern = re.compile(pattern)\n    matches = []\n\n    for filename in os.listdir(directory):\n        if pattern.search(filename):\n            matches.append(filename)\n\n    if not matches:\n        return False\n\n    for match in matches:\n        new_name = pattern.sub(replacement, match)\n        old_path = os.path.join(directory, match)\n        new_path = os.path.join(directory, new_name)\n        os.rename(old_path, new_path)\n\n    return True", "compilation_passed": true, "time": 0.001600027084350586, "tests_passed": true, "error": null}
{"code": "pattern = re.compile(pattern)\n    result = False\n    files_to_rename = [f for f in os.listdir(directory) if pattern.search(f)]\n\n    if not files_to_rename:\n        return result\n\n    for file in files_to_rename:\n        new_filename = pattern.sub(replacement, file)\n        new_filepath = os.path.join(directory, new_filename)\n        os.rename(os.path.join(directory, file), new_filepath)\n        result = True\n    return result", "compilation_passed": true, "time": 0.0016291141510009766, "tests_passed": true, "error": null}
{"code": "files = [\n        os.path.join(root, file_)\n        for root, _, files_ in os.walk(directory)\n        for file_ in files\n    ]\n    matches = list(filter(lambda file_: re.search(pattern, file_), files))\n    if matches:\n        os.renames(*matches)\n        return True\n    return False", "compilation_passed": true, "time": 0.0012259483337402344, "tests_passed": false, "error": "NameError"}
{"code": "file_list = [f for f in os.listdir(directory)]\n    count = 0\n    for f in file_list:\n        if re.search(pattern, f):\n            new_name = f.replace(pattern, replacement)\n            os.rename(os.path.join(directory, f), os.path.join(directory, new_name))\n            count += 1\n    if count > 0:\n        print(f\"{count} file{'s' if count > 1 else ''} renamed.\")\n    else:\n        print(\"No files found to rename.\")\n    return count > 0", "compilation_passed": true, "time": 0.0016460418701171875, "tests_passed": true, "error": null}
{"code": "for filename in os.listdir(directory):\n        match = re.match(pattern, filename)\n        if match:\n            new_filename = filename.replace(pattern, replacement)\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n    return True", "compilation_passed": true, "time": 0.0014829635620117188, "tests_passed": true, "error": null}
{"code": "try:\n        if not pattern or not replacement or not directory:\n            raise ValueError(\"All arguments must be provided.\")\n\n        if not re.compile(pattern):\n            raise ValueError(\"Invalid pattern.\")\n\n        if not os.path.exists(directory):\n            raise FileNotFoundError(\"Directory not found.\")\n\n        if not os.path.isdir(directory):\n            raise TypeError(\"Not a directory.\")\n\n        for filename in os.listdir(directory):\n            filepath = os.path.join(directory, filename)\n            if re.search(pattern, filename):\n                os.rename(filepath, filepath.replace(pattern, replacement))\n    except Exception as e:\n        print(f\"Error: {e}\")\n        return False\n    else:\n        print(\"Success.\")\n        return True", "compilation_passed": true, "time": 0.003014802932739258, "tests_passed": true, "error": null}
{"code": "try:\n        os.makedirs(directory, exist_ok=True)\n        for filename in os.listdir(directory):\n            file = os.path.join(directory, filename)\n            if os.path.isfile(file):\n                new_name = re.sub(pattern, replacement, filename)\n                new_file = os.path.join(directory, new_name)\n                os.rename(file, new_file)\n        return True\n    except:\n        return False", "compilation_passed": true, "time": 0.0030870437622070312, "tests_passed": true, "error": null}
{"code": "pattern = re.compile(pattern)\n    files = [f for f in os.listdir(directory) if pattern.search(f)]\n    if len(files) == 0:\n        return False\n    else:\n        for file in files:\n            new_file = pattern.sub(replacement, file)\n            os.rename(os.path.join(directory, file), os.path.join(directory, new_file))\n        return True", "compilation_passed": true, "time": 0.0016248226165771484, "tests_passed": true, "error": null}
{"code": "for filename in os.listdir(directory):\n        if re.search(pattern, filename):\n            new_filename = re.sub(pattern, replacement, filename)\n            os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))\n    return True", "compilation_passed": true, "time": 0.0021309852600097656, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "try:\n        pattern = re.compile(pattern)\n        for filename in os.listdir(directory):\n            if pattern.match(filename):\n                new_name = pattern.sub(replacement, filename)\n                os.rename(os.path.join(directory, filename), os.path.join(directory, new_name))\n        return True\n    except:\n        return False", "compilation_passed": true, "time": 0.0018858909606933594, "tests_passed": true, "error": null}
{"code": "try:\n        for filename in os.listdir(directory):\n            if re.search(pattern, filename):\n                os.rename(filename, filename.replace(pattern, replacement))\n        return True\n    except FileNotFoundError:\n        print(f\"Directory {directory} does not exist.\")\n    except PermissionError:\n        print(f\"Permission denied: {directory}.\")\n    except (OSError, ValueError, re.error) as error:\n        print(f\"An error occurred: {error}\")\n    return False", "compilation_passed": true, "time": 0.0014698505401611328, "tests_passed": true, "error": null}
{"code": "try:\n        file_list = os.listdir(directory)\n        pattern_regex = re.compile(pattern)\n\n        for filename in file_list:\n            if pattern_regex.search(filename):\n                new_filename = filename.replace(pattern, replacement)\n                os.rename(filename, new_filename)\n\n        return True\n    except Exception as e:\n        print(\"An error occurred while renaming files:\", str(e))\n        return False", "compilation_passed": true, "time": 0.0013570785522460938, "tests_passed": true, "error": null}
{"code": "pattern = re.compile(pattern)\n    for filename in os.listdir(directory):\n        if pattern.search(filename):\n            new_filename = filename.replace(pattern.group(), replacement)\n            os.rename(filename, new_filename)\n    return True", "compilation_passed": true, "time": 0.0013151168823242188, "tests_passed": false, "error": "AttributeError"}
