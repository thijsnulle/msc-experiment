{"code": "with open(os.path.join(output_dir, filename), 'w') as f:\n        f.write(df.to_json(orient='records'))\n\n    return os.path.join(output_dir, filename)", "compilation_passed": true, "time": 0.0028619766235351562, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(output_dir):\n        os.mkdir(output_dir)\n\n    file_path = os.path.join(output_dir, filename)\n    df.to_json(file_path, orient='records')\n    return file_path", "compilation_passed": true, "time": 0.0030870437622070312, "tests_passed": true, "error": null}
{"code": "file_path = os.path.join(output_dir, filename)\n    df.to_json(file_path)\n    return file_path", "compilation_passed": true, "time": 0.0013890266418457031, "tests_passed": true, "error": null}
{"code": "filepath = os.path.join(output_dir, filename)\n    df.to_json(filepath)\n    return filepath", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}
{"code": "df.to_json(f'{output_dir}/{filename}', orient='records')\n\n    return f'{output_dir}/{filename}'", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}
{"code": "data_path = os.path.join(output_dir, filename)\n    pd.DataFrame(df).to_json(data_path)\n    return data_path", "compilation_passed": true, "time": 0.0014638900756835938, "tests_passed": true, "error": null}
{"code": "full_path = os.path.join(output_dir, filename)\n    df.to_json(full_path, orient=\"records\")\n    return full_path", "compilation_passed": true, "time": 0.0029871463775634766, "tests_passed": true, "error": null}
{"code": "filepath = os.path.join(output_dir, filename)\n    df.to_json(filepath, orient='records')\n    return filepath", "compilation_passed": true, "time": 0.0028400421142578125, "tests_passed": true, "error": null}
{"code": "file_path = os.path.join(output_dir, filename)\n    df.to_json(file_path, indent=True)\n    return file_path", "compilation_passed": true, "time": 0.0014140605926513672, "tests_passed": true, "error": null}
{"code": "df.to_json(filename, orient='records')\n    return output_dir + '/' + filename", "compilation_passed": true, "time": 0.0012879371643066406, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create the output directory if it doesn't exist\n    if not os.path.isdir(output_dir):\n        os.makedirs(output_dir)\n\n    # Save the DataFrame to a JSON file\n    with open(os.path.join(output_dir, filename), 'w') as f:\n        df.to_json(f, orient='records')\n\n    return os.path.join(output_dir, filename)", "compilation_passed": true, "time": 0.0028340816497802734, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(output_dir):\n        os.makedirs(output_dir)\n    path = os.path.join(output_dir, filename)\n    df.to_json(path)\n    return path", "compilation_passed": true, "time": 0.0013589859008789062, "tests_passed": true, "error": null}
{"code": "\"\"\"\n    The task_func function creates a directory called output if it does not exist.\n    If the directory already exists, the function does not create it again.\n\n    If the directory does not exist, it creates a JSON file in the specified directory\n    and saves the DataFrame as the content.\n    \"\"\"\n    if not os.path.isdir(output_dir):\n        os.mkdir(output_dir)\n    filename = os.path.join(output_dir, filename)\n    df.to_json(filename, orient='records')\n    return filename", "compilation_passed": true, "time": 0.002744913101196289, "tests_passed": true, "error": null}
{"code": "if os.path.exists(output_dir) is False:\n        os.makedirs(output_dir)\n    with open(os.path.join(output_dir, filename), 'w') as f:\n        f.write(json.dumps(df.to_dict(orient='records'), indent=4, cls=DumpJSONEncoder))\n    return os.path.join(output_dir, filename)", "compilation_passed": true, "time": 0.001461029052734375, "tests_passed": false, "error": "NameError"}
{"code": "# Define the output path based on the file name\n    full_path = os.path.join(output_dir, filename)\n\n    # Save the DataFrame as a JSON file\n    df.to_json(full_path)\n\n    # Return the full path where the file is saved\n    return full_path", "compilation_passed": true, "time": 0.0013408660888671875, "tests_passed": true, "error": null}
{"code": "os.makedirs(output_dir, exist_ok=True)\n    file_path = os.path.join(output_dir, filename)\n    df.to_json(file_path)\n    return file_path", "compilation_passed": true, "time": 0.0014619827270507812, "tests_passed": true, "error": null}
{"code": "# Create the output directory if it doesn't exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Save the DataFrame as a JSON file\n    df.to_json(os.path.join(output_dir, filename))\n\n    return os.path.join(output_dir, filename)", "compilation_passed": true, "time": 0.001415252685546875, "tests_passed": true, "error": null}
{"code": "filepath = os.path.join(output_dir, filename)\n    df.to_json(filepath, orient=\"records\")\n    return filepath", "compilation_passed": true, "time": 0.0029282569885253906, "tests_passed": true, "error": null}
{"code": "if os.path.exists(output_dir) and os.path.isdir(output_dir):\n        data_dir = output_dir\n    else:\n        raise ValueError(\"Output directory not found.\")\n\n    if not filename.endswith('.json'):\n        filename += '.json'\n    filename = os.path.join(data_dir, filename)\n    df.to_json(filename, orient='records',indent=4, default=str)\n    print(f\"Data saved to: {filename}\")\n    return filename", "compilation_passed": true, "time": 0.0012798309326171875, "tests_passed": false, "error": "TypeError"}
{"code": "filepath = os.path.join(output_dir, filename)\n    df.to_json(filepath, orient=\"records\", indent=None, lines=True)\n    return filepath", "compilation_passed": true, "time": 0.0014300346374511719, "tests_passed": false, "error": "json.decoder.JSONDecodeError"}
{"code": "os.makedirs(output_dir, exist_ok=True)\n    filename = os.path.join(output_dir, filename)\n    df.to_json(filename, indent=2)\n    return filename", "compilation_passed": true, "time": 0.0013766288757324219, "tests_passed": true, "error": null}
{"code": "# Create the output directory if it doesn't exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Save the DataFrame as a JSON file\n    file_path = os.path.join(output_dir, filename)\n    df.to_json(file_path, indent=4, orient='records')\n\n    return file_path", "compilation_passed": true, "time": 0.0027382373809814453, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n    df.to_json(os.path.join(output_dir, filename), orient='records', force_ascii=False)", "compilation_passed": true, "time": 0.0013020038604736328, "tests_passed": false, "error": "TypeError"}
{"code": "# Create the output directory if it does not exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n    file_path = os.path.join(output_dir, filename)\n    df.to_json(file_path, orient='records')\n    return file_path", "compilation_passed": true, "time": 0.0028481483459472656, "tests_passed": true, "error": null}
{"code": "output_dir = os.path.join(output_dir, 'json')\n\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    df.to_json(os.path.join(output_dir, filename))\n\n    return os.path.join(output_dir, filename)", "compilation_passed": true, "time": 0.0015277862548828125, "tests_passed": true, "error": null}
{"code": "try:\n        path = os.path.join(output_dir, filename)\n        df.to_json(path)\n        return path\n    except:\n        raise Exception('Exception during task function.')", "compilation_passed": true, "time": 0.0013089179992675781, "tests_passed": true, "error": null}
{"code": "assert isinstance(df, pd.DataFrame), 'df must be a Pandas DataFrame'\n    assert isinstance(filename, str), 'filename must be a string'\n    assert os.path.exists(os.path.dirname(output_dir)), f'the directory {os.path.dirname(output_dir)} does not exist'\n    assert os.path.exists(os.path.dirname(output_dir)), f'the directory {os.path.dirname(output_dir)} does not exist'\n    output_path = os.path.join(output_dir, filename)\n    df.to_json(output_path)\n    return output_path", "compilation_passed": true, "time": 0.0014050006866455078, "tests_passed": true, "error": null}
{"code": "df.to_json(filename, orient='records', compression='infer')\n    return os.path.join(output_dir, filename)", "compilation_passed": true, "time": 0.0012998580932617188, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "assert isinstance(filename, str)\n    assert filename.endswith(\".json\")\n    assert isinstance(output_dir, str)\n    assert os.path.isdir(output_dir)\n    filepath = os.path.join(output_dir, filename)\n    df.to_json(filepath)\n    return filepath", "compilation_passed": true, "time": 0.0013649463653564453, "tests_passed": true, "error": null}
