{"code": "# Create the directory if it doesn't exist\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    # Generate n random files with json content\n    for i in range(n):\n        with open(os.path.join(directory, f\"file{i}.json\"), \"w\") as file:\n            file.write(json.dumps({\"number\": random.randint(1, 100)}))\n\n    # Reset the cursor to the beginning of each file\n    for i in range(n):\n        os.utime(os.path.join(directory, f\"file{i}.json\"), None)\n\n    return directory", "compilation_passed": true, "time": 0.002438783645629883, "tests_passed": false, "error": "StopIteration"}
{"code": "random.seed()\n    for i in range(n):\n        number = random.randint(1, 100)\n        with open(os.path.join(directory, f'random_file_{i}.json'), 'w') as f:\n            f.write(json.dumps({'number': number}))\n    return directory", "compilation_passed": true, "time": 0.0019137859344482422, "tests_passed": false, "error": "StopIteration"}
{"code": "for i in range(1, n+1):\n        path = os.path.join(directory, f'file_{i}.json')\n        with open(path, 'w') as f:\n            json.dump({'number': random.randint(1, 100)}, f)\n        os.utime(path)\n    return directory", "compilation_passed": true, "time": 0.001692056655883789, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_paths = []\n    for i in range(n):\n        path = os.path.join(directory, str(i) + '.json')\n        with open(path, 'w') as f:\n            f.write(json.dumps({'number': random.randint(1, 100)}))\n        file_paths.append(path)\n    with open(file_paths[0], 'r') as f:\n        with open(file_paths[0], 'w') as f2:\n            for line in f:\n                f2.write(line)\n    return directory", "compilation_passed": true, "time": 0.001608133316040039, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "random.seed()\n    for i in range(n):\n        with open(os.path.join(directory, f'file_{i}.json'), 'w') as f:\n            f.write(json.dumps({'number': random.randint(1, 100)}))\n    return directory", "compilation_passed": true, "time": 0.001894235610961914, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = []\n    for i in range(n):\n        name = str(i)\n        path = os.path.join(directory, f\"{name}.json\")\n        file = open(path, \"w\")\n        files.append(file)\n    for file in files:\n        random_number = random.randint(1, 100)\n        data = json.dumps({\"number\": random_number})\n        file.write(data)\n        file.close()\n    return directory", "compilation_passed": true, "time": 0.0015873908996582031, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = [os.path.join(directory, f'file-{i}.json') for i in range(n)]\n    for file in files:\n        with open(file, 'w') as f:\n            f.write(json.dumps({'number': random.randint(1, 100)}))\n        os.utime(file, None)\n    return directory", "compilation_passed": true, "time": 0.0015821456909179688, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "for i in range(1, n + 1):\n        with open(os.path.join(directory, 'random_file.json'), 'w') as f:\n            json.dump({'number': random.randint(1, 100)}, f)\n\n        os.utime(os.path.join(directory, 'random_file.json'))\n    return directory", "compilation_passed": true, "time": 0.0013659000396728516, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files_created = []\n    for i in range(1, n+1):\n        file = os.path.join(directory, f'{i}.json')\n        data = {'number': random.randint(1, 100)}\n        with open(file, 'w') as f:\n            f.write(json.dumps(data))\n        os.utime(file, None)\n        files_created.append(file)\n\n    return directory", "compilation_passed": true, "time": 0.0015041828155517578, "tests_passed": false, "error": "StopIteration"}
{"code": "for i in range(n):\n        f = open(os.path.join(directory, f'{i}.json'), 'w')\n        f.write(json.dumps({'number': random.randint(1, 100)}))\n        f.close()\n        os.utime(f'{i}.json', None)\n    return directory", "compilation_passed": true, "time": 0.0013611316680908203, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "for i in range(n):\n        file_path = os.path.join(directory, f'file{i}.json')\n        with open(file_path, 'w') as f:\n            json.dump({'number': random.randint(1, 100)}, f)\n        f.seek(0)\n\n    return directory", "compilation_passed": true, "time": 0.0013689994812011719, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "for i in range(1, n+1):\n        filename = f\"{random.randint(1, 100)}.json\"\n        with open(os.path.join(directory, filename), 'w') as f:\n            f.write(json.dumps({'number': random.randint(1, 100)}))\n    os.utime(directory)\n    return directory", "compilation_passed": true, "time": 0.00146484375, "tests_passed": false, "error": "StopIteration"}
{"code": "for i in range(n):\n        path = f\"{directory}/file_{i + 1}.json\"\n        with open(path, \"w\") as file:\n            json.dump({\"number\": random.randint(1, 100)})\n    os.utime(path, None)\n    return directory", "compilation_passed": true, "time": 0.001352071762084961, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "for i in range(n):\n        filename = f'random_file_{i}.json'\n        with open(os.path.join(directory, filename), 'w') as f:\n            json.dump({'number': random.randint(1, 100)}, f)\n\n    # Reset the cursor to the beginning of each file\n    for i in range(n):\n        filename = f'random_file_{i}.json'\n        os.utime(os.path.join(directory, filename), None)\n    return directory", "compilation_passed": true, "time": 0.0013420581817626953, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        os.makedirs(directory)\n    for i in range(n):\n        f = os.path.join(directory, f\"file_{i}.json\")\n        with open(f, 'w') as json_file:\n            json_data = {\"number\": random.randint(1, 100)}\n            json.dump(json_data, json_file)\n        os.utime(f, None)\n    return directory", "compilation_passed": true, "time": 0.0016760826110839844, "tests_passed": false, "error": "StopIteration"}
{"code": "if os.path.isdir(directory) is False:\n        return\n\n    for i in range(n):\n        rand = random.randint(1,100)\n        f = open(f\"{directory}/{i}\", \"w\")\n        json.dump({'number': rand}, f)\n        f.close()\n\n    return directory", "compilation_passed": true, "time": 0.0012481212615966797, "tests_passed": false, "error": "TypeError"}
{"code": "# Create n random files in the directory\n    for i in range(n):\n        file_name = os.path.join(directory, f'file_{i}.json')\n        with open(file_name, 'w') as file:\n            number = random.randint(1, 100)\n            file.write(json.dumps({'number': number}))\n\n    return directory", "compilation_passed": true, "time": 0.0013308525085449219, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if n < 1:\n        return directory\n\n    files = []\n\n    for i in range(n):\n        file = os.path.join(directory, str(i) + '.json')\n        with open(file, 'w') as f:\n            data = {'number': random.randint(1, 100)}\n            json.dump(data, f, indent=4)\n        files.append(file)\n\n    random.shuffle(files)\n    os.chdir(directory)\n    for file in files:\n        os.rename(file, f'test.{random.randint(1, 100)}')\n\n    return directory", "compilation_passed": true, "time": 0.001316070556640625, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "random_nums = []\n    for _ in range(n):\n        random_num = random.randint(1, 100)\n        random_nums.append(random_num)\n        filename = str(random_num) + '.json'\n        with open(os.path.join(directory, filename), 'w') as f:\n            json.dump({'number': random_num}, f)\n    return directory", "compilation_passed": true, "time": 0.0013151168823242188, "tests_passed": false, "error": "StopIteration"}
{"code": "for i in range(1, n + 1):\n        file_name = 'file-' + str(i) + '.json'\n        file_path = os.path.join(directory, file_name)\n        with open(file_path, 'w') as f:\n            f.write(json.dumps({'number': random.randint(1, 100)}))\n    return directory", "compilation_passed": true, "time": 0.0012409687042236328, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.makedirs(directory, exist_ok=True)\n\n    random.seed(0)\n    for _ in range(n):\n        with open(os.path.join(directory, f'random-{random.randint(1, 100)}.json'), 'w') as f:\n            f.write(json.dumps({'number': random.randint(1, 100)}))\n\n    os.utime(directory, None)\n    return directory", "compilation_passed": true, "time": 0.0014531612396240234, "tests_passed": false, "error": "StopIteration"}
{"code": "for _ in range(n):\n        random_int = random.randint(1, 100)\n        file_name = f\"file_{random_int}.json\"\n        with open(os.path.join(directory, file_name), \"w\") as file:\n            file.write(json.dumps({\"number\": random_int}))\n    with open(os.path.join(directory, \"file_cursor.json\"), \"w\") as file:\n        file.write(json.dumps({\"number\": 0}))\n    return directory", "compilation_passed": true, "time": 0.0012638568878173828, "tests_passed": false, "error": "StopIteration"}
{"code": "random.seed()\n\n    for i in range(1, n):\n        number = random.randint(1, 100)\n        file_path = os.path.join(directory, f'file{i}.json')\n        with open(file_path, 'w') as file:\n            file.write(json.dumps({'number': number}))\n\n    return directory", "compilation_passed": true, "time": 0.0013172626495361328, "tests_passed": false, "error": "StopIteration"}
{"code": "for i in range(1, n+1):\n        with open(os.path.join(directory, str(i) + '.json'), 'w') as file:\n            file.write(json.dumps({'number': random.randint(1, 100)}))\n    os.utime(directory, None)\n    return directory", "compilation_passed": true, "time": 0.0011420249938964844, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "for i in range(1, n+1):\n        filename = os.path.join(directory, f'file{i}.json')\n        with open(filename, 'w') as f:\n            json.dump({'number': random.randint(1, 100)}, f)\n    return directory", "compilation_passed": true, "time": 0.0011131763458251953, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "for i in range(1, n+1):\n        file_name = f\"{directory}/file_{i}.json\"\n        with open(file_name, 'w') as f:\n            json.dump({'number': random.randint(1, 100)}, f)\n            os.lseek(f.fileno(), 0, os.SEEK_SET)\n    return directory", "compilation_passed": true, "time": 0.0011219978332519531, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "for i in range(1, n+1):\n        random_number = random.randint(1, 100)\n        with open(f'{directory}/file{i}.json', 'w') as file:\n            json.dump({'number': random_number}, file)\n    return directory", "compilation_passed": true, "time": 0.0011699199676513672, "tests_passed": false, "error": "StopIteration"}
{"code": "file_names = []\n    for i in range(n):\n        number = random.randint(1, 100)\n        file_name = os.path.join(directory, f\"file_{i}.json\")\n        file_names.append(file_name)\n        with open(file_name, \"w\") as f:\n            json.dump({\"number\": number}, f)\n    cursor_offsets = [(os.lseek(file_desc, 0, 0), file_desc)\n                      for file_desc in map(os.open, file_names)]\n    os.closeall()\n    return directory", "compilation_passed": true, "time": 0.0012278556823730469, "tests_passed": false, "error": "StopIteration"}
{"code": "for i in range(n):\n        file_path = os.path.join(directory, f'file_{i}.json')\n        with open(file_path, 'w') as file:\n            json.dump({'number': random.randint(1, 100)}, file)\n        file.seek(0)\n    return directory", "compilation_passed": true, "time": 0.0011119842529296875, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        os.makedirs(directory)\n    for i in range(1, n+1):\n        with open(f\"{directory}/file_{i}.json\", \"w\") as f:\n            number = random.randint(1, 100)\n            f.write(json.dumps({'number': number}))\n        os.utime(f\"{directory}/file_{i}.json\")\n    return directory", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": false, "error": "StopIteration"}
