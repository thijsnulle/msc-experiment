{"code": "# Check if directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(directory + \" doesn't exist\")\n\n    files = glob.glob(os.path.join(directory, '*.txt'))\n    if not files:\n        return None\n\n    zip_filename = 'files.zip'\n\n    # Create a ZipFile object\n    with zipfile.ZipFile(zip_filename, 'w') as zip_file:\n        # Add each file to the zip\n        for file in files:\n            zip_file.write(file)\n\n    return zip_filename", "compilation_passed": true, "time": 0.002780914306640625, "tests_passed": false, "error": "KeyError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f'Directory \"{directory}\" not found')\n\n    files = glob.glob(f'{directory}/*.*')\n    if not files:\n        return None\n\n    zip_file = zipfile.ZipFile(f'{directory}/files.zip', 'w', compression=zipfile.ZIP_DEFLATED)\n    for file in files:\n        zip_file.write(file, os.path.basename(file))\n    zip_file.close()\n    return f'{directory}/files.zip'", "compilation_passed": true, "time": 0.004368782043457031, "tests_passed": true, "error": null}
{"code": "path = os.path.join(directory, 'files.zip')\n    files = glob.glob(f\"{directory}/*\")\n\n    if not files:\n        return None\n\n    with zipfile.ZipFile(path, 'w') as zip_file:\n        for file_path in files:\n            zip_file.write(file_path, os.path.relpath(file_path, directory))\n\n    return path", "compilation_passed": true, "time": 0.001984119415283203, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(\"Directory not found\")\n\n    files = glob.glob(os.path.join(directory, \"*\"))\n    files = [f for f in files if os.path.isfile(f)]\n    if not files:\n        return None\n\n    zip_name = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_name, 'w') as zipf:\n        for f in files:\n            zipf.write(f)\n    return zip_name", "compilation_passed": true, "time": 0.0025110244750976562, "tests_passed": false, "error": "KeyError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f'{directory} does not exist')\n    with zipfile.ZipFile('files.zip', 'w', zipfile.ZIP_DEFLATED) as zipf:\n        for f in glob.glob(os.path.join(directory, '*')):\n            zipf.write(f)\n    return os.path.join(directory, 'files.zip')", "compilation_passed": true, "time": 0.0012428760528564453, "tests_passed": true, "error": null}
{"code": "files = glob.glob(os.path.join(directory, '**/*.*'))\n    if not files:\n        return None\n    zip_path = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        for file in files:\n            zip_file.write(file)\n    return zip_path", "compilation_passed": true, "time": 0.002344846725463867, "tests_passed": false, "error": "AttributeError"}
{"code": "path = None\n    if not os.path.isdir(directory):\n        raise FileNotFoundError\n\n    file_list = [\n        os.path.relpath(filepath, directory) for filepath in glob.glob(f\"{directory}/**/*\", recursive=False) if\n        os.path.isfile(filepath)\n    ]\n\n    if len(file_list) == 0:\n        return path\n\n    with zipfile.ZipFile(\"files.zip\", \"w\", compression=zipfile.ZIP_DEFLATED) as zip_file:\n        for file_path in file_list:\n            zip_file.write(file_path)\n\n    return os.path.join(directory, \"files.zip\")", "compilation_passed": true, "time": 0.002019166946411133, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError\n\n    files = glob.glob(f'{directory}/**/*.*', recursive=True)\n    if len(files) == 0:\n        return None\n\n    zip_name = 'files.zip'\n    with ZipFile(zip_name, 'w') as zip:\n        for file in files:\n            zip.write(file, arcname=os.path.basename(file))\n    return zip_name", "compilation_passed": true, "time": 0.0017709732055664062, "tests_passed": false, "error": "NameError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError\n\n    zip_file = None\n\n    for root, dirs, files in os.walk(directory):\n        if not dirs and len(files) != 0:\n            zip_file = zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w')\n            for file_name in glob.glob(os.path.join(root, '*')):\n                zip_file.write(file_name)\n            zip_file.close()\n\n    if zip_file is None:\n        return None\n    else:\n        return zip_file.name", "compilation_passed": true, "time": 0.002004861831665039, "tests_passed": false, "error": "AttributeError"}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError('Specified directory does not exist')\n\n    path = None\n    files = glob.glob(os.path.join(directory, '**'), recursive=False)\n\n    # only create the zip file if there are files to zip\n    if len(files) > 0:\n        zip_path = os.path.join(directory, 'files.zip')\n        with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n            for file in files:\n                zip_file.write(file)\n        path = zip_path\n\n    return path", "compilation_passed": true, "time": 0.0020279884338378906, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError('The specified directory does not exist')\n\n    zip_name = os.path.join(directory, 'files.zip')\n\n    if not glob.glob(os.path.join(directory, '*')):\n        return None\n\n    with zipfile.ZipFile(zip_name, 'w') as zipf:\n        for filename in glob.glob(os.path.join(directory, '*')):\n            zipf.write(filename, os.path.relpath(filename, directory))\n    return zip_name", "compilation_passed": true, "time": 0.0020859241485595703, "tests_passed": true, "error": null}
{"code": "# Check the path exists\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(directory)\n\n    # Get all files\n    file_names = glob.glob(os.path.join(directory, '*'))\n    files = [f for f in file_names if not os.path.isdir(f)]\n\n    # Check if there are files to zip\n    if not files:\n        return None\n\n    # Create a new zipfile in the current directory\n    with zipfile.ZipFile('files.zip', 'w') as zip_file:\n        for file_name in files:\n            zip_file.write(file_name)\n\n    # Return the path to the generated zip file\n    return os.path.join(os.getcwd(), 'files.zip')", "compilation_passed": true, "time": 0.002743959426879883, "tests_passed": false, "error": "KeyError"}
{"code": "path = None\n    if os.path.exists(directory):\n        file_list = glob.glob(directory + \"/**\", recursive=True)\n        if file_list:\n            path = f\"{directory}.zip\"\n            with zipfile.ZipFile(path, 'w') as zip_file:\n                for file in file_list:\n                    zip_file.write(file)\n    return path", "compilation_passed": true, "time": 0.001445770263671875, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f'The directory {directory} does not exist.')\n\n    files = glob.glob(os.path.join(directory, '*'))\n\n    if not files:\n        return None\n\n    with zipfile.ZipFile('files.zip', mode='w') as zip:\n        for filename in files:\n            zip.write(filename, arcname=filename)\n    return os.path.abspath('files.zip')", "compilation_passed": true, "time": 0.0021262168884277344, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError\n\n    file_paths = glob.glob(f\"{directory}/*\")\n    zip_name = \"files.zip\"\n    zip_path = os.path.join(directory, zip_name)\n\n    try:\n        with zipfile.ZipFile(zip_path, 'w') as zip_file:\n            for file_path in file_paths:\n                zip_file.write(file_path)\n    except Exception as e:\n        print(f\"Error zipping files: {e}\")\n    else:\n        print(f\"Files zipped successfully to {zip_path}\")\n        return zip_path", "compilation_passed": true, "time": 0.0014052391052246094, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError('Path not found')\n\n    files = glob.glob(os.path.join(directory, \"*\"))\n\n    if len(files) == 0:\n        return None\n\n    zip_path = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_path, 'w', compression=zipfile.ZIP_DEFLATED) as zip_file:\n        for file_name in files:\n            zip_file.write(file_name)\n\n    return zip_path", "compilation_passed": true, "time": 0.002005338668823242, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(directory)\n\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n    zip_name = 'files.zip'\n    zip_path = os.path.join(directory, zip_name)\n\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        for file in files:\n            zip_file.write(file)\n\n    return zip_path", "compilation_passed": true, "time": 0.0020682811737060547, "tests_passed": true, "error": null}
{"code": "path = os.path.abspath(directory)\n    if not os.path.exists(path):\n        raise FileNotFoundError(f\"Directory {path} not found.\")\n\n    zip_file_name = os.path.join(path, 'files.zip')\n    file_list = [os.path.relpath(f, os.path.dirname(zip_file_name)) for f in glob.glob(os.path.join(path, '*'))]\n    if len(file_list) == 0:\n        return None\n\n    with zipfile.ZipFile(zip_file_name, 'w', zipfile.ZIP_DEFLATED) as zipf:\n        for f in file_list:\n            zipf.write(f)", "compilation_passed": true, "time": 0.0020711421966552734, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"{directory} does not exist\")\n\n    # create zip file\n    with zipfile.ZipFile(directory + os.sep + 'files.zip', 'w') as zip:\n        for file in glob.glob(directory + os.sep + '*'):\n            if os.path.isfile(file):\n                zip.write(file)\n\n    return directory + os.sep + 'files.zip'", "compilation_passed": true, "time": 0.0013937950134277344, "tests_passed": true, "error": null}
{"code": "# TODO: raise FileNotFoundError if specified directory does not exist\n\n    file_paths = []\n    for file in glob.glob(os.path.join(directory, '*')):\n        if os.path.isfile(file):\n            file_paths.append(file)\n    if not file_paths:\n        return None\n\n    with zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w') as zip_file:\n        for file in file_paths:\n            zip_file.write(file, os.path.basename(file))\n\n    return os.path.join(directory, 'files.zip')", "compilation_passed": true, "time": 0.003922939300537109, "tests_passed": true, "error": null}
{"code": "zip_name = 'files.zip'\n\n    try:\n        os.chdir(directory)\n        path = os.getcwd()\n        filenames = glob.glob(\"*\")\n        if not filenames:\n            print(\"Error: no files in directory\")\n            return\n    except FileNotFoundError:\n        print(\"Error: directory not found\")\n        return\n    else:\n        try:\n            with zipfile.ZipFile(path, 'w') as zip_ref:\n                for filename in filenames:\n                    zip_ref.write(filename)\n        except BaseException as e:\n            print(f\"Error: failed to write zip file: {e}\")\n\n    return path", "compilation_passed": true, "time": 0.0020017623901367188, "tests_passed": false, "error": "IsADirectoryError"}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError('No such file or directory')\n    zip_dir = os.path.join(directory, 'files.zip')\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n    with zipfile.ZipFile(zip_dir, 'w') as myzip:\n        for f in files:\n            myzip.write(f, os.path.basename(f))\n    return zip_dir", "compilation_passed": true, "time": 0.0023298263549804688, "tests_passed": true, "error": null}
{"code": "try:\n        file_paths = glob.glob(os.path.join(directory, '**', '*.*'))\n\n        if len(file_paths) == 0:\n            return None\n\n        with zipfile.ZipFile(\n                os.path.join(directory, 'files.zip'), 'w',\n                zipfile.ZIP_DEFLATED) as archive:\n            for path in file_paths:\n                archive.write(path)\n\n        return os.path.join(directory, 'files.zip')\n\n    except FileNotFoundError:\n        print(f\"Directory '{directory}' not found.\")", "compilation_passed": true, "time": 0.0024878978729248047, "tests_passed": false, "error": "AttributeError"}
{"code": "try:\n        paths = glob.glob(directory + '/*')\n        files_zip = os.path.join(directory, 'files.zip')\n    except FileNotFoundError:\n        files_zip = None\n\n    if files_zip is None or not os.path.exists(files_zip):\n        return None\n\n    with zipfile.ZipFile(files_zip, 'w', zipfile.ZIP_DEFLATED) as zf:\n        for file in paths:\n            if os.path.isfile(file):\n                zf.write(file)\n    return files_zip", "compilation_passed": true, "time": 0.002084970474243164, "tests_passed": false, "error": "AttributeError"}
{"code": "if os.path.exists(directory) and glob.glob(os.path.join(directory, '*')):\n        with zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w', zipfile.ZIP_DEFLATED) as zip_file:\n            for file_name in os.listdir(directory):\n                zip_file.write(os.path.join(directory, file_name))\n        return os.path.join(directory, 'files.zip')\n    return None", "compilation_passed": true, "time": 0.0024290084838867188, "tests_passed": true, "error": null}
{"code": "if os.path.isdir(directory):\n        all_files = glob.glob(os.path.join(directory, '**'), recursive=True)\n        if not all_files:\n            return None\n        zip_path = os.path.join(directory, 'files.zip')\n        with zipfile.ZipFile(zip_path, 'w') as zip_file:\n            for file_path in all_files:\n                zip_file.write(file_path)\n        return zip_path\n    raise FileNotFoundError(\"File not found: {}\".format(directory))", "compilation_passed": true, "time": 0.0016241073608398438, "tests_passed": true, "error": null}
{"code": "# check for path existence\n    if not os.path.exists(directory):\n        raise FileNotFoundError\n\n    files = glob.glob(os.path.join(directory, '*.*'))\n\n    if len(files) == 0:\n        return None\n\n    # create a zip file with the contents of the directory\n    zip_file = zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w', zipfile.ZIP_DEFLATED)\n    for file in files:\n        zip_file.write(file, os.path.relpath(file, directory))\n    zip_file.close()\n\n    # return the path to the created zip file\n    return os.path.join(directory, 'files.zip')", "compilation_passed": true, "time": 0.00552678108215332, "tests_passed": true, "error": null}
{"code": "# Create a list of files in the specified directory\n    files = glob.glob(os.path.join(directory, '**', '*'))\n\n    # Return None if the directory is empty\n    if not files:\n        return None\n\n    # Create a zipfile with all the files in the directory\n    with zipfile.ZipFile('files.zip', mode='w') as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file)\n\n    return 'files.zip'", "compilation_passed": true, "time": 0.002048015594482422, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "zip_filename = 'files.zip'\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n    with open(zip_filename, 'wb') as f:\n        with zipfile.ZipFile(f, 'w') as z:\n            for file in files:\n                z.write(file)\n    return zip_filename", "compilation_passed": true, "time": 0.002048969268798828, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.isdir(directory):\n        raise FileNotFoundError('The directory specified does not exist')\n\n    file_path = []\n    for file_name in glob.glob(os.path.join(directory, '*')):\n        if os.path.isfile(file_name) and not os.path.islink(file_name):\n            file_path.append(file_name)\n\n    if not file_path:\n        return None\n\n    file_names = os.path.basename(directory)\n    zip_path = os.path.join(directory, f'../zip/{file_names}.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zip_ref:\n        for file in file_path:\n            zip_ref.write(file)\n\n    return zip_path", "compilation_passed": true, "time": 0.0020389556884765625, "tests_passed": false, "error": "FileNotFoundError"}
