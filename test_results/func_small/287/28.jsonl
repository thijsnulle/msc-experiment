{"code": "with open(filename,\"r\") as f:\n        text = f.read()\n        counter = Counter(text.split())\n        total = sum(counter.values())\n        return total", "compilation_passed": true, "time": 0.001789093017578125, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create a file path object to the specified directory\n    directory_path = os.path.join(directory, filename)\n\n    # Open the input file\n    with open(directory_path, \"r\") as f:\n        # Read the contents of the file into a string\n        contents = f.read()\n\n    # Split the contents into individual words\n    words = contents.split()\n\n    # Count the occurrences of each word\n    word_counts = Counter(words)\n\n    # Convert the word_counts dictionary to a JSON object\n    json_object = json.dumps(word_counts)\n\n    # Write the JSON object to the specified file\n    with open(directory_path[:-4] + \".json\", \"w\") as f:\n        f.write(json_object)\n\n    # Calculate and return the total number of words\n    total_count = sum(word_counts.values())\n    return total_count", "compilation_passed": true, "time": 0.0018360614776611328, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "counter = Counter()\n    for file in os.listdir(directory):\n        if file.endswith(\".txt\"):\n            with open(os.path.join(directory, file), \"r\") as f:\n                for word in f.read().split():\n                    counter[word] += 1\n    with open(filename, \"w\") as f:\n        json.dump(dict(counter), f)\n    return len(counter)", "compilation_passed": true, "time": 0.0017719268798828125, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total = 0\n    files = os.listdir(directory)\n    for f in files:\n        if not f.endswith('.txt'):\n            continue\n        with open(os.path.join(directory, f), 'r') as file:\n            #print(file.read().replace(\"\\n\",\"\").replace(\",\", \" \").replace(\".\",\" \").replace(\"'\",\" \").replace('\"',\" \").replace(\"?\",\" \").replace(\";\", \" \").strip())\n            for word in file.read().replace(\"\\n\",\" \").replace(\",\", \" \").replace(\".\",\" \").replace(\"'\",\" \").replace('\"',\" \").replace(\"?\",\" \").replace(\";\", \" \").strip().split():\n                word = word.lower()\n                if len(word) == 1: continue\n                if word in ['',", "compilation_passed": false, "time": 0.00020623207092285156, "tests_passed": false, "error": "SyntaxError"}
{"code": "total = 0\n    with os.scandir(directory) as it:\n        for entry in it:\n            if entry.path.endswith(\".txt\"):\n                with open(entry.path, \"r\", encoding=\"utf-8\") as f:\n                    total += Counter([word for line in f for word in line.split()])\n                os.remove(entry.path)\n                f.close()\n    with open(filename, \"w\", encoding=\"utf-8\") as f: json.dump(total, f)\n    return total", "compilation_passed": true, "time": 0.0019049644470214844, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "output = Counter()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.endswith('.txt'):\n                with open(os.path.join(root, file)) as f:\n                    output += Counter(f.read().split())\n    with open(filename, 'w') as f:\n        json.dump(output.most_common(), f)\n\n    return len(output)", "compilation_passed": true, "time": 0.0018138885498046875, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# list of all .txt files\n    files = [filename for filename in os.listdir(directory)\n             if filename.endswith('.txt')]\n    # create a dict to store the count of words\n    word_count = Counter()\n    # loop through all .txt files and read their content\n    for file in files:\n        with open(directory + file, 'r') as f:\n            content = f.read().split()  # split the content into words\n            word_count.update(Counter(content))  # update the word count\n    # create a dict to store the count of words\n    word_count = dict(word_count)\n    with open(filename, 'w') as f:\n        json.dump(word_count, f, indent=4)\n    return len(word_count)", "compilation_passed": true, "time": 0.0018100738525390625, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_counts = Counter()\n    for file_name in os.listdir(directory):\n        if file_name.endswith(\".txt\"):\n            file_path = os.path.join(directory, file_name)\n            with open(file_path, \"r\") as f:\n                for line in f:\n                    words = line.strip().split()\n                    word_counts.update(words)\n\n    with open(filename, \"w\") as f:\n        json.dump(word_counts, f)\n\n    return sum(word_counts.values())", "compilation_passed": true, "time": 0.00179290771484375, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = Counter()\n    for filepath in os.listdir(directory):\n        if filepath.endswith(\".txt\"):\n            with open(os.path.join(directory, filepath)) as f:\n                text = f.read()\n                count.update(text.split())\n    json.dump(count, open(filename, 'w'))\n    return len(count)", "compilation_passed": true, "time": 0.0017838478088378906, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_counter = 0\n    json_data = {}\n    # Get all files in the directory\n    for dir_path, dir_names, filenames in os.walk(directory):\n        for filename in filenames:\n            if filename.endswith('.txt'):\n                # Count the number of words in each file\n                filepath = os.path.join(dir_path, filename)\n                with open(filepath, 'r') as f:\n                    contents = f.read().split()\n                    json_data[filepath] = len(contents)\n                    file_counter += 1\n    # Write the counts to a JSON file\n    with open(filename, 'w') as f:\n        json.dump(json_data, f, indent=4)\n    return file_counter", "compilation_passed": true, "time": 0.001811981201171875, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = Counter()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'r') as f:\n                count.update(f.read().split())\n    with open(filename, 'w') as f:\n        json.dump(count, f, indent=4)\n    total = sum(count.values())\n    return total", "compilation_passed": true, "time": 0.0018658638000488281, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "with open(directory + filename, 'r') as f:\n        count = 0\n        for line in f:\n            line = line.strip()\n            words = line.split()\n            for word in words:\n                count += 1\n        return count\n    raise Exception('Not Implemented')", "compilation_passed": true, "time": 0.001753091812133789, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "path = directory\n    os.chdir(path)\n    os.system('find . -type f -name \"*.txt\" -exec cat {} + | wc -w')\n    with open(filename, 'w') as json_file:\n        word_counts = Counter(os.system('find . -type f -name \"*.txt\" -exec cat {} + | wc -w'))\n        json.dump(word_counts, json_file)\n    return word_counts", "compilation_passed": true, "time": 0.0017638206481933594, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "directory = os.path.abspath(directory)\n\n    total = 0\n    file_counts = Counter()\n\n    for file in os.listdir(directory):\n        if not file.endswith(\".txt\"):\n            continue\n\n        path = os.path.join(directory, file)\n\n        with open(path, \"r\") as f:\n            count = len(f.read().split())\n            total += count\n            file_counts[file] = count\n\n    with open(filename, \"w\") as f:\n        json.dump(file_counts, f, indent=2, sort_keys=True)\n\n    return total", "compilation_passed": true, "time": 0.0018298625946044922, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = Counter()\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            path = os.path.join(root, file)\n            with open(path, 'r') as f:\n                count.update(Counter(f.read().split()))\n\n    with open(filename, 'w') as outfile:\n        json.dump(dict(count), outfile, indent=4)\n    return sum([count[word] for word in count])", "compilation_passed": true, "time": 0.0019078254699707031, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "with open(os.path.join(directory,filename)) as f:\n        lines = f.readlines()\n\n    words = lines[0].split()\n    word_counter = Counter(words)\n    with open(filename, 'w') as outfile:\n        json.dump(word_counter, outfile, indent=2)\n\n    return len(words)", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "count = 0\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"r\", encoding=\"utf-8\")\n                text_lines = file.readlines()\n                for text_line in text_lines:\n                    words = re.findall(r\"[A-Za-z0-9]+\", text_line)\n                    count += len(words)\n\n    with open(filename, \"w\") as f:\n        json.dump(count, f)\n\n    return count", "compilation_passed": false, "time": 0.00013709068298339844, "tests_passed": false, "error": "SyntaxError"}
{"code": "counter = Counter()\n    for f in os.listdir(directory):\n        path = os.path.join(directory, f)\n        if not os.path.isfile(path):\n            continue\n        with open(path, 'r', encoding='utf-8') as f:\n            lines = f.readlines()\n            if lines:\n                counter.update(lines)\n\n    with open(filename, 'w', encoding='utf-8') as f:\n        json.dump(counter, f)\n    total = 0\n    for k, v in counter.items():\n        total += v\n    return total", "compilation_passed": true, "time": 0.0018990039825439453, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total = 0\n    for filename, _, files in os.walk(directory):\n        for file in files:\n            if file.endswith(\".txt\"):\n                with open(os.path.join(filename, file), 'r', encoding=\"utf8\") as f:\n                    file_content = f.read()\n                    words = file_content.split()\n                    word_counts = Counter(words)\n                    total += sum(word_counts.values())\n                    with open(os.path.join(filename, f'{file[:-4]}.json'), 'w', encoding=\"utf8\") as f:\n                        json.dump(dict(word_counts), f)\n    return total", "compilation_passed": true, "time": 0.001856088638305664, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "counter = Counter()\n    for file in os.listdir(directory):\n        file_path = os.path.join(directory, file)\n        with open(file_path) as f:\n            text = f.read()\n            words = text.split()\n            counter.update(words)\n    with open(filename, \"w\") as f:\n        json.dump(counter, f)\n\n    return sum(counter.values())", "compilation_passed": true, "time": 0.0018489360809326172, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "word_dict = Counter()\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.endswith(\".txt\"):\n                with open(os.path.join(root, file), \"r\") as f:\n                    contents = f.read()\n                    words = contents.split()\n                    word_dict.update(words)\n\n    with open(filename, \"w\") as f:\n        json.dump(word_dict, f)\n    return sum(word_dict.values())", "compilation_passed": true, "time": 0.0017981529235839844, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "with open(filename, \"w+\") as out:\n        for root, dirs, files in os.walk(directory):\n            for file in files:\n                if not file.endswith(\".txt\"):\n                    continue\n                with open(os.path.join(root, file), 'r') as f:\n                    count = Counter(word for line in f for word in line.split())\n                    out.write(json.dumps(count.most_common(), indent=2))\n                    out.write(\"\\n\")\n                    print(\"Writing {}\".format(file))\n        out.seek(0)\n        total = 0\n        for line in out:\n            total += sum(line.count(x) for x in line)\n        out.write(str(total))\n    return total", "compilation_passed": true, "time": 0.0018687248229980469, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.chdir(directory)\n    f = open(filename,'w')\n    content = []\n    for file in os.listdir(os.getcwd()):\n        if file.endswith('.txt'):\n            with open(file,'r',encoding=\"utf8\") as f:\n                for line in f:\n                    for word in line.split():\n                        content.append(word)\n    f.close()\n    total = sum([Counter(content).values()])\n    with open('task2_results.json','w',encoding='utf8') as f:\n        json.dump({'count':total}, f, ensure_ascii=False, indent=2)\n    return total", "compilation_passed": true, "time": 0.0018339157104492188, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# read files in the directory\n    files = os.listdir(directory)\n    # remove files that aren't .txt files\n    files = list(filter(lambda f: os.path.splitext(f)[1].lower() == '.txt', files))\n    # make a list of words\n    all_words = [word.lower() for word in ''.join(map(lambda f: f.read(), map(open, [directory + f for f in files]))).split()]\n\n    # use the counter to find unique words\n    # export counts to JSON file\n    with open(filename,'w') as f:\n        json.dump(Counter(all_words), f, indent=4)\n    # return total number of words in list\n    return sum([len(words) for words in all_words])", "compilation_passed": true, "time": 0.0018787384033203125, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "words = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            filepath = os.path.join(root, file)\n            with open(filepath, 'r') as f:\n                for line in f:\n                    words.extend(line.split())\n    counts = Counter(words)\n\n    with open(filename, 'w') as f:\n        json.dump(dict(counts), f, indent=4)\n\n    return sum(counts.values())", "compilation_passed": true, "time": 0.001873016357421875, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "os.makedirs(directory, exist_ok=True)\n    total_words = 0\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.endswith(\".txt\"):\n                path = os.path.join(root, file)\n                with open(path, \"r\", encoding=\"utf-8\") as f:\n                    words = f.read().split()\n                    total_words += len(words)\n                    counts = Counter(words)\n                with open(path[:-4]+\".json\", \"w\", encoding=\"utf-8\") as f:\n                    json.dump(counts, f, indent=4)\n    with open(filename, \"w\", encoding=\"utf-8\") as f:\n        json.dump(total_words, f, indent=4)\n    return total_words", "compilation_passed": true, "time": 0.001920938491821289, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "total_words = 0\n    for file in os.listdir(directory):\n        if file.endswith(\".txt\"):\n            with open(directory + file, \"r\") as f:\n                total_words += len(f.read().split())\n\n    with open(filename, \"w\") as f:\n        json.dump(total_words, f)\n    return total_words", "compilation_passed": true, "time": 0.001756906509399414, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "counter = Counter()\n    for dirpath, _, files in os.walk(directory):\n        for filename in files:\n            if filename.endswith(\".txt\"):\n                filepath = os.path.join(dirpath, filename)\n                with open(filepath, \"r\") as f:\n                    for line in f:\n                        counter.update(line.strip().split())\n    json_path = os.path.join(directory, filename)\n    with open(json_path, 'w') as file:\n        json.dump(dict(counter), file, indent=4)\n    return sum(counter.values())", "compilation_passed": true, "time": 0.0017778873443603516, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Open the specified file and read its contents\n    file_path = os.path.join(directory, filename)\n    with open(file_path, 'r') as f:\n        file_content = f.read()\n\n    # Count the number of words in the file content\n    word_counts = Counter(file_content.split())\n\n    # Export word counts to a JSON file\n    json_data = {\n        \"word_counts\": word_counts\n    }\n    with open(f\"./task_{filename}\", 'w') as f:\n        json.dump(json_data, f)\n\n    # Return the total number of words\n    return len(file_content.split())", "compilation_passed": true, "time": 0.0017559528350830078, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "directory = os.path.normpath(directory)\n    files = [filename for filename in os.listdir(directory) if filename.endswith(\".txt\")]\n    word_counts = {}\n\n    for file in files:\n        filepath = os.path.join(directory, file)\n        with open(filepath) as f:\n            text = f.read().replace(\"\\n\", \" \").replace(\".\", \"\")\n            word_counts[file] = len(text.split())\n\n    with open(filename, \"w\") as f:\n        json.dump(word_counts, f)\n\n    return sum(word_counts.values())", "compilation_passed": true, "time": 0.0018820762634277344, "tests_passed": false, "error": "FileNotFoundError"}
