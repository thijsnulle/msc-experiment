{"code": "return sns.heatmap(data.corr())", "compilation_passed": true, "time": 0.0009768009185791016, "tests_passed": false, "error": "AttributeError"}
{"code": "df = pd.DataFrame(data)\n    df_corr = df.corr(method='pearson', min_periods=1)\n    return sns.heatmap(df_corr, annot=True, fmt='.2f', cbar=False, title='Correlation Matrix')", "compilation_passed": true, "time": 0.0017101764678955078, "tests_passed": false, "error": "AttributeError"}
{"code": "if pd.api.types.is_numerical_dtype(data):\n        data = data.corr()\n    else:\n        raise TypeError('DataFrame contains non-numerical data.')\n    ax = sns.heatmap(data, annot=True, cmap='Reds', center=0, square=True, xticklabels=True, yticklabels=True, annot_kws={\"size\": 8})\n    return ax", "compilation_passed": true, "time": 0.0008440017700195312, "tests_passed": false, "error": "AttributeError"}
{"code": "sns.heatmap(data, annot=True, linewidths=0, cmap='Blues', title='Correlation Matrix')\n    return ax", "compilation_passed": true, "time": 0.0009100437164306641, "tests_passed": false, "error": "ValueError"}
{"code": "return sns.heatmap(df.corr(), cmap='RdBu', annot=True, title='Correlation Matrix')", "compilation_passed": true, "time": 0.0007722377777099609, "tests_passed": false, "error": "NameError"}
{"code": "df = data\n\n    fig, ax = plt.subplots()\n\n    # Plot a correlation matrix\n    corr_matrix = df.corr()\n    sns.heatmap(corr_matrix, ax=ax, annot=True, fmt='.2f', cmap='coolwarm')\n    ax.set_title('Correlation Matrix')\n\n    return ax", "compilation_passed": true, "time": 0.00467681884765625, "tests_passed": false, "error": "AttributeError"}
{"code": "# sns.set(style='white')\n    # ax = sns.heatmap(data=data, annot=True, fmt='.2f', cmap='YlOrRd',\n    #                   linewidths=1, linecolor='black',\n    #                   xticklabels=False, yticklabels=False)\n    # ax.set_title('Correlation Matrix')\n    # return ax\n    df = pd.DataFrame(data)\n    df = df.corr()\n    ax = sns.heatmap(df, annot=True, fmt='.2f', cmap='YlOrRd', linewidths=1,\n                      linecolor='black', xticklabels=False, yticklabels=False)\n    return ax", "compilation_passed": true, "time": 0.019878864288330078, "tests_passed": true, "error": null}
{"code": "try:\n        corr = sns.heatmap(data, annot=True, title='Correlation Matrix')\n        return corr\n    except ImportError:\n        pass", "compilation_passed": true, "time": 0.0011892318725585938, "tests_passed": false, "error": "ValueError"}
{"code": "return pd.DataFrame(data).corr().style.background_gradient(cmap='coolwarm').background_color_map(cmap='cool').applymap(np.round_)", "compilation_passed": true, "time": 0.01539301872253418, "tests_passed": false, "error": "AttributeError"}
{"code": "mat = sns.heatmap(data,\n                      annot=True,\n                      cmap='RdYlGn',\n                      linewidths=0.5,\n                      linecolor='white',\n                      cbar_kws={'cmap':'RdYlGn','orientation':'vertical','label':'correlation'})\n    mat.set_title(\"Correlation Matrix\")\n    return mat", "compilation_passed": true, "time": 0.0012218952178955078, "tests_passed": false, "error": "ValueError"}
{"code": "corr = data.corr()\n    fig, ax = plt.subplots()\n    sns.heatmap(corr,\n                cmap='RdBu_r',\n                annot=True,\n                linewidths=0.5,\n                linecolor_wrap=True)\n    ax.set_title('Correlation Matrix')\n    return ax", "compilation_passed": true, "time": 0.0007598400115966797, "tests_passed": false, "error": "AttributeError"}
{"code": "df = data\n    ax = sns.heatmap(df.corr(), annot=True, cmap=\"Blues\")\n    ax.set_title('Correlation Matrix')\n    return ax", "compilation_passed": true, "time": 0.0006890296936035156, "tests_passed": false, "error": "AttributeError"}
{"code": "# Draw heatmap\n    ax = sns.heatmap(data, title=\"Correlation Matrix\", cmap=\"Blues\", annot=False)\n\n    return ax", "compilation_passed": true, "time": 0.0014951229095458984, "tests_passed": false, "error": "ValueError"}
{"code": "# set up the figure size\n    fig = plt.figure(figsize=(8, 6))\n\n    # create a heatmap of the dataframe using the seaborn function\n    sns.heatmap(df, annot=True, fmt='.2f', linewidths=.5, cbar=False)\n\n    # set the title for the heatmap\n    fig.suptitle('Correlation Matrix', fontsize=14)\n\n    # return the Axes object representing the heatmap\n    return ax", "compilation_passed": true, "time": 0.0009109973907470703, "tests_passed": false, "error": "NameError"}
{"code": "df = pd.DataFrame(data)\n    ax = sns.heatmap(\n        df.corr(method='kendall'),\n        annot=True,\n        fmt='.2g',\n        linecolor='black',\n        linewidth=0,\n        cbar=False,\n        vmin=-1,\n        vmax=1,\n        square=True,\n        cmap='coolwarm',\n    )\n    ax.set_title('Correlation Matrix')\n    return ax", "compilation_passed": true, "time": 0.05393075942993164, "tests_passed": true, "error": null}
{"code": "# Use seaborn to draw a correlation matrix heatmap\n    ax = sns.heatmap(data, annot=False, cmap='YlGnBu', fmt='.2f', center=0, linewidths=1, linecolor='black',\n                     annot_kws={\"weight\": \"bold\", \"fontsize\": 9})\n\n    # Set the title of the heatmap to 'Correlation Matrix'\n    ax.set_title(\"Correlation Matrix\", fontsize=11, loc=\"center\", weight=\"bold\")\n    return ax", "compilation_passed": true, "time": 0.0012307167053222656, "tests_passed": false, "error": "ValueError"}
{"code": "return sns.heatmap(data=pd.DataFrame(data))", "compilation_passed": true, "time": 0.1626589298248291, "tests_passed": true, "error": null}
{"code": "return sns.heatmap(data, annot=True, cbar=True, cbar_kws={\"label\": \"correlation\"}, fmt=\".2f\", title=\"Correlation Matrix\")", "compilation_passed": true, "time": 0.0013399124145507812, "tests_passed": false, "error": "ValueError"}
{"code": "import matplotlib.pyplot as plt\n    ax = sns.heatmap(data, annot=True, fmt=\".2f\", linewidths=0.5, cmap=\"coolwarm\",\n                    xticklabels=True, yticklabels=True)\n    ax.set_title('Correlation Matrix')\n    plt.show()\n    return ax", "compilation_passed": true, "time": 0.0010938644409179688, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n    return sns.heatmap(df.corr())", "compilation_passed": true, "time": 0.2875938415527344, "tests_passed": true, "error": null}
{"code": "ax = sns.heatmap(\n        data, title=\"Correlation Matrix\", annot=True, fmt=\".2f\", cmap=\"RdBu_r\"\n    )\n    return ax", "compilation_passed": true, "time": 0.0013620853424072266, "tests_passed": false, "error": "ValueError"}
{"code": "# Convert the DataFrame to a Seaborn DataFrame\n    df_seaborn = sns.load_dataset(data)\n    df_seaborn.set_index('name', inplace=True)\n\n    # Draw a heatmap for the Seaborn DataFrame\n    return sns.heatmap(df_seaborn, title='Correlation Matrix', cmap='YlGnBu')", "compilation_passed": true, "time": 0.043211936950683594, "tests_passed": false, "error": "ValueError"}
{"code": "ax = sns.heatmap(data, annot=True, title=\"Correlation Matrix\", fmt='.2f', cbar_kws={\"label\": \"Correlation\"}, cbar=True)\n    return ax", "compilation_passed": true, "time": 0.0023331642150878906, "tests_passed": false, "error": "ValueError"}
{"code": "corr = data.corr()\n    return sns.heatmap(corr, annot=True, fmt='.3f')", "compilation_passed": true, "time": 0.0008587837219238281, "tests_passed": false, "error": "AttributeError"}
{"code": "return sns.heatmap(\n        data,\n        annot=True,\n        fmt=\".2f\",\n        linewidth=.5,\n        vmin=0,\n        vmax=1,\n        square=True,\n        title=\"Correlation Matrix\",\n    )", "compilation_passed": true, "time": 0.0011489391326904297, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n    return sns.heatmap(df.corr(), annot=True, fmt='.2f', linewidths=.5, cmap='Blues')", "compilation_passed": true, "time": 0.36282873153686523, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    df.corr()\n    ax = sns.heatmap(data=df.corr(), annot=True)\n    ax.set_title('Correlation Matrix')\n    return ax", "compilation_passed": true, "time": 0.43641090393066406, "tests_passed": true, "error": null}
{"code": "ax = sns.heatmap(df.corr(), cmap='RdBu')\n    ax.set_title('Correlation Matrix')\n    return ax", "compilation_passed": true, "time": 0.0010251998901367188, "tests_passed": false, "error": "NameError"}
{"code": "# --------------------------------------------------------------------------------------------------\n    # NOTE: Use the provided data\n    # --------------------------------------------------------------------------------------------------\n    data = data\n    # --------------------------------------------------------------------------------------------------\n    # NOTE: Use Seaborn library\n    # --------------------------------------------------------------------------------------------------\n    # sns.set(style='white')\n    # plt.figure(figsize=(15, 10))\n    # sns.heatmap(df, annot=True, cmap='Blues')\n\n    # ---------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0006878376007080078, "tests_passed": true, "error": null}
{"code": "ax = sns.heatmap(data=data, title='Correlation Matrix')\n    return ax", "compilation_passed": true, "time": 0.0009777545928955078, "tests_passed": false, "error": "ValueError"}
