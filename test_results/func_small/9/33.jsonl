{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n\n    sns.set_style('whitegrid', {'grid.linestyle': '-', 'grid.color': '#333333'})\n    sns.set_context('paper', context_kwargs={'size': (4, 3)})\n    sns.barplot(\n        x=\"Category\", y=\"Value\",\n        data=df,\n        errwidth=False,\n    )\n    ax = plt.gca()\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=45)\n    ax.set_title('Category vs Value')\n\n    return df, ax", "compilation_passed": true, "time": 0.002309083938598633, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame({'Category': list(zip(*list_of_pairs))[0],\n                       'Value': list(zip(*list_of_pairs))[1]},\n                      columns=['Category', 'Value'])\n    plt.title('Category vs Value')\n    ax = sns.barplot(data=df, x='Category', y='Value')\n    return df, ax", "compilation_passed": true, "time": 0.011355161666870117, "tests_passed": true, "error": null}
{"code": "# TODO: Complete the function body.\n    df = pd.DataFrame({'Category': [], 'Value': []})\n    ax = plt.figure(figsize=(20, 10)).add_subplot()\n    for pair in list_of_pairs:\n        df = df.append([{'Category': pair[0], 'Value': pair[1]}], ignore_index=True)\n    ax.bar(df.Category, df.Value, color='red')\n\n    ax.set_title(\"Category vs Value\")\n    return df, ax", "compilation_passed": true, "time": 0.01861405372619629, "tests_passed": false, "error": "AttributeError"}
{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    return df, sns.barplot(x='Category', y='Value', data=df)", "compilation_passed": true, "time": 0.014451265335083008, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    ax = sns.barplot(x='Category', y='Value', data=df)\n\n    return df, ax", "compilation_passed": true, "time": 0.00932002067565918, "tests_passed": true, "error": null}
{"code": "# TODO: Implement task_func\n\n    data = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    data['Value'] = pd.Series(list_of_pairs).str[1]\n    ax = data.plot.bar(title='Category vs Value')\n    return data, ax", "compilation_passed": true, "time": 0.021089792251586914, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns = ['Category','Value'])\n    ax = sns.barplot(x='Category', y='Value', data=df)\n    ax.set_title('Category vs Value')\n    return df, ax", "compilation_passed": true, "time": 0.01369786262512207, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame({'Category': [pair[0] for pair in list_of_pairs], 'Value': [pair[1] for pair in list_of_pairs]})\n    ax = sns.barplot(x='Category', y='Value', data=df)\n    ax.set(title='Category vs Value')\n    return df, ax", "compilation_passed": true, "time": 0.009595155715942383, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame({'Category': [pair[0] for pair in list_of_pairs],\n                       'Value': [pair[1] for pair in list_of_pairs]})\n    return df, plt.subplots()", "compilation_passed": true, "time": 0.016461849212646484, "tests_passed": false, "error": "AttributeError"}
{"code": "# create a list of tuples from the input list_of_pairs\n    # ...\n    # ...\n    # create a pandas DataFrame from the DataFrame using pd.DataFrame()\n    # ...\n    # create an Axes using plt.subplots()\n    # ...\n\n    # return the created DataFrame and Axes\n    return df, ax", "compilation_passed": true, "time": 0.0019130706787109375, "tests_passed": false, "error": "NameError"}
{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    ax = sns.barplot(x='Category', y='Value', data=df)\n    ax.set_title('Category vs Value')\n    return df, ax", "compilation_passed": true, "time": 0.06725883483886719, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    return df, ax.bar(x='Category', height='Value')", "compilation_passed": true, "time": 0.0020508766174316406, "tests_passed": false, "error": "NameError"}
{"code": "# Your code goes here\n    df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    ax = sns.barplot(x='Category', y='Value', data=df)\n    plt.title('Category vs Value')\n    return df, ax", "compilation_passed": true, "time": 0.08657312393188477, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns=[\"Category\", \"Value\"])\n    ax = sns.barplot(data=df, x=\"Category\", y=\"Value\")\n    return df, ax", "compilation_passed": true, "time": 0.07237982749938965, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns = ['Category', 'Value'])\n\n    ax = sns.barplot(x='Category', y='Value', data=df)\n    plt.title('Category vs Value')\n\n    return (df, ax)", "compilation_passed": true, "time": 0.07218790054321289, "tests_passed": true, "error": null}
{"code": "# BEGIN Question 0\n    df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    ax = df.plot(kind='bar')\n    # END Question 0\n    return df, ax", "compilation_passed": true, "time": 0.021743059158325195, "tests_passed": true, "error": null}
{"code": "# Task 1 - create the DataFrame using a dictionary\n    dict_data = {}\n    for pair in list_of_pairs:\n        key, value = pair\n        dict_data[key] = value\n\n    df = pd.DataFrame.from_dict(dict_data)\n\n    # Task 2 - create the Axes using seaborn\n    ax = sns.barplot(data=df, x='Category', y='Value')\n\n    # Task 3 - set the title\n    ax.set_title('Category vs Value')\n\n    return df, ax", "compilation_passed": true, "time": 0.002407073974609375, "tests_passed": false, "error": "ValueError"}
{"code": "# YOUR CODE\n\n    # pandas\n    df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n\n    # matplotlib.pyplot\n    plt.bar(df['Category'], df['Value'], label='Value')\n    plt.title('Category vs Value')\n    plt.ylabel('Value')\n    plt.xlabel('Category')\n    plt.legend()\n\n    # seaborn\n    sns.barplot(x='Category', y='Value', data=df)\n\n    return df, plt.gca()", "compilation_passed": true, "time": 0.011850118637084961, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    df = df.set_index('Category')\n    ax = sns.barplot(data=df)\n\n    return df, ax", "compilation_passed": true, "time": 0.017229080200195312, "tests_passed": false, "error": "KeyError"}
{"code": "df = pd.DataFrame(list_of_pairs, columns=[\"Category\", \"Value\"])\n    ax = sns.barplot(data=df, y='Category', x='Value')\n    ax.set_title('Category vs Value')\n    return df, ax", "compilation_passed": true, "time": 0.01156926155090332, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns=[\"Category\", \"Value\"])\n\n    sns.barplot(x=\"Category\", y=\"Value\", data=df)\n    plt.title('Category vs Value')\n    return df, plt.gca()", "compilation_passed": true, "time": 0.009460926055908203, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    ax = sns.barplot(x='Category', y='Value', data=df)\n    return df, ax", "compilation_passed": true, "time": 0.009719610214233398, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    df = sns.barplot(data=df)\n    return df, ax", "compilation_passed": true, "time": 0.016123056411743164, "tests_passed": false, "error": "NameError"}
{"code": "df = pd.DataFrame(list_of_pairs, columns = ['Category', 'Value'])\n    ax = df.plot.bar(rot=0, title='Category vs Value', color=\"green\", figsize=(8, 4), grid=True)\n\n    return (df, ax)", "compilation_passed": true, "time": 0.02043318748474121, "tests_passed": true, "error": null}
{"code": "pass", "compilation_passed": true, "time": 0.0023212432861328125, "tests_passed": false, "error": "TypeError"}
{"code": "data = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    df = data.set_index('Category')\n    fig, ax = plt.subplots(figsize=(20, 5))\n    df = ax.bar(df.index, df['Value'])\n    return df, ax", "compilation_passed": true, "time": 0.019841670989990234, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(list_of_pairs, columns = ['Category', 'Value'])\n    return (df, plt.bar(df.index, df.Value, color='lightblue'))", "compilation_passed": true, "time": 0.003265857696533203, "tests_passed": false, "error": "AttributeError"}
{"code": "list_of_pairs = sorted(list_of_pairs, key=lambda x: x[1])\n    df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n    plt.barh(df.index, df['Value'], label='Value')\n    plt.legend()\n    return df, plt.gca()", "compilation_passed": true, "time": 0.0035986900329589844, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list_of_pairs, columns=['Category', 'Value'])\n\n    # Set the title of the plot\n    ax = df.plot(kind='bar', title='Category vs Value')\n    return df, ax", "compilation_passed": true, "time": 0.020487070083618164, "tests_passed": true, "error": null}
