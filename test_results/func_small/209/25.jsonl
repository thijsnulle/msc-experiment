{"code": "plt.scatter(*zip(*data))\n    # TODO: return the Axes object from matplotlib.pyplot.\n    plt.title(\"Max Tuple Highlighted\")\n    plt.xlabel(\"x\")\n    plt.ylabel(\"y\")\n    plt.legend()\n    return plt.gca()", "compilation_passed": true, "time": 0.0031020641326904297, "tests_passed": true, "error": null}
{"code": "ax = plt.gca()\n    ax.scatter(data, [x[1] for x in data])\n\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend([f\"({data[0][0]},{data[0][1]})\",f\"({data[1][0]},{data[1][1]})\",f\"({data[2][0]},{data[2][1]})\"])\n    return ax", "compilation_passed": true, "time": 0.0016279220581054688, "tests_passed": false, "error": "ValueError"}
{"code": "x = data.keys()\n    y = data.values()\n    x = list(x)\n    y = list(y)\n    # ymax = np.max(y)\n    # print(\"ymax: \", ymax)\n    # print(\"y: \", y)\n    # index = y.index(ymax)\n    # print(\"index: \", index)\n    # print(\"x: \", x)\n    # print(\"y: \", y)\n    ax = plt.scatter(x,y)\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"y\")\n    ax.set_title(\"Max Tuple Highlighted\")\n    ax.legend([f\"({x}, {y})\"])\n    return ax", "compilation_passed": true, "time": 0.0013489723205566406, "tests_passed": false, "error": "AttributeError"}
{"code": "# Use `plt.scatter` to plot a scatter graph\n    ax = plt.scatter(data)\n    # Highlight the tuple with the maximum value at index 1\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend()\n    return ax", "compilation_passed": true, "time": 0.0013041496276855469, "tests_passed": false, "error": "TypeError"}
{"code": "fig, ax = plt.subplots()\n    # write code below to plot scatter plot\n    # highlight tuple with maximum value at index 1\n    max_value = max(data, key=lambda t: t[1])\n    ax.scatter([x[0] for x in data], [x[1] for x in data], label=str(max_value))\n\n    ax.set(\n        xlabel='x',\n        ylabel='y'\n    )\n    ax.legend()\n    ax.set_title(\"Max Tuple Highlighted\")\n    return ax", "compilation_passed": true, "time": 0.005558967590332031, "tests_passed": false, "error": "IndexError"}
{"code": "x,y=itemgetter(0,1)(data)\n    ax = plt.scatter(x, y, linewidth=2)\n    plt.xlabel('x')\n    plt.ylabel('y')\n    plt.title(\"Max Tuple Highlighted\")\n    ax.legend(loc='lower right')\n    return ax", "compilation_passed": true, "time": 0.0020339488983154297, "tests_passed": false, "error": "AttributeError"}
{"code": "max_tuple = max(data, key=itemgetter(1))\n    x, y = max_tuple\n    return plt.scatter(x, y, label='Max Tuple Highlighted')", "compilation_passed": true, "time": 0.0018970966339111328, "tests_passed": false, "error": "AttributeError"}
{"code": "return plt.scatter(*zip(*data),\n                      marker=\"o\",\n                      alpha=0.8,\n                      color='k')", "compilation_passed": true, "time": 0.001867055892944336, "tests_passed": false, "error": "AttributeError"}
{"code": "# TODO: Plot a scatter graph of the data.\n    # HINT:\n    # - Import numpy and matplotlib.pyplot\n    # - Use a comprehension list to get the max_val of the second item in the data\n\n    data = [(10, 20), (30, 40), (25, 50)]\n    max_val = max(data, key=lambda x: x[1])\n    max_val = max_val[1]\n    data_points = [(x, y) for x, y in data]\n    ax = plt.figure().add_subplot(111)\n    ax.scatter(data_points[0], data_points[1])\n    ax.set_title(\"Max Tuple Highlighted\")\n    ax.set_ylabel(\"y\")\n    ax.set_xlabel(\"x\")\n    ax.legend([str(max_val)])\n    return ax", "compilation_passed": true, "time": 0.005308866500854492, "tests_passed": true, "error": null}
{"code": "plt.scatter(*zip(*data), marker='x')\n    # Your code goes here\n    ax = plt.gca()\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend(['max'])\n    return ax", "compilation_passed": true, "time": 0.0025899410247802734, "tests_passed": true, "error": null}
{"code": "# sort tuples by second integer using operator module and itemgetter function\n    data.sort(key=itemgetter(1))\n    # select the last tuple\n    max_tuple = data[-1]\n    # plot the data\n    x = [x for (x, y) in data]\n    y = [y for (x, y) in data]\n    ax = plt.scatter(x, y)\n    # highlight the tuple\n    ax.plot([max_tuple[0]], [max_tuple[1]], marker='x', color='red')\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend(['Max Tuple Highlighted'])\n    return ax", "compilation_passed": true, "time": 0.002023935317993164, "tests_passed": false, "error": "AttributeError"}
{"code": "fig = plt.figure()\n    ax = fig.add_subplot(1, 1, 1)\n    ax.plot(data, marker='o', color='black')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend(['Tuple 1'])\n    ax.set_title('Max Tuple Highlighted')\n    return ax", "compilation_passed": true, "time": 0.00504612922668457, "tests_passed": false, "error": "IndexError"}
{"code": "data = np.array(data)\n    max_tuple_index = np.argmax(data[:, 1])\n    fig, ax = plt.subplots()\n    ax.scatter(data[:, 0], data[:, 1])\n    ax.set_title(\"Max Tuple Highlighted\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"y\")\n    ax.legend(labels=['data'])\n\n    return ax", "compilation_passed": true, "time": 0.00563812255859375, "tests_passed": false, "error": "IndexError"}
{"code": "x, y = zip(*data)\n    fig, ax = plt.subplots()\n    ax.scatter(x, y)\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend(['Max Tuple'])\n    return ax", "compilation_passed": true, "time": 0.005182981491088867, "tests_passed": false, "error": "IndexError"}
{"code": "x = np.array([tup[0] for tup in data])\n    y = np.array([tup[1] for tup in data])\n\n    ax = plt.scatter(x, y, label='Scatter Graph')\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend(loc='best')\n\n    return ax", "compilation_passed": true, "time": 0.0019989013671875, "tests_passed": false, "error": "AttributeError"}
{"code": "ax = plt.scatter([i[0] for i in data], [i[1] for i in data], color='b')\n    ax.scatter([data[np.argmax(np.array(data))][0]], [data[np.argmax(np.array(data))][1]], marker=\"x\", s=200)\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend(['Data', 'Max'])\n    return ax", "compilation_passed": true, "time": 0.0019788742065429688, "tests_passed": false, "error": "AttributeError"}
{"code": "# Create a figure and an empty axes\n    fig, ax = plt.subplots()\n\n    # Plot the data using the first column as the x-values and the second column as the y-values\n    ax.scatter(data[:, 0], data[:, 1])\n\n    # Find the maximum value in the second column of the data\n    max_val = max(data[:, 1])\n\n    # Use the index of the maximum value to find the corresponding tuple in the data\n    max_index = np.where(data[:, 1] == max_val)[0][0]\n\n    # Highlight the tuple using a red color and a square marker\n    ax.scatter([data[max_index, 0]], [data[max_index, 1]], marker='s', c='red', s=300)\n\n    # Set the plot title, x-axis label, and y-axis label\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n\n    # Display the plot", "compilation_passed": true, "time": 0.004765033721923828, "tests_passed": false, "error": "TypeError"}
{"code": "ax = plt.figure().add_subplot(1,1,1)\n    ax.scatter(np.array(data)[:,0], np.array(data)[:,1], marker='.')\n    x,y=zip(*sorted(data, key=itemgetter(1), reverse=True))\n    ax.plot(x, y, '.', label='Max Tuple Highlighted')\n    ax.set(xlabel='x', ylabel='y', title='Max Tuple Highlighted')\n    ax.legend(loc='upper left')\n    plt.show()\n    return ax", "compilation_passed": true, "time": 0.0056498050689697266, "tests_passed": false, "error": "IndexError"}
{"code": "fig, ax = plt.subplots()\n    for x, y in data:\n        ax.scatter(x, y)\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend()\n    return ax", "compilation_passed": true, "time": 0.007052898406982422, "tests_passed": true, "error": null}
{"code": "# Task 2:\n    # plt.scatter([x[0] for x in data], [x[1] for x in data])\n    plt.scatter([x[0] for x in data], [x[1] for x in data], s=50, c='blue', marker='o')\n    # plt.plot([x[0] for x in data], [x[1] for x in data], c='black')\n    # plt.plot([data[1][0], data[2][0]], [data[1][1], data[2][1]], c='red')\n    ax = plt.gca()\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.set_title('Max Tuple Highlighted')\n    ax.legend(['Max Tuple Highlighted'])\n    return ax", "compilation_passed": true, "time": 0.0024929046630859375, "tests_passed": true, "error": null}
{"code": "ax = plt.subplots()[1]\n    x = [i[0] for i in data]\n    y = [i[1] for i in data]\n    max_value = max(data, key=itemgetter(1))[1]\n    ax.scatter(x, y, label=max_value)\n    ax.set_title(\"Max Tuple Highlighted\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"y\")\n    ax.legend()\n    return ax", "compilation_passed": true, "time": 0.005220174789428711, "tests_passed": false, "error": "IndexError"}
{"code": "# Plot a scatter graph of tuples and highlight the tuple with the maximum value at index 1\n    x = [i[0] for i in data]\n    y = [i[1] for i in data]\n    ax = plt.scatter(x, y, color='red', label='Max Tuple Highlighted')\n    ax.set_title('Max Tuple Highlighted')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend()\n    return ax", "compilation_passed": true, "time": 0.0019099712371826172, "tests_passed": false, "error": "AttributeError"}
{"code": "plt.scatter([x[0] for x in data], [x[1] for x in data], label='data')\n    max_val = max(data, key=itemgetter(1))\n    plt.scatter(max_val[0], max_val[1], color='r', label='Max Tuple Highlighted')\n    plt.xlabel('x')\n    plt.ylabel('y')\n    plt.legend()\n    plt.title('Max Tuple Highlighted')\n    plt.show()\n    return ax", "compilation_passed": true, "time": 0.0036270618438720703, "tests_passed": false, "error": "NameError"}
{"code": "# Set the title of the plot\n    plt.title('Max Tuple Highlighted')\n\n    # Set the x and y axis labels\n    plt.xlabel('x')\n    plt.ylabel('y')\n\n    # Add a legend\n    plt.legend()\n\n    # Plot the graph\n    plt.scatter(*zip(*data))\n\n    # Highlight the tuple with the maximum value at index 1\n    x, y = zip(*data)\n    max_idx = x.index(max(x))\n    plt.scatter(x[max_idx], y[max_idx], color='red')\n\n    return plt.gca()", "compilation_passed": true, "time": 0.003244638442993164, "tests_passed": false, "error": "ValueError"}
{"code": "# Define the maximum tuple index using itemgetter\n    max_index = itemgetter(1)(data)\n    # Use the max_index to create the color map\n    cmap = plt.get_cmap('bwr')\n\n    # Create the plot and set the title, x-axis label, and y-axis label\n    ax = plt.subplot(111)\n    ax.set_title(\"Max Tuple Highlighted\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"y\")\n    # Plot the data\n    ax.scatter(*zip(*data), c=cmap(max_index), marker='o', lw=1.5, s=100)\n    # Add the legend\n    ax.legend()\n    # Return the axes object\n    return ax", "compilation_passed": true, "time": 0.0019273757934570312, "tests_passed": false, "error": "ValueError"}
{"code": "ax = plt.gca()\n    ax.plot(*zip(*data))\n\n    x, y = zip(*data)\n    ax.scatter(x, y, s=50, marker='o', color='b')\n\n    idx = x.index(max(x))\n    ax.scatter(x[idx], y[idx], s=100, c='r')\n\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.set_title('Max Tuple Highlighted')\n    ax.legend(['Data', 'Max Tuple'])\n\n    return ax", "compilation_passed": true, "time": 0.0032148361206054688, "tests_passed": false, "error": "ValueError"}
{"code": "# Sort the tuples by the second element\n    sorted_data = sorted(data, key=itemgetter(1), reverse=True)\n\n    # Create an empty figure\n    fig, ax = plt.subplots()\n\n    # Plot the scatter graph\n    ax.scatter([x[0] for x in data], [x[1] for x in data])\n\n    # Set the title of the plot\n    ax.set_title('Max Tuple Highlighted')\n\n    # Set the labels of the x and y axes\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n\n    # Add a legend\n    ax.legend()\n\n    # Show the plot\n    plt.show()\n\n    # Return the Axes object\n    return ax", "compilation_passed": true, "time": 0.005614042282104492, "tests_passed": false, "error": "IndexError"}
{"code": "fig, ax = plt.subplots()\n    x, y = [*zip(*data)]\n    ax.scatter(x, y)\n    ax.set_title(\"Max Tuple Highlighted\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"y\")\n    ax.legend()\n    return ax", "compilation_passed": true, "time": 0.004925966262817383, "tests_passed": false, "error": "IndexError"}
{"code": "ax = plt.subplot()\n    ax.scatter(*zip(*data))\n    ax.plot([itemgetter(0)(x) for x in data], [itemgetter(1)(x) for x in data])\n    ax.set_title(\"Max Tuple Highlighted\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"y\")\n    ax.legend()\n    return ax", "compilation_passed": true, "time": 0.0025637149810791016, "tests_passed": false, "error": "ValueError"}
{"code": "ax = plt.scatter(data[0][0], data[0][1], marker='^', s=100, color='k', label='First')\n    ax.set_title('Max Tuple Highlighted', fontweight='bold', fontsize='10')\n    ax.set_xlabel('x', fontweight='bold', fontsize='7')\n    ax.set_ylabel('y', fontweight='bold', fontsize='7')\n    ax.legend(loc='lower left', bbox_to_anchor=(0, 1), prop={\"size\": 6}, borderaxespad=0, frameon=False)\n\n    return ax", "compilation_passed": true, "time": 0.001971006393432617, "tests_passed": false, "error": "AttributeError"}
