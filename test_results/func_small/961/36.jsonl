{"code": "directory = os.path.expanduser(directory)\n    if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist\")\n\n    result = Counter()\n    for root, dirs, files in os.walk(directory):\n        for ext in extensions:\n            result[ext] += len([f for f in files if f.lower().endswith(ext)])\n\n        if not keep_zero:\n            result = {ext: count for ext, count in result.items() if count > 0}\n\n    return result", "compilation_passed": true, "time": 0.005624055862426758, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"'{directory}' is not a valid directory\")\n\n    total = Counter()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            # Only count files with the specified extensions\n            if any(file.endswith(ext) for ext in extensions):\n                ext = os.path.splitext(file)[1].lower()\n                total[ext] += 1\n\n    # Remove files with zero extensions\n    if not keep_zero:\n        total = total.most_common()\n        total = {ext: count for ext, count in total if count}\n\n    return total", "compilation_passed": true, "time": 0.00591278076171875, "tests_passed": true, "error": null}
{"code": "try:\n        files = glob.glob(os.path.join(directory, '**'), recursive=True)\n    except:\n        raise OSError('Directory does not exist')\n\n    extensions_counts = Counter()\n\n    for file in files:\n        _, extension = os.path.splitext(file)\n        if extension.lower() in extensions:\n            extensions_counts[extension] += 1\n\n    # Remove extensions with zero counts (if keep_zero is False)\n    if not keep_zero:\n        extensions_counts = dict(extensions_counts)\n        for extension, count in list(extensions_counts.items()):\n            if count == 0:\n                del extensions_counts[extension]\n\n    return extensions_counts", "compilation_passed": true, "time": 0.0024802684783935547, "tests_passed": true, "error": null}
{"code": "directory = os.path.abspath(directory)\n\n    if not os.path.exists(directory):\n        raise OSError('Directory does not exist')\n\n    files_counter = Counter()\n\n    for root, _, files in os.walk(directory):\n        for file in files:\n            for extension in extensions:\n                if extension in file and os.path.splitext(file)[1] == extension:\n                    files_counter[extension] += 1\n\n    if not keep_zero:\n        for extension in extensions:\n            if extension not in files_counter:\n                files_counter.update([extension])\n\n    return files_counter", "compilation_passed": true, "time": 0.004487276077270508, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(\"Directory does not exist\")\n    extensions_to_count = {ext.lower() for ext in extensions}\n    extensions_to_count |= {\".\" + ext for ext in extensions}\n    total_count = Counter()\n    files_count = Counter()\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_ext = os.path.splitext(file)[-1]\n            file_ext = file_ext.lower()\n            if file_ext in extensions_to_count:\n                total_count.update([file_ext])\n                files_count.update([file_ext])\n\n    if not keep_zero:\n        return total_count - total_count.get(\".\", 0)\n    return files_count", "compilation_passed": true, "time": 0.004374027252197266, "tests_passed": false, "error": "TypeError"}
{"code": "if not os.path.exists(directory):\n        raise OSError(\"Directory not found\")\n\n    counts = Counter()\n    for filename in glob.glob(os.path.join(directory, \"**/*\"), recursive=True):\n        for extension in extensions:\n            if os.path.splitext(filename)[1].lower() == extension.lower():\n                counts[extension] += 1\n\n    if not keep_zero:\n        counts = {extension: count for extension, count in counts.items() if count > 0}\n\n    return counts", "compilation_passed": true, "time": 0.005118131637573242, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory '{directory}' does not exist.\")\n\n    extensions_counts = Counter()\n\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for extension in extensions:\n            if extension in extensions_counts:\n                extensions_counts[extension] += len(glob.glob(f\"{root}/{extension}\"))\n            else:\n                extensions_counts[extension] = len(glob.glob(f\"{root}/{extension}\"))\n\n    if keep_zero:\n        return extensions_counts\n    else:\n        return {ext: count for ext, count in extensions_counts.items() if count > 0}", "compilation_passed": true, "time": 0.0020978450775146484, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f'Directory {directory} does not exist')\n\n    total_files = 0\n    file_count = Counter()\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            filename, extension = os.path.splitext(file)\n            if extension.lower() in [ext.lower() for ext in extensions]:\n                file_count[extension.lower()] += 1\n                total_files += 1\n\n    # Remove files with zero counts\n    if not keep_zero:\n        for extension in [ext for ext in file_count if file_count[ext] == 0]:\n            del file_count[extension]\n\n    return file_count, total_files", "compilation_passed": true, "time": 0.0019876956939697266, "tests_passed": true, "error": null}
{"code": "file_counters = {}\n    if os.path.exists(directory) is False:\n        raise OSError(f'Directory {directory} does not exist')\n    for extension in extensions:\n        file_counters[extension] = 0\n    for root, directories, files in os.walk(directory):\n        for file in files:\n            if not os.path.splitext(file)[1] in extensions:\n                continue\n            file_counters[os.path.splitext(file)[1]] += 1\n    file_counters = {extension: count for extension, count in file_counters.items() if not extension == '' or keep_zero}\n    return Counter(file_counters)", "compilation_passed": true, "time": 0.0050771236419677734, "tests_passed": true, "error": null}
{"code": "try:\n        os.path.isdir(directory)\n    except OSError:\n        raise ValueError(f\"Directory '{directory}' not found\")\n\n    file_counts = Counter()\n\n    for root, _, files in os.walk(directory):\n        for file_name in files:\n            if file_name.endswith(extensions):\n                full_path = os.path.join(root, file_name)\n                file_counts.update({\n                    ext: glob.glob(f\"{full_path}.{ext}\").__len__()\n                    for ext in extensions\n                })\n\n    if keep_zero:\n        return file_counts\n\n    return {\n        ext: count\n        for ext, count in file_counts.items()\n        if count != 0\n    }", "compilation_passed": true, "time": 0.002286195755004883, "tests_passed": false, "error": "TypeError"}
{"code": "if not os.path.exists(directory):\n        raise OSError(\"Directory does not exist!\")\n\n    counters = Counter()\n    extensions_set = set(extensions)\n\n    for root, _, files in os.walk(directory):\n        for file in files:\n            if os.path.splitext(file)[1] in extensions_set:\n                counters[os.path.splitext(file)[1]] += 1\n\n    for extension, count in counters.copy().items():\n        if count == 0 and not keep_zero:\n            counters.pop(extension)\n\n    return counters", "compilation_passed": true, "time": 0.006033897399902344, "tests_passed": true, "error": null}
{"code": "try:\n        directory = os.path.expanduser(directory)\n        if not os.path.isdir(directory):\n            raise OSError(f\"'{directory}' is not a valid directory\")\n\n        extensions = set([e.lower() for e in extensions])\n\n        # Count files in each directory\n        counts = Counter()\n        for root, dirs, files in os.walk(directory):\n            for ext in extensions:\n                counts[ext] += len(glob.glob(os.path.join(root, f'*{ext}')))\n\n        if not keep_zero:\n            counts = Counter({k: v for k, v in counts.items() if v != 0})\n\n        return counts\n\n    except Exception as e:\n        print(f\"An error occurred while counting files: {e}\")\n        return None", "compilation_passed": true, "time": 0.0025899410247802734, "tests_passed": true, "error": null}
{"code": "directory = os.path.abspath(directory)\n    if not os.path.isdir(directory):\n        raise OSError(\"Directory does not exist\")\n\n    extensions = set(extensions)\n    file_counters = Counter()\n\n    for root, _, filenames in os.walk(directory):\n        for filename in filenames:\n            _, extension = os.path.splitext(filename)\n            if extension in extensions:\n                file_counters.update([extension])\n\n    if keep_zero:\n        return file_counters\n    else:\n        return Counter({extension: count for extension, count in file_counters.items() if count > 0})", "compilation_passed": true, "time": 0.004871368408203125, "tests_passed": true, "error": null}
{"code": "try:\n        directory_files = glob.glob(os.path.join(directory, \"**\"), recursive=True)\n        extensions_count = Counter(f.lower() for f in directory_files if any(f.lower().endswith(ext) for ext in extensions))\n    except OSError:\n        return None\n\n    if not keep_zero:\n        extensions_count = {\n            extension: count for extension, count in extensions_count.items() if count > 0\n        }\n\n    return extensions_count", "compilation_passed": true, "time": 0.0021882057189941406, "tests_passed": true, "error": null}
{"code": "directory = os.path.realpath(directory)\n    if not os.path.exists(directory):\n        raise OSError('Directory does not exist')\n    extension_counts = Counter()\n\n    for root, _, files in os.walk(directory):\n        for filename in files:\n            extension = os.path.splitext(filename)[-1].lower()\n            if extension in extensions:\n                extension_counts[extension] += 1\n\n    if not keep_zero:\n        extension_counts = {extension: count for extension, count in extension_counts.items() if count > 0}\n\n    return extension_counts", "compilation_passed": true, "time": 0.005217790603637695, "tests_passed": true, "error": null}
{"code": "file_counts = Counter()\n    for root, _, files in os.walk(directory):\n        for file in files:\n            if any(file.endswith(ext) for ext in extensions):\n                file_counts[os.path.splitext(file)[1]] += 1\n    return file_counts", "compilation_passed": true, "time": 0.0024869441986083984, "tests_passed": true, "error": null}
{"code": "try:\n        os.path.exists(directory)\n    except FileNotFoundError as err:\n        raise err\n\n    file_paths = []\n    for root, dirs, files in os.walk(directory, topdown=True):\n        for name in files:\n            for ext in extensions:\n                if name.endswith(ext):\n                    file_paths.append(os.path.join(root, name))\n\n    # Get extensions and counts of files\n    file_exts = Counter()\n    for path in file_paths:\n        ext = path.split(\".\")[-1]\n        file_exts[ext] += 1\n\n    # If keep_zero is True, keep all extensions\n    if keep_zero:\n        return file_exts\n\n    # Else, keep only extensions with non-zero counts\n    return Counter({key: value for key, value in file_exts.items() if value != 0})", "compilation_passed": true, "time": 0.002410411834716797, "tests_passed": true, "error": null}
{"code": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise OSError(\"Directory not found: {}\".format(directory))\n\n    # List all the files in the directory and its subdirectories\n    files = glob.glob(os.path.join(directory, '**', '*'), recursive=True)\n\n    # Remove .gitkeep files\n    files = [file for file in files if not file.endswith('.gitkeep')]\n\n    # Remove files with specified extensions and count them\n    extension_counts = Counter([os.path.splitext(file)[1] for file in files if file.lower().endswith(tuple(extensions))])\n\n    # Remove files with zero counts\n    if not keep_zero:\n        extension_counts = {key: value for key, value in extension_counts.items() if value != 0}\n\n    return extension_counts", "compilation_passed": true, "time": 0.006396055221557617, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory '{directory}' does not exist.\")\n\n    all_extensions = [ext.lstrip(\".\").lower() for ext in extensions]\n    counter = Counter()\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            name, ext = os.path.splitext(file)\n            if ext.lstrip(\".\").lower() in all_extensions:\n                counter[ext.lstrip(\".\").lower()] += 1\n\n    if keep_zero:\n        return counter\n    else:\n        return Counter({key: count for key, count in counter.items() if count != 0})", "compilation_passed": true, "time": 0.0020787715911865234, "tests_passed": true, "error": null}
{"code": "try:\n        os.path.exists(directory)\n    except:\n        raise OSError(\"Directory does not exist.\")\n\n    extensions_map = Counter()\n\n    for file_path in glob.glob(os.path.join(directory, \"**\", \"*.*\"), recursive=True):\n        if any(file_path.endswith(ext) for ext in extensions):\n            extension = os.path.splitext(file_path)[1]\n            if keep_zero or extensions_map[extension]:\n                extensions_map[extension] += 1\n\n    return extensions_map", "compilation_passed": true, "time": 0.002681732177734375, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist\")\n    extensions = set(extensions)\n\n    total_files = Counter()\n\n    for path, _, filenames in os.walk(directory):\n        for filename in filenames:\n            base, ext = os.path.splitext(filename)\n            if ext.lower() in extensions:\n                total_files[ext.lower()] += 1\n\n    if not keep_zero:\n        total_files -= Counter({'.txt': 0, '.docx': 0, '.xlsx': 0, '.csv': 0})\n\n    return total_files", "compilation_passed": true, "time": 0.00570225715637207, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' not found.\")\n\n    extensions_counts = Counter()\n\n    for extension in extensions:\n        # Get all files with specified extension and their relative paths\n        file_paths = glob.glob(os.path.join(directory, f\"*{extension}\"))\n\n        # Get the absolute paths of all files that meet the specified extension\n        for path in file_paths:\n            extensions_counts[os.path.splitext(path)[1][1:]] += 1\n\n    # Include all extensions with zero counts if keep_zero is True\n    for extension in extensions_counts.keys():\n        if extensions_counts[extension] == 0 and keep_zero:\n            extensions_counts[extension] += 1\n\n    return extensions_counts", "compilation_passed": true, "time": 0.0021829605102539062, "tests_passed": true, "error": null}
{"code": "try:\n        dir_contents = glob.glob(os.path.join(directory, '**', '*.*'), recursive=True)\n    except FileNotFoundError:\n        raise OSError(f\"Directory {directory} not found.\")\n    if not extensions:\n        return Counter()\n    extension_counts = Counter(os.path.splitext(filename)[1] for filename in dir_contents if os.path.isfile(filename) and os.path.splitext(filename)[1] in extensions)\n    if keep_zero:\n        return extension_counts\n    return extension_counts.items()", "compilation_passed": true, "time": 0.0024220943450927734, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError('Directory not found')\n\n    extensions = [ext.lower() for ext in extensions]\n    all_files = glob.glob(os.path.join(directory, '**/*'), recursive=True)\n    counts = Counter()\n    for file in all_files:\n        base_name, ext = os.path.splitext(file)\n        if ext.lower() in extensions:\n            counts[ext] += 1\n\n    if not keep_zero:\n        counts = {key: value for key, value in counts.items() if value > 0}\n\n    return counts", "compilation_passed": true, "time": 0.00515294075012207, "tests_passed": true, "error": null}
{"code": "try:\n        os.path.exists(directory)\n    except OSError:\n        raise OSError(\"Directory doesn't exist!\")\n\n    file_counts = Counter()\n    extensions = [f\"*.{ext.strip('.')}\" for ext in extensions]\n    file_paths = [glob.glob(f\"{directory}/{pattern}\") for pattern in extensions]\n    files_list = list(set(sum(file_paths, [])))\n    for f in files_list:\n        extension = os.path.splitext(f)[-1].lower()\n        if extension not in file_counts:\n            file_counts[extension] = 1\n        else:\n            file_counts[extension] += 1\n\n    if not keep_zero:\n        for extension, count in list(file_counts.items()):\n            if not count:\n                del file_counts[extension]\n\n    return file_counts", "compilation_passed": true, "time": 0.002613067626953125, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(\"Directory does not exist!\")\n    #\n    # Get files in the given directory\n    #\n    files = glob.glob(os.path.join(directory, \"**\"), recursive=True)\n    counter = Counter(\n        (file.rsplit(\".\")[-1].lower() for file in files if os.path.isfile(file))\n    )\n    for extension in extensions:\n        #\n        # Remove extensions which don't have any files\n        #\n        if extension not in counter:\n            counter.pop(extension)\n    if keep_zero:\n        pass\n    else:\n        for extension in counter:\n            if counter[extension] == 0:\n                counter.pop(extension)\n    return counter", "compilation_passed": true, "time": 0.0021262168884277344, "tests_passed": false, "error": "KeyError"}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} does not exist.\")\n\n    extension_counts = Counter()\n    for extension in extensions:\n        extension_counts[extension] = 0\n\n    for root, _, filenames in os.walk(directory):\n        for filename in filenames:\n            if os.path.splitext(filename)[1].lower() in extensions:\n                extension_counts[os.path.splitext(filename)[1]] += 1\n\n    if keep_zero:\n        return extension_counts\n    else:\n        non_zero_counts = {k: v for k, v in extension_counts.items() if v > 0}\n        return Counter(non_zero_counts)", "compilation_passed": true, "time": 0.006010770797729492, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(directory):\n        raise OSError(\"The specified directory does not exist.\")\n    counter = Counter()\n\n    for filename in glob.glob(os.path.join(directory, '**', '*'), recursive=True):\n        if os.path.isfile(filename) and any([filename.endswith(extension) for extension in extensions]):\n            counter[os.path.splitext(filename)[1]] += 1\n\n    if keep_zero:\n        return counter\n    return Counter(filter(lambda x: x[1], counter.items()))", "compilation_passed": true, "time": 0.005126953125, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} does not exist\")\n\n    files = []\n    for root, _, files_ in os.walk(directory):\n        for file_ in files:\n            if any(file_.endswith(extension) for extension in extensions):\n                files.append(file_)\n    result = Counter(\n        {extension: len([file_ for file_ in files if file_.endswith(extension)])\n         for extension in extensions})\n    if keep_zero:\n        return result\n    else:\n        return Counter(\n            {extension: count for extension, count in result.items() if count != 0})", "compilation_passed": true, "time": 0.002174854278564453, "tests_passed": true, "error": null}
{"code": "try:\n        # Check if the specified directory exists\n        if not os.path.exists(directory):\n            raise OSError('Directory does not exist')\n        else:\n            extensions = list(map(lambda x: x.lower(), extensions))\n            result = Counter()\n\n            for path in glob.glob(f'{directory}/*'):\n                if not os.path.isfile(path):\n                    continue\n                extension = os.path.splitext(path)[1].lower()\n\n                if extension in extensions or (not extensions and not keep_zero):\n                    result[extension] += 1\n            return result\n\n    except Exception as e:\n        print(e)\n        return Counter()", "compilation_passed": true, "time": 0.002357959747314453, "tests_passed": true, "error": null}
