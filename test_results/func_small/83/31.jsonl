{"code": "app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_DEFAULT_SENDER'] = smtp_user\n    app.config['MAIL_MAX_CONTENT_LENGTH'] = 10240\n\n    mail = Mail(app)\n\n    @app.route('/')\n    def send_email():\n        msg = Message(\n            'Testing Flask-Mail',\n            sender=('Example', 'test@example.com'),\n            recipients=['user@example.com'],\n        )\n        msg.html_body = \"\"\"\n            <html>\n                <body>\n                    <p>Hi there!</p>\n                </body>\n            ", "compilation_passed": false, "time": 0.00024008750915527344, "tests_passed": false, "error": "SyntaxError"}
{"code": "# create a Flask app instance\n    app = Flask(__name__)\n\n    # create a Mail instance\n    mail = Mail(app)\n\n    # set up the necessary SMTP configuration dynamically based on provided parameters\n    mail.sender = 'example@gmail.com'\n    mail.receipt = False\n    mail.smtp_server = smtp_server\n    mail.smtp_port = smtp_port\n    mail.smtp_user = smtp_user\n    mail.smtp_password = smtp_password\n\n    # Define a route to send a test email\n    @app.route('/send_test_email', methods=['GET', 'POST'])\n    def send_test_email():\n        if request.method == 'POST':\n            msg = Message('Test email from Flask-Mail',\n                          sender=mail.sender,\n                          receiver='example@gmail.com',\n                          html=f'''<p>Hi,</p>\n                          <p>This is a test email sent using the Flask-Mail module.</p>\n                          <p>Thank you.</p>\n                          ''')", "compilation_passed": true, "time": 0.5819499492645264, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_SENDER'] = 'sender@example.com'\n    app.config['MAIL_MAX_SENDERS'] = 100\n    app.config['MAIL_DEFAULT_SENDER'] = 'sender@example.com'\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_SENDER'] = 'sender@example.com'\n    app", "compilation_passed": true, "time": 0.0012171268463134766, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n\n    app.config['MAIL_DEFAULT_SENDER'] = 'sender@example.com'\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n\n    app.config['MAIL_DEFAULT_SENDER'] = 'sender@example.com'\n\n    mail = Mail(", "compilation_passed": false, "time": 0.0001900196075439453, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n    app.config.from_object('config')\n\n    mail = Mail(app)\n\n    @app.route('/send_test_email', methods=['GET'])\n    def send_test_email():\n        msg = Message('This is an example email!',\n                      sender=('MyApp', app.config['MAIL_USERNAME']),\n                      recipients=['user@example.com'],\n                      html_body=\"<h1>Hello, this is an email with HTML content!</h1>\")\n        mail.send(msg)\n        return 'Email sent!'\n\n    return app", "compilation_passed": true, "time": 0.0009810924530029297, "tests_passed": false, "error": "RuntimeError"}
{"code": "# Define the Flask application object\n    app = Flask(__name__)\n    # Set the Flask application's secret key (insecure for demo purposes)\n    app.config['SECRET_KEY'] = 'secret_key'\n    # Create a Flask application instance configured for sending emails\n    app = Flask(__name__)\n    app.config.update(\n        MAIL_SERVER=smtp_server,\n        MAIL_PORT=smtp_port,\n        MAIL_USERNAME=smtp_user,\n        MAIL_PASSWORD=smtp_password,\n        MAIL_SSL=True,\n        MAIL_USE_TLS=False,\n        MAIL_SENDER='sender@example.com',\n        MAIL_MAX_CONTENT_LENGTH=10000000,\n        MAIL_FAX_PICTURE='/var/www/faxes.png',\n        MAIL_DEBUG=False\n    )\n    # Create the Mail instance with the Flask application\n    mail = Mail(app)\n    # Define a route to send a test email", "compilation_passed": true, "time": 0.0009541511535644531, "tests_passed": false, "error": "RuntimeError"}
{"code": "# Define Flask application object\n    app = Flask(__name__)\n\n    # Configure SMTP settings based on parameters\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n\n    # Configure email template folder\n    app.config['MAIL_TEMPLATE_ROOT'] = template_folder\n\n    # Create Mail instance to handle sending emails\n    mail = Mail(app)\n\n    @app.route('/send-email')\n    def send_test_email():\n        msg = Message('Test Email',\n                      sender=('SMTP Server', smtp_server),\n                      recipients=['recipient@example.com'])\n        msg.body = \"This is the body of the email message.\"\n        mail.send(msg)\n        return 'Email sent successfully!'\n\n    return", "compilation_passed": true, "time": 0.0010042190551757812, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n\n    mail = Mail(app)\n\n    @app.route('/send_email')\n    def send_email():\n        message = Message('Hello, world!', sender='admin@example.com', recipients=['user@example.com'])\n        message.body = 'This is the body of the email.'\n        message.html = '<p>This is the HTML version of the email.</p>'\n        message.attach_alternative(\"This is the alternative text.\", \"text/plain\")\n        message.attach_file(\"attachment.txt\")\n        mail.send(message)\n\n        return \"Email sent successfully.\"", "compilation_passed": true, "time": 0.0009491443634033203, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_DEFAULT_SENDER'] = 'from@example.com'\n\n    app.config['MAIL_TEMPLATES_AUTO_RELOAD'] = True\n    app.config['MAIL_SENDER'] = 'from@example.com'\n    app.config['MAIL_SERVER'] = 'smtp.example.com'\n    app.config['MAIL_PORT'] = 587\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_DEFAULT_SENDER'] = '", "compilation_passed": false, "time": 7.82012939453125e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n    app.config.update(\n        MAIL_SERVER=smtp_server,\n        MAIL_PORT=smtp_port,\n        MAIL_USERNAME=smtp_user,\n        MAIL_PASSWORD=smtp_password,\n        MAIL_USE_TLS=True,\n        MAIL_USE_SSL=True,\n        MAIL_DEFAULT_SENDER='Example <noreply@example.com>',\n    )\n    mail = Mail(app)\n    app.add_url_rule(\n        '/', 'test_send',\n        lambda: Message(app.config['MAIL_DEFAULT_SENDER'], recipients=['user@example.com'])\n    )\n    return app", "compilation_passed": true, "time": 0.0009808540344238281, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_DEFAULT_SENDER'] = 'admin@example.com'\n    app.config['MAIL_TEMPLATES_AUTOGEN'] = True\n    app.config['MAIL_TEMPLATES_DIR'] = template_folder\n    mail = Mail(app)\n\n    @app.route('/send-mail')\n    def send_mail():\n        msg = Message('Test Email', sender='admin@example.com', recipients=['user@example.com'])\n        msg.html = '<p>Hello, this is a test email.</p>'\n        mail.send(msg)\n        return 'Mail Sent!'\n\n    return app", "compilation_passed": true, "time": 0.001004934310913086, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_DEFAULT_SENDER'] = smtp_user\n    app.config['MAIL_SENDER'] = smtp_user\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_DEFAULT_SENDER'] = smtp", "compilation_passed": true, "time": 0.0010190010070800781, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__, static_folder=\"static\",\n                template_folder=template_folder)\n\n    # Creating Mail instance\n    mail = Mail(app)\n\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n\n    @app.route('/mail_send_test')\n    def send_mail():\n        msg = Message('Welcome to Flask', sender='noreply@example.com', recipients=['user@example.com'])\n        msg.html_content = \"<b>Welcome to Flask!</b>\"\n        mail.send(msg)\n        return \"Email Sent!\"\n    return app", "compilation_passed": true, "time": 0.0009720325469970703, "tests_passed": false, "error": "RuntimeError"}
{"code": "# create a Flask application instance\n    app = Flask(__name__)\n\n    # initialize the Mail class\n    mail = Mail(app)\n\n    # set up the SMTP server configuration based on the provided parameters\n    mail.config.update({\n        'SMTP_SERVER': smtp_server,\n        'SMTP_PORT': smtp_port,\n        'SMTP_USER': smtp_user,\n        'SMTP_PASSWORD': smtp_password,\n        'MAIL_SERVER': smtp_server,\n        'MAIL_PORT': smtp_port,\n        'MAIL_USERNAME': smtp_user,\n        'MAIL_PASSWORD': smtp_password,\n        'MAIL_DEBUG': True,\n    })\n\n    # define a route to send a test email\n    @app.route('/send_email')\n    def send_email():\n        # create a new Message instance\n        msg = Message('Test Email', sender='sender@example.com', recipients=['recipient@example.com'])\n\n        # render the template from the specified folder", "compilation_passed": true, "time": 0.0009691715240478516, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_DEFAULT_SENDER'] = 'sender@example.com'\n    app.config['MAIL_SERVER_URI'] = f\"smtp://{smtp_user}:{smtp_password}@{smtp_server}:{smtp_port}\"\n    app.config['MAIL_CONFIG'] = {\n        'MAIL_SERVER': smtp_server,\n        'MAIL_PORT': smtp_port,\n        'MAIL_USERNAME': smtp_user,\n        'MAIL_PASSWORD': smtp_password,\n        'MAIL_SENDER': 'sender@example.com'\n    }\n    app.config['MAIL_TEMPLATES_AUTRE_DIR'] = template_folder\n    mail = Mail(app)\n", "compilation_passed": true, "time": 0.0010178089141845703, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n\n    mail = Mail(app)\n\n    @app.route('/send_email/<name>')\n    def send_email(name):\n        \"\"\"\n        Sends an email using Flask-Mail.\n\n        Parameters:\n            name (str): The name of the user to send the email to.\n\n        Returns:\n            str: A message indicating whether the email was successfully sent.\n\n        Examples:\n        >>> send_email('John Doe')\n        'Email sent successfully to John Doe.'\n        \"\"\"\n        msg = Message(\n            f'Welcome to our app, {name}',\n            sender='test@example.com',\n            recipients=['user@example.com'],\n            html=f'<p>Welcome to our app, {name}</p>',\n        )\n        mail.send(msg)\n        return f'Email sent successfully to {name}.'\n\n    return app", "compilation_passed": true, "time": 0.001035928726196289, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_DEFAULT_SENDER'] = smtp_user\n    app.config['MAIL_USE_TLS'] = True\n\n    mail = Mail(app)\n\n    @app.route('/send_email')\n    def send_test_email():\n        \"\"\"\n        Sends a test email using the configured SMTP credentials.\n        This example assumes that you have already configured the Flask-Mail\n        application and mail.Message class.\n\n        Returns:\n            str: The text of the email that was sent.\n        \"\"\"\n        msg = Message(subject='Test Email', sender='sender@example.com', recipients=['recipient@example.com'])\n        msg.html_body = \"<html><h1>Hello, world!</h1></html>\"", "compilation_passed": true, "time": 0.000982046127319336, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USE_TLS'] = False\n\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n\n    app.config['MAIL_DEFAULT_SENDER'] = 'no-reply@example.com'\n    app.config['MAIL_MAX_EMAILS'] = 1\n    app.config['MAIL_SENDER'] = 'SMTP app'\n\n    app.config['MAIL_TEMPLATE_ROOT'] = template_folder\n\n    mail = Mail(app)\n\n    @app.route(\"/email/send\")\n    def send_mail():\n        msg = Message('Test mail from Flask',\n                      sender=('SMTP app', 'no-reply@example.com'),\n", "compilation_passed": false, "time": 0.00019407272338867188, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Create a Flask app instance\n    app = Flask(__name__)\n\n    # Set up the Mail component and provide the app\n    mail = Mail(app)\n\n    # Set up the SMTP connection details dynamically\n    mail.app.config['MAIL_SERVER'] = smtp_server\n    mail.app.config['MAIL_PORT'] = smtp_port\n    mail.app.config['MAIL_USE_TLS'] = True\n    mail.app.config['MAIL_USE_SSL'] = True\n    mail.app.config['MAIL_USERNAME'] = smtp_user\n    mail.app.config['MAIL_PASSWORD'] = smtp_password\n\n    # Define a route to send a test email\n    @app.route('/send-email')\n    def send_email():\n        # Create a new message object and set recipient addresses\n        msg = Message('Test email from Flask-Mail',\n                      sender=('Flask-Mail Test', 'noreply@example.com'),\n                      recipients=['recipient1@example.com', 'recipient2", "compilation_passed": false, "time": 7.081031799316406e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Create a Flask application\n    app = Flask(__name__)\n\n    # Configure the Flask app for email sending\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_DEBUG'] = 1\n    app.config['MAIL_SENDER'] = smtp_user\n\n    # Define the Flask app for email sending\n    app.config['MAIL_SENDER'] = smtp_user\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_DEBUG'] = 1\n\n    # Create a Mail instance\n    mail = Mail(app)\n\n    @app.route('/mail", "compilation_passed": false, "time": 7.224082946777344e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n    app.config.from_object('mail_config')\n    app.config.update({\"MAIL_SERVER\": smtp_server})\n    app.config.update({\"MAIL_PORT\": smtp_port})\n    app.config.update({\"MAIL_USERNAME\": smtp_user})\n    app.config.update({\"MAIL_PASSWORD\": smtp_password})\n    app.config.update({\"MAIL_DEFAULT_SENDER\": \"Test Mail <test@example.com>\"})\n    app.config.update({\"MAIL_TEMPLATES_AUTOGenerate\": True})\n    app.config.update({\"MAIL_TEMPLATE_ROOT_DIR\": template_folder})\n\n    app.config['MAIL_SENDER'] = 'Test Mail <test@example.com>'\n\n    app.config['MAIL_SENDER_NAME'] = 'Test Mail'\n\n    mail = Mail(app)\n\n    @app.route(\"/\")\n    def send_mail():\n        \"\"\"\n        Creat", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Create a Flask application instance\n    app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_DEFAULT_SENDER'] = 'no-reply@example.com'\n    app.config['MAIL_SENDER'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_DEFAULT_SENDER'] = 'no-reply@example.com'\n    app.config['MAIL_SENDER'] = smtp_user\n    app.config['MAIL_PASSWORD']", "compilation_passed": true, "time": 0.001013040542602539, "tests_passed": false, "error": "RuntimeError"}
{"code": "app = Flask(__name__)\n\n    # Dynamic configuration is done here\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n\n    # Loads the template folder if it exists\n    if os.path.exists(template_folder):\n        app.config['MAIL_TEMPLATES_AUTO_RELOAD'] = True\n        app.config['MAIL_TEMPLATES_DIR'] = template_folder\n\n    # Sets up the Mail object\n    mail = Mail(app)\n    # Mail.send is a decorator\n    @app.route('/test')\n    def send_email():\n        with app.test_request_context():\n            msg = Message('Test email',\n                          sender=('Example Sender', 'sender@example.com'),\n                          recipients=['recipient@example.com'])\n            msg.body = 'This is the body of", "compilation_passed": false, "time": 8.511543273925781e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n    app.config.update(\n        MAIL_SERVER = smtp_server,\n        MAIL_PORT = smtp_port,\n        MAIL_USE_TLS = True,\n        MAIL_USE_SSL = False,\n        MAIL_USERNAME = smtp_user,\n        MAIL_PASSWORD = smtp_password\n    )\n    app.config.from_object('flask_mail.config')\n    mail = Mail(app)\n\n    @app.route('/email', methods=['POST'])\n    def send_mail():\n        \"\"\"\n        Sends a test email using Flask-Mail.\n\n        Example usage:\n        - Send an email to 'user@example.com' from 'sender@example.com' with the subject 'Test email':\n            >>> app.run()\n            >>> mail.send(Message(recipients=['user@example.com'], sender='sender@example.com', subject='Test email'))\n\n        Returns:\n            str: A message indicating the status of the email send.\n\n        Requirements:", "compilation_passed": false, "time": 0.0001480579376220703, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_DEFAULT_SENDER'] = smtp_user\n    app.config['MAIL_TEMPLATES_AUTOGEN'] = True\n    app.config['MAIL_TEMPLATE_ROOT'] = template_folder\n\n    # Create the Mail instance\n    mail = Mail(app)\n\n    # Define a route to send a test email\n    @app.route('/send_email/')\n    def send_email():\n        msg = Message(\n            subject=\"Hello world!\",\n            sender=(\"test@test.com\", \"example.com\"),\n            recipients=[\"user@example.com\"],\n            data=\"This is a test message.\")\n        mail.send(msg)\n        return 'Email sent!", "compilation_passed": false, "time": 7.700920104980469e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n    app.config.update(\n        MAIL_SERVER=smtp_server,\n        MAIL_PORT=smtp_port,\n        MAIL_USERNAME=smtp_user,\n        MAIL_PASSWORD=smtp_password,\n        MAIL_DEFAULT_SENDER=smtp_user,\n        MAIL_USE_SSL=True,\n        MAIL_USE_TLS=False,\n        MAIL_SENDER='sender@example.com',\n        MAIL_MAX_ATTACHMENTS=10,\n        MAIL_MAX_CONTENT_LENGTH=10000,\n        MAIL_REGISTERED_TEMPLATES=True,\n        MAIL_CONFIGURE_TEMPLATE_FOLDER=True,\n        MAIL_CONFIGURE_DEFAULT_TEMPLATE_PATH=template_folder,\n        MAIL_REGISTERED_TEMPLATE_KEYS=['TEST_KEY']\n    )\n\n    mail = Mail(app)\n\n    @app.route('/')\n    def send_email_test():\n", "compilation_passed": false, "time": 0.00015115737915039062, "tests_passed": false, "error": "IndentationError"}
{"code": "app = Flask(__name__)\n\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_SSL'] = False\n    app.config['MAIL_USE_TLS'] = False\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_MAX_EMAILS'] = 10\n    app.config['MAIL_DEFAULT_SENDER'] = 'SMTP Server'\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = False\n    app.config['MAIL_USE_SSL'] = False\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_MAX_EMAILS'] =", "compilation_passed": false, "time": 0.00016999244689941406, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n    mail = Mail(app)\n\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_DEFAULT_SENDER'] = smtp_user\n    app.config['MAIL_CONFIG_TEMPLATE_FILES'] = [template_folder]\n    app.config['MAIL_CONFIG_TEMPLATE_ENABLE'] = True\n    app.config['MAIL_CONFIG_TEMPLATE_PATH'] = os.path.join(app.config['MAIL_CONFIG_TEMPLATE_FILES'][0], 'email')\n    app.config['MAIL_CONFIG_TEMPLATE_SUFFIX'] = '.txt'\n    app.config['MAIL_", "compilation_passed": false, "time": 7.390975952148438e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n\n    mail = Mail(app)\n\n    @app.route('/test')\n    def send_mail_test():\n        \"\"\"\n        Creates a Flask-Mail Message and sends it as an email.\n\n        Returns:\n            str: A string message with the text \"Test email sent\".\n\n        Examples:\n        >>> send_mail_test()\n        'Test email sent.'\n        \"\"\"\n        message = Message(app)\n        message.sender = 'admin@example.com'\n        message.html_body = '<b>Test email sent.</b>'\n        message.body = 'Test email sent.'\n        message.", "compilation_passed": false, "time": 0.00016117095947265625, "tests_passed": false, "error": "SyntaxError"}
{"code": "app = Flask(__name__)\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n    app.config['MAIL_USE_TLS'] = True\n    app.config['MAIL_USE_SSL'] = True\n    app.config['MAIL_DEFAULT_SMTP_SERVER'] = smtp_server\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_SENDER'] = smtp_user\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] = smtp_port\n\n    app.config['MAIL_USERNAME'] = smtp_user\n    app.config['MAIL_PASSWORD'] = smtp_password\n    app.config['MAIL_SENDER'] = smtp_user\n    app.config['MAIL_SERVER'] = smtp_server\n    app.config['MAIL_PORT'] =", "compilation_passed": false, "time": 0.0001690387725830078, "tests_passed": false, "error": "SyntaxError"}
