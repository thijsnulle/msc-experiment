{"code": "src_paths = glob.glob(os.path.join(src_dir, '*.' + ext))\n    moved_files = []\n    for src_path in src_paths:\n        dest_path = os.path.join(dest_dir, os.path.basename(src_path))\n        if os.path.exists(dest_path):\n            print('Already exists:', dest_path)\n        else:\n            try:\n                shutil.copy(src_path, dest_path)\n                moved_files.append(dest_path)\n            except (IOError, OSError) as exc:\n                print('Error:', exc)\n    return moved_files", "compilation_passed": true, "time": 0.0017628669738769531, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    src_dir_exists = os.path.isdir(src_dir)\n    dest_dir_exists = os.path.isdir(dest_dir)\n    if not src_dir_exists:\n        raise FileNotFoundError(f'Source directory not found: {src_dir}')\n    if not dest_dir_exists:\n        raise FileNotFoundError(f'Destination directory not found: {dest_dir}')\n    for file_path in glob.glob(f'./{src_dir}/*.{ext}'):\n        dest_file_path = f'{dest_dir}/{os.path.basename(file_path)}'\n        if os.path.exists(dest_file_path):\n            print(f'Skipped {dest_file_path}')\n        else:\n            shutil.move(file_path, dest_file_path)\n            moved_files.append(dest_file_path)\n    return moved_files", "compilation_passed": true, "time": 0.002582073211669922, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "moved_files = []\n\n    src_files = glob.glob(os.path.join(src_dir, '*.' + ext))\n    for src_file in src_files:\n        base_name = os.path.basename(src_file)\n        dest_file = os.path.join(dest_dir, base_name)\n\n        if not os.path.exists(dest_file):\n            shutil.move(src_file, dest_file)\n            moved_files.append(dest_file)\n\n    return moved_files", "compilation_passed": true, "time": 0.0017690658569335938, "tests_passed": true, "error": null}
{"code": "src_dir = os.path.normpath(src_dir)\n    dest_dir = os.path.normpath(dest_dir)\n    dest_dir = os.path.expanduser(dest_dir)\n\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} does not exist\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} does not exist\")\n\n    dest_dir = os.path.join(dest_dir, '')  # Ensure destination dir ends with a slash\n\n    files = glob.glob(os.path.join(src_dir, '*.' + ext))\n    for path in files:\n        file_name = os.path.basename(path)\n        dest_path = os.path.join(dest_dir, file_name)\n        if not os.path.exists(dest_path):\n            shutil.move(path, dest_path)\n\n    return files", "compilation_passed": true, "time": 0.002847909927368164, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory does not exist: {src_dir}\")\n\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory does not exist: {dest_dir}\")\n\n    moved_files = []\n\n    for filename in glob.glob(os.path.join(src_dir, f\"*{ext}\")):\n        dest_file = os.path.join(dest_dir, os.path.basename(filename))\n        if not os.path.exists(dest_file):\n            shutil.move(filename, dest_dir)\n            moved_files.append(dest_file)\n\n    return moved_files", "compilation_passed": true, "time": 0.0016210079193115234, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    # Check if source directory exists\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} does not exist\")\n    # Check if destination directory exists\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} does not exist\")\n    # Iterate through all files in the source directory\n    for filename in glob.iglob(os.path.join(src_dir, f\"*{ext}\"), recursive=True):\n        # Skip directories\n        if os.path.isdir(filename):\n            continue\n        # Calculate relative path\n        rel_path = os.path.relpath(filename, src_dir)\n        # Create destination path\n        dest_path = os.path.join(dest_dir, rel_path)\n        # Skip if already exists\n        if os.path.exists(dest_path):\n            continue\n        # Move file\n        print(f\"Moving {filename} to {dest_path}\")\n        sh", "compilation_passed": true, "time": 0.0015270709991455078, "tests_passed": false, "error": "NameError"}
{"code": "moved_files = []\n\n    # Create destination directory if it does not exist\n    os.makedirs(dest_dir, exist_ok=True)\n\n    # Search for files with the given extension in the source directory\n    for filename in glob.glob(f'./{src_dir}/*.{ext}'):\n        filepath = os.path.join(src_dir, filename)\n        if os.path.exists(filepath):\n            dest_filepath = os.path.join(dest_dir, os.path.basename(filename))\n            if os.path.exists(dest_filepath):\n                print(f\"Skipping: {dest_filepath} already exists in destination directory.\")\n            else:\n                print(f\"Moving {filepath} to {dest_filepath}...\")\n                shutil.move(filepath, dest_filepath)\n                moved_files.append(dest_filepath)\n\n    return moved_files", "compilation_passed": true, "time": 0.0017638206481933594, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    for src_file in glob.glob(os.path.join(src_dir, f'*{ext}')):\n        dest_file = os.path.join(dest_dir, os.path.basename(src_file))\n        if not os.path.exists(dest_file):\n            shutil.move(src_file, dest_file)\n            moved_files.append(dest_file)\n        else:\n            print(f\"{os.path.basename(src_file)} already exists in {os.path.dirname(dest_file)}.\")\n    return moved_files", "compilation_passed": true, "time": 0.0015327930450439453, "tests_passed": true, "error": null}
{"code": "# Create a list of files in the source directory\n    src_files = glob.glob(os.path.join(src_dir, '*.' + ext))\n\n    # Create a list of files that will be moved to the destination directory\n    moved_files = []\n\n    # Check if the source and destination directories exist\n    for path in (src_dir, dest_dir):\n        if not os.path.exists(path):\n            raise FileNotFoundError(path)\n\n    # Move each file from the source directory to the destination directory\n    for src_file in src_files:\n        # Calculate the destination path\n        dest_file = os.path.join(dest_dir, os.path.basename(src_file))\n\n        # If the destination file already exists, skip it\n        if os.path.exists(dest_file):\n            continue\n\n        # Move the file to the destination directory\n        shutil.move(src_file, dest_file)\n\n        # Add the destination path to the list of moved files\n        moved_files.append(dest_file)\n\n    return moved", "compilation_passed": true, "time": 0.001434326171875, "tests_passed": false, "error": "NameError"}
{"code": "moved_files = []\n\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(\"Source directory does not exist: {}\".format(src_dir))\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Destination directory does not exist: {}\".format(dest_dir))\n    if not os.path.isdir(src_dir):\n        raise FileNotFoundError(\"Source directory is not a directory: {}\".format(src_dir))\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError(\"Destination directory is not a directory: {}\".format(dest_dir))\n\n    src_dir_files = glob.glob(os.path.join(src_dir, '*.' + ext))\n    for src_file in src_dir_files:\n        basename = os.path.basename(src_file)\n        dest_file = os.path.join(dest_dir, basename)\n        if not os.path.exists(dest_file):\n            sh", "compilation_passed": true, "time": 0.0014579296112060547, "tests_passed": false, "error": "TypeError"}
{"code": "moved_files = []\n    for src_file_name in glob.glob(f\"{src_dir}/*.{ext}\"):\n        dest_file_name = f\"{dest_dir}/{os.path.basename(src_file_name)}\"\n        if not os.path.exists(dest_file_name):\n            shutil.move(src_file_name, dest_file_name)\n            moved_files.append(dest_file_name)\n    return moved_files", "compilation_passed": true, "time": 0.00168609619140625, "tests_passed": true, "error": null}
{"code": "try:\n        os.makedirs(dest_dir, exist_ok=True)\n    except FileNotFoundError:\n        raise FileNotFoundError(f\"The destination directory does not exist: {dest_dir}\")\n\n    src_files = glob.glob(f\"{src_dir}/*.{ext}\")\n    moved_files = []\n\n    for src_file in src_files:\n        if not os.path.exists(os.path.join(dest_dir, os.path.basename(src_file))):\n            try:\n                shutil.move(src_file, os.path.join(dest_dir, os.path.basename(src_file)))\n                moved_files.append(os.path.join(dest_dir, os.path.basename(src_file)))\n            except FileNotFoundError as e:\n                print(f\"Error while moving file: {src_file}\\n{e}\")\n\n    return moved_files", "compilation_passed": true, "time": 0.0018680095672607422, "tests_passed": true, "error": null}
{"code": "src_dir = os.path.abspath(src_dir)\n    dest_dir = os.path.abspath(dest_dir)\n\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist\")\n    if not os.path.isdir(src_dir):\n        raise ValueError(f\"'{src_dir}' is not a directory\")\n\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist\")\n    if not os.path.isdir(dest_dir):\n        raise ValueError(f\"'{dest_dir}' is not a directory\")\n\n    src_ext = f'.{ext}'\n    dest_ext = '.' + ext\n\n    files_to_move = glob.glob(os.path.join(src_dir, f'*{src_ext}'))\n    for file_to_move in files_to_move:\n        file_path = os.path", "compilation_passed": true, "time": 0.0015289783477783203, "tests_passed": false, "error": "TypeError"}
{"code": "moved_files = []\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist\")\n    for f in glob.glob(f\"{src_dir}/*.{ext}\"):\n        filename = os.path.basename(f)\n        dest_path = os.path.join(dest_dir, filename)\n        if not os.path.exists(dest_path):\n            shutil.move(f, dest_path)\n            moved_files.append(dest_path)\n    return moved_files", "compilation_passed": true, "time": 0.00310516357421875, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    for filename in glob.glob(os.path.join(src_dir, f'*.{ext}')):\n        file_name = os.path.basename(filename)\n        dest_path = os.path.join(dest_dir, file_name)\n        if os.path.isfile(dest_path):\n            print(f\"{file_name} already exists in {dest_dir}, skipping...\")\n        else:\n            shutil.move(filename, dest_path)\n            print(f\"{file_name} moved to {dest_path}\")\n            moved_files.append(dest_path)\n    return moved_files", "compilation_passed": true, "time": 0.0017330646514892578, "tests_passed": true, "error": null}
{"code": "files_to_move = glob.glob(os.path.join(src_dir, '*.' + ext))\n\n    moved_files = []\n    for path in files_to_move:\n        file_name = os.path.basename(path)\n        full_dest_path = os.path.join(dest_dir, file_name)\n\n        if not os.path.exists(full_dest_path):\n            shutil.move(path, full_dest_path)\n            moved_files.append(full_dest_path)\n\n    return moved_files", "compilation_passed": true, "time": 0.0016887187957763672, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    # Create an empty list to store the full paths of files moved\n    # Create destination directory if it doesn't exist\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n    # Loop over each file with the given extension in the source directory\n    for file in glob.glob(os.path.join(src_dir, f'*.{ext}')):\n        # Determine the relative path of the file in the source directory to the destination directory\n        relative_path = os.path.relpath(file, src_dir)\n        # Check if the relative path already exists in the destination directory\n        if not os.path.exists(os.path.join(dest_dir, relative_path)):\n            # If not, copy the file to the destination directory\n            shutil.copy2(file, os.path.join(dest_dir, relative_path))\n            moved_files.append(os.path.join(dest_dir, relative_path))\n    return moved_files", "compilation_passed": true, "time": 0.0016980171203613281, "tests_passed": true, "error": null}
{"code": "moved_files = []\n\n    for f in glob.glob(os.path.join(src_dir, f'*{ext}')):\n        dest_path = os.path.join(dest_dir, os.path.basename(f))\n        if os.path.isfile(dest_path):\n            print(f'Skipped: {dest_path}')\n        else:\n            print(f'Moving: {f} -> {dest_path}')\n            moved_files.append(dest_path)\n            shutil.move(f, dest_path)\n\n    return moved_files", "compilation_passed": true, "time": 0.0015130043029785156, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    src_files = glob.glob(os.path.join(src_dir, f'*.{ext}'))\n\n    for file in src_files:\n        dest_path = os.path.join(dest_dir, os.path.basename(file))\n\n        if not os.path.exists(dest_path):\n            shutil.move(file, dest_path)\n            moved_files.append(dest_path)\n        else:\n            print(\"Error: File already exists in destination directory.\")\n    return moved_files", "compilation_passed": true, "time": 0.0016529560089111328, "tests_passed": true, "error": null}
{"code": "files = glob.glob(os.path.join(src_dir, '*.' + ext))\n    moved_files = []\n    for file in files:\n        dest_path = os.path.join(dest_dir, os.path.basename(file))\n        if not os.path.exists(dest_path):\n            shutil.move(file, dest_path)\n            moved_files.append(dest_path)\n    return moved_files", "compilation_passed": true, "time": 0.0016579627990722656, "tests_passed": true, "error": null}
{"code": "try:\n        os.makedirs(dest_dir, exist_ok=True)\n    except FileNotFoundError:\n        print('Cannot create destination directory:', dest_dir)\n        return None\n\n    files = glob.glob(os.path.join(src_dir, '*.' + ext))\n    if len(files) == 0:\n        print('No files found in', src_dir)\n        return None\n\n    moved_files = []\n\n    for file in files:\n        dest_path = os.path.join(dest_dir, os.path.basename(file))\n        if not os.path.isfile(dest_path):\n            shutil.move(file, dest_path)\n            moved_files.append(dest_path)\n        else:\n            print('Destination already exists:', dest_path)\n\n    return moved_files", "compilation_passed": true, "time": 0.0015058517456054688, "tests_passed": false, "error": "TypeError"}
{"code": "moved_files = []\n    # Check if both src_dir and dest_dir exist\n    if not os.path.isdir(src_dir):\n        raise FileNotFoundError('src_dir does not exist.')\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError('dest_dir does not exist.')\n    # Check if any files exist in src_dir\n    for filename in os.listdir(src_dir):\n        if filename.endswith(f'.{ext}'):\n            src_path = os.path.join(src_dir, filename)\n            dest_path = os.path.join(dest_dir, filename)\n            if not os.path.exists(dest_path):\n                os.rename(src_path, dest_path)\n                moved_files.append(dest_path)\n    return moved_files", "compilation_passed": true, "time": 0.0025548934936523438, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "if not os.path.isdir(src_dir):\n        raise FileNotFoundError(\"The source directory does not exist\")\n\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError(\"The destination directory does not exist\")\n\n    files = glob.glob(f\"{src_dir}/**/*.{ext}\", recursive=True)\n    moved_files = []\n\n    for file in files:\n        dest_file = f\"{dest_dir}/{os.path.basename(file)}\"\n        if not os.path.exists(dest_file):\n            shutil.move(file, dest_file)\n            moved_files.append(dest_file)\n\n    return moved_files", "compilation_passed": true, "time": 0.002691984176635742, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "src_dir_path = os.path.normpath(src_dir)\n    dest_dir_path = os.path.normpath(dest_dir)\n    os.makedirs(dest_dir_path, exist_ok=True)\n    if os.path.exists(dest_dir_path) and not os.path.isdir(dest_dir_path):\n        raise FileNotFoundError(\"dest_dir path is not a directory\")\n    elif not os.path.exists(src_dir_path):\n        raise FileNotFoundError(\"src_dir path is not a directory\")\n\n    src_dir_paths = glob.glob(f\"{src_dir_path}/**/*.{ext}\", recursive=True)\n\n    for file_path in src_dir_paths:\n        if not os.path.exists(file_path):\n            continue\n        rel_file_path = os.path.relpath(file_path, start=src_dir_path)\n        if os.path.exists(dest_dir_path + rel_file_path):\n            continue\n        sh", "compilation_passed": true, "time": 0.001615762710571289, "tests_passed": false, "error": "TypeError"}
{"code": "if not os.path.exists(src_dir) or not os.path.isdir(src_dir):\n        raise FileNotFoundError('Source directory does not exist or is invalid')\n    if not os.path.exists(dest_dir) or not os.path.isdir(dest_dir):\n        raise FileNotFoundError('Destination directory does not exist or is invalid')\n\n    files = glob.glob(os.path.join(src_dir, '*.' + ext))\n\n    moved_files = []\n    for file in files:\n        filename = os.path.basename(file)\n        dest_file = os.path.join(dest_dir, filename)\n        if not os.path.exists(dest_file):\n            shutil.move(file, dest_file)\n            moved_files.append(dest_file)\n        else:\n            print(f'Skipping {filename} (already exists in destination directory).')\n\n    return moved_files", "compilation_passed": true, "time": 0.0026230812072753906, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "moved_files = []\n\n    # Check for existing directories\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(src_dir)\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(dest_dir)\n\n    # Check if destination directory contains files with the same name as any in source directory\n    # (assumes source directory is empty if it's a new directory)\n    for path in glob.glob(os.path.join(src_dir, '*.{}'.format(ext))):\n        with open(path, 'rb') as f:\n            file_content = f.read()\n        with open(os.path.join(dest_dir, os.path.basename(path)), 'wb') as f:\n            f.write(file_content)\n\n    for path in glob.glob(os.path.join(src_dir, '*.{}'.format(ext))):\n        with open(path, 'rb') as f:\n            file_content = f.read()\n        new_path = os", "compilation_passed": true, "time": 0.0015130043029785156, "tests_passed": false, "error": "TypeError"}
{"code": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} not found.\")\n\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    src_file_pattern = os.path.join(src_dir, f'*{ext}')\n    moved_files = []\n\n    for file in glob.glob(src_file_pattern):\n        file_name = os.path.basename(file)\n        dest_file_path = os.path.join(dest_dir, file_name)\n        if not os.path.exists(dest_file_path):\n            shutil.move(file, dest_file_path)\n            moved_files.append(dest_file_path)\n\n    return moved_files", "compilation_passed": true, "time": 0.0015802383422851562, "tests_passed": true, "error": null}
{"code": "if os.path.exists(src_dir) and os.path.exists(dest_dir):\n        moved_files = []\n        for file in glob.glob(os.path.join(src_dir, f'*.{ext}')):\n            if not os.path.isfile(file) or os.path.basename(file) in moved_files:\n                continue\n            if os.path.basename(file) in os.listdir(dest_dir):\n                continue\n            print(f'Moving: {os.path.basename(file)}')\n            shutil.move(file, dest_dir)\n            moved_files.append(os.path.basename(file))\n        return moved_files\n    else:\n        raise FileNotFoundError", "compilation_passed": true, "time": 0.002727985382080078, "tests_passed": true, "error": null}
{"code": "try:\n        os.makedirs(dest_dir, exist_ok=True)\n        src_files = glob.glob(src_dir + f\"/**/*.{ext}\", recursive=True)\n        files_to_move = [os.path.join(src_dir, file) for file in src_files if os.path.exists(file)]\n        files_moved = []\n        for src_file in files_to_move:\n            dest_file = os.path.join(dest_dir, os.path.basename(src_file))\n            if not os.path.exists(dest_file):\n                shutil.move(src_file, dest_dir)\n                files_moved.append(src_file)\n        return files_moved\n    except FileNotFoundError as e:\n        print(e)\n        return []", "compilation_passed": true, "time": 0.0018298625946044922, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    src_files = glob.glob(os.path.join(src_dir, f'*.{ext}'))\n    for file in src_files:\n        dest = os.path.join(dest_dir, os.path.basename(file))\n        if not os.path.exists(dest):\n            shutil.move(file, dest)\n            moved_files.append(dest)\n    return moved_files", "compilation_passed": true, "time": 0.0016961097717285156, "tests_passed": true, "error": null}
