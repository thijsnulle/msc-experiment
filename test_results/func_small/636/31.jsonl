{"code": "data = pd.DataFrame(np.random.randint(0, 10, (rows, 5)), columns=COLUMNS)\n    counts = data.count(axis='columns')\n    ax = counts.plot(kind='bar')\n    return (data, ax)", "compilation_passed": true, "time": 0.0026428699493408203, "tests_passed": false, "error": "IndexError"}
{"code": "# Generate a random integer matrix with the given number of rows\n    df = pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    nonzero_counts = df.count(axis=0)\n\n    # Visualize the count using a bar plot\n    _, ax = plt.subplots()\n    ax.bar(df.columns.values, nonzero_counts.values)\n    ax.set_title('Non-Zero Value Counts')\n    return df, ax", "compilation_passed": true, "time": 0.00568699836730957, "tests_passed": true, "error": null}
{"code": "# TODO: complete the function\n    raise NotImplementedError()", "compilation_passed": true, "time": 0.0006711483001708984, "tests_passed": false, "error": "NotImplementedError"}
{"code": "df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))))\n    df.columns = COLUMNS\n    ax = df.count().plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.004202365875244141, "tests_passed": true, "error": null}
{"code": "np.random.seed(42)\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, 5)), columns=COLUMNS)\n\n    ax = df.iloc[:, 0].value_counts().plot.bar()\n    ax.title.set_text('Non-Zero Value Counts')\n\n    return df, ax", "compilation_passed": true, "time": 0.0023221969604492188, "tests_passed": false, "error": "IndexError"}
{"code": "# Create a Pandas DataFrame with random integer values\n    df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    counts = df.count()\n\n    # Visualize this information using a bar plot\n    counts.plot.bar()\n\n    # Return the Axes object containing the bar plot\n    return df, plt.gca()", "compilation_passed": true, "time": 0.003086090087890625, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(\n        np.random.randint(0, 10, size=(rows, len(COLUMNS))),\n        columns=COLUMNS\n    ).astype(int)\n    df.boxplot(column=COLUMNS, return_type=\"dict\")\n    df.plot.bar()\n    df.boxplot()\n    df.hist()\n    return (df, plt.gca())", "compilation_passed": true, "time": 0.018077850341796875, "tests_passed": false, "error": "IndexError"}
{"code": "data = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    ax = data.count().plot(kind='bar')\n    return data, ax", "compilation_passed": true, "time": 0.004940032958984375, "tests_passed": true, "error": null}
{"code": "# Generate random integers between 0 and 9 for each column\n    column1_values = np.random.randint(0, 10, rows)\n    column2_values = np.random.randint(0, 10, rows)\n    column3_values = np.random.randint(0, 10, rows)\n    column4_values = np.random.randint(0, 10, rows)\n    column5_values = np.random.randint(0, 10, rows)\n\n    # Create a DataFrame with the values\n    df = pd.DataFrame({COLUMNS[0]: column1_values, COLUMNS[1]: column2_values,\n                       COLUMNS[2]: column3_values, COLUMNS[3]: column4_values, COLUMNS[4]: column5_values})\n\n    # Count the non-zero values in each column and visualize this information using a bar plot.\n    df[COLUMNS[0]] = df[COLUMNS[0]].astype(np.int8)\n    df[COLUM", "compilation_passed": false, "time": 0.0002651214599609375, "tests_passed": false, "error": "SyntaxError"}
{"code": "df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))), columns=COLUMNS)\n    ax = df.apply(lambda x: x.astype(str).map(', '.join).value_counts()).sort_index().plot.bar()\n    ax.set_title(f'Non-Zero Value Counts')\n    return df, ax", "compilation_passed": true, "time": 0.008769035339355469, "tests_passed": false, "error": "IndexError"}
{"code": "# Your code goes here\n    random_values = np.random.randint(low=0, high=10, size=(rows, len(COLUMNS)))\n\n    df = pd.DataFrame(data=random_values, columns=COLUMNS)\n\n    non_zero_count = df.count(axis=0)\n\n    ax = df.plot.bar(title='Non-Zero Value Counts')\n\n    return df, ax", "compilation_passed": true, "time": 0.009465932846069336, "tests_passed": false, "error": "IndexError"}
{"code": "df = pd.DataFrame(np.random.randint(0, 10, (rows, 5)), columns=COLUMNS)\n    print(df)\n    ax = df.loc[:, df.apply(pd.value_counts).ne(0).any(axis=0)].plot.bar()\n    plt.show()\n    return df, ax", "compilation_passed": true, "time": 0.001725912094116211, "tests_passed": false, "error": "TypeError"}
{"code": "# Generate random integer values between 0 and 9\n    data = np.random.randint(low=0, high=10, size=(rows, 5))\n    df = pd.DataFrame(data, columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    non_zero_counts = np.count_nonzero(df.notnull(), axis=0)\n\n    # Create a bar plot using Matplotlib's pyplot library\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.bar(COLUMNS, non_zero_counts)\n\n    return df, ax", "compilation_passed": true, "time": 0.0054700374603271484, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))), columns=COLUMNS)\n    df = df.fillna(0)\n    df_non_zero = df.sum().sort_values(ascending=False).head()\n    df_non_zero.plot(kind='bar')\n    ax = df_non_zero.plot(kind='bar', rot=0, figsize=(18, 7),\n                         title='Non-Zero Value Counts', ylim=(0, rows),\n                         grid=True, grid_kwargs=dict(color='lightgray', alpha=0.2, linewidth=1.2))\n    return df, ax", "compilation_passed": true, "time": 0.005734920501708984, "tests_passed": false, "error": "AttributeError"}
{"code": "return (pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS), plt.bar(COLUMNS, [x.count(x > 0) for x in zip(*df.values)]))", "compilation_passed": true, "time": 0.0008139610290527344, "tests_passed": false, "error": "NameError"}
{"code": "random_integers = np.random.randint(0, 10, rows)\n    df = pd.DataFrame(random_integers)\n    df[COLUMNS] = df\n    print(df[COLUMNS].value_counts())\n    ax = df[COLUMNS].value_counts().plot.bar(rot=0)\n    ax.set_title(\"Non-Zero Value Counts\")\n    return df, ax", "compilation_passed": true, "time": 0.0008940696716308594, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010963916778564453, "tests_passed": false, "error": "IndexError"}
{"code": "df = pd.DataFrame(np.random.randint(0, 10, (rows, 5)))\n    df.columns = COLUMNS\n\n    # Calculate non-zero values in each column\n    non_zero_values_by_column = df.iloc[:, 1:].ne(0).sum()\n    non_zero_values_by_column.columns = COLUMNS[1:]\n\n    # Create a bar plot with the non-zero value counts\n    fig, ax = plt.subplots(figsize=(20, 4))\n    ax.bar(non_zero_values_by_column.index, non_zero_values_by_column)\n    ax.set_title('Non-Zero Value Counts')\n    return df, ax", "compilation_passed": true, "time": 0.005676984786987305, "tests_passed": true, "error": null}
{"code": "# Create a Pandas DataFrame with random integer values between 0 and 9 for a given number of rows\n    df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))),\n                      columns=COLUMNS)\n\n    # Count the non-zero values in each column and visualize this information using a bar plot\n    ax = df.applymap(lambda x: x != 0).sum().plot.bar()\n\n    return df, ax", "compilation_passed": true, "time": 0.0044362545013427734, "tests_passed": true, "error": null}
{"code": "# Create a DataFrame with random integer values between 0 and 9 for a given number of rows\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column and visualize this information using a bar plot\n    df.loc[df.apply(lambda x: np.any(x > 0), axis=1), :].plot(kind='bar')\n    ax = plt.gca()\n\n    ax.title.set_text(\"Non-Zero Value Counts\")\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=0)\n    return df, ax", "compilation_passed": true, "time": 0.010908842086791992, "tests_passed": false, "error": "IndexError"}
{"code": "# Create a Pandas DataFrame with random integer values between 0 and 9 for a given number of rows\n    df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column and visualize this information using a bar plot\n    bar_plot = df.count().plot(kind='bar')\n    return df, bar_plot.axes", "compilation_passed": true, "time": 0.0044841766357421875, "tests_passed": true, "error": null}
{"code": "# Generate a random integer matrix between 0 and 9\n    data = np.random.randint(0, 10, size=(rows, 5))\n\n    # Create a DataFrame from the data\n    df = pd.DataFrame(data, columns=COLUMNS)\n\n    # Create a new column called 'Column4Count' that counts the number of non-zero values in column 4\n    df['Column4Count'] = df['Column4'].apply(np.count_nonzero)\n\n    # Plot a bar chart with the number of non-zero values in each column\n    _, ax = plt.subplots()\n    ax.bar(COLUMNS, df['Column4Count'], alpha=0.8, color='#0096ff')\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_ylabel('Count')\n    ax.set_xlabel('Column')\n    return df, ax", "compilation_passed": true, "time": 0.004705905914306641, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(np.random.randint(0, 10, (rows, 5)), columns=COLUMNS)\n    df['Count'] = df.count(axis=1)\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.008832216262817383, "tests_passed": false, "error": "IndexError"}
{"code": "df = pd.DataFrame({\n        'Column1': np.random.randint(0, 10, rows),\n        'Column2': np.random.randint(0, 10, rows),\n        'Column3': np.random.randint(0, 10, rows),\n        'Column4': np.random.randint(0, 10, rows),\n        'Column5': np.random.randint(0, 10, rows)\n    })\n\n    # count non-zero values in each column and visualize this information using a bar plot\n    non_zero_counts = df.apply(lambda x: x.sum())\n    non_zero_counts.plot.bar()\n\n    return df, plt.gcf().axes[0]", "compilation_passed": true, "time": 0.006161928176879883, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))))\n    print(df)\n    ax = df.plot.hist(legend=False, bins=10)\n    print(ax.title.get_text())\n    return (df, ax)", "compilation_passed": true, "time": 0.017743825912475586, "tests_passed": true, "error": null}
{"code": "# Generate random integer values between 0 and 9 for the specified number of rows\n    random_values = np.random.randint(0, 10, size=(rows, len(COLUMNS)))\n    df = pd.DataFrame(data=random_values)\n\n    # Count the number of non-zero values in each column\n    non_zero_counts = [df[col].count() for col in df.columns]\n\n    # Create a bar plot of the non-zero counts\n    fig, ax = plt.subplots()\n    ax.bar(range(len(COLUMNS)), non_zero_counts, align='center')\n    ax.set_xticks(range(len(COLUMNS)))\n    ax.set_xticklabels(COLUMNS)\n    ax.set_title('Non-Zero Value Counts')\n\n    return df, ax", "compilation_passed": true, "time": 0.007186174392700195, "tests_passed": true, "error": null}
{"code": "np.random.seed(0)\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, 5)))\n    df.columns = COLUMNS\n    df = df.dropna(axis='rows')\n    nonzero_counts = df.iloc[:, :].count(axis=0).value_counts(sort=False)\n    ax = nonzero_counts.plot.bar()\n    ax.set_title('Non-Zero Value Counts')\n    return df, ax", "compilation_passed": true, "time": 0.002851724624633789, "tests_passed": true, "error": null}
{"code": "# Initialize a Pandas DataFrame with random integer values between 0 and 9\n    df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column of the DataFrame\n    column_counts = df.apply(lambda x: sum(x != 0))\n\n    # Create a bar plot using Matplotlib\n    ax = column_counts.plot(kind='bar')\n    ax.set_title('Non-Zero Value Counts')\n\n    return df, ax", "compilation_passed": true, "time": 0.00316619873046875, "tests_passed": true, "error": null}
{"code": "rows = int(rows)\n\n    data = pd.DataFrame(\n        np.random.randint(0, 10, size=(rows, 5)),\n        columns=COLUMNS\n    )\n\n    # Your code goes here\n    column_sums = data.sum(axis=0)\n\n    ax = data.plot(kind='bar')\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_xlabel(\"Column\")\n    ax.set_ylabel(\"Number of Occurrences\")\n    ax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n    return data, ax", "compilation_passed": true, "time": 0.010166168212890625, "tests_passed": false, "error": "IndexError"}
{"code": "# Create a Pandas DataFrame with random integer values between 0 and 9 for a given number of rows.\n    df = pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    # Count the non-zero values in each column and visualize this information using a bar plot.\n    df[COLUMNS] = df.astype(int)\n    non_zero_counts = df[COLUMNS].sum().astype(str)\n    df['Non-Zero Value Counts'] = non_zero_counts\n    non_zero_counts = list(map(int, non_zero_counts))\n    df['Non-Zero Value Percentage'] = non_zero_counts * 100 / df['Non-Zero Value Counts'].sum()\n    ax = df.plot(x='Non-Zero Value Counts', kind='bar', stacked=True)\n    # Return a tuple containing the DataFrame and the Axes object.\n    return df, ax", "compilation_passed": true, "time": 0.0019180774688720703, "tests_passed": false, "error": "ValueError"}
