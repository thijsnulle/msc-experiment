{"code": "return pd.DataFrame([math.sin(x) for x in tuples_list])", "compilation_passed": true, "time": 0.0018301010131835938, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(tuples_list)\n    df.apply(math.sin, axis=1, inplace=True)\n    return df", "compilation_passed": true, "time": 0.0025610923767089844, "tests_passed": false, "error": "TypeError"}
{"code": "return pd.DataFrame(tuples_list, columns=list(range(len(tuples_list[0])))).applymap(math.sin)", "compilation_passed": true, "time": 0.003837108612060547, "tests_passed": true, "error": null}
{"code": "return pd.DataFrame([list(map(math.sin, row)) for row in tuples_list])", "compilation_passed": true, "time": 0.0025110244750976562, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(tuples_list)\n    return df.applymap(lambda x: math.sin(x))", "compilation_passed": true, "time": 0.0035021305084228516, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(tuples_list).applymap(math.sin)\n\n    return df", "compilation_passed": true, "time": 0.003434896469116211, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(tuples_list, columns=('a', 'b', 'c', 'd'))\n    df.apply(lambda row: math.sin(row), axis=1)\n    return df", "compilation_passed": true, "time": 0.0030829906463623047, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(data=tuples_list)\n    df = df.applymap(math.sin)\n    return df", "compilation_passed": true, "time": 0.003450155258178711, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(tuples_list, columns=['x1', 'x2', 'x3', 'x4'])\n    df['sin'] = df.apply(lambda row: math.sin(row.x1 + row.x2 + row.x3 + row.x4), axis='columns')\n    return df", "compilation_passed": true, "time": 0.002198934555053711, "tests_passed": true, "error": null}
{"code": "return pd.DataFrame(\n        {\n            \"0\": list(map(math.sin, [item[0] for item in tuples_list])),\n            \"1\": list(map(math.sin, [item[1] for item in tuples_list])),\n            \"2\": list(map(math.sin, [item[2] for item in tuples_list])),\n            \"3\": list(map(math.sin, [item[3] for item in tuples_list])),\n        }\n    )", "compilation_passed": true, "time": 0.002668619155883789, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(tuples_list, columns=[\"x\", \"y\", \"z\", \"w\"])\n    return df.applymap(lambda x: math.sin(x))", "compilation_passed": true, "time": 0.003551959991455078, "tests_passed": true, "error": null}
{"code": "return pd.DataFrame([(math.sin(val) for val in row) for row in tuples_list],\n                        columns=([f\"sin({col})\" for col in range(len(tuples_list[0]))]),\n                        index=[row_idx for row_idx in range(len(tuples_list))])", "compilation_passed": true, "time": 0.0026569366455078125, "tests_passed": true, "error": null}
{"code": "return pd.DataFrame(list(map(math.sin, tuples_list)), columns=[\n        \"0\", \"1\", \"2\", \"3\"])", "compilation_passed": true, "time": 0.00177001953125, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(tuples_list)\n    for i in range(df.shape[1]):\n        df[i] = df[i].apply(math.sin)\n    return df", "compilation_passed": true, "time": 0.004244327545166016, "tests_passed": true, "error": null}
{"code": "# Your code goes here", "compilation_passed": true, "time": 0.0017628669738769531, "tests_passed": false, "error": "AttributeError"}
{"code": "return pd.DataFrame(map(math.sin, tuples_list))", "compilation_passed": true, "time": 0.0018589496612548828, "tests_passed": false, "error": "TypeError"}
{"code": "return pd.DataFrame([math.sin(n) for n in tuples_list])", "compilation_passed": true, "time": 0.001714944839477539, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame([\n        math.sin(x) for tuples in tuples_list for x in tuples\n    ])\n    df.reset_index(drop=True, inplace=True)\n    df.columns = [f\"v{i}\" for i in range(df.shape[1])]\n    return df", "compilation_passed": true, "time": 0.0019109249114990234, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(tuples_list, columns=['0', '1', '2', '3'])\n    df.apply(lambda x: math.sin(x.values), inplace=True)\n    return df", "compilation_passed": true, "time": 0.0019681453704833984, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(tuples_list)\n    return df.applymap(math.sin)", "compilation_passed": true, "time": 0.0033969879150390625, "tests_passed": true, "error": null}
{"code": "return pd.DataFrame(list(map(lambda x: math.sin(x), tuples_list)), columns=list(range(len(tuples_list[0]))))", "compilation_passed": true, "time": 0.0017507076263427734, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(tuples_list)\n\n    # Apply the sin function to each number in each tuple\n    for col in df.columns:\n        df[col] = df[col].apply(math.sin)\n\n    return df", "compilation_passed": true, "time": 0.004252910614013672, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame([tuple(math.sin(x) for x in t) for t in tuples_list])\n    return df", "compilation_passed": true, "time": 0.002460002899169922, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(tuples_list, columns=[\"x\", \"y\", \"z\", \"w\"])\n\n    df[\"sin\"] = df[\"x\"].map(math.sin)\n    df[\"cos\"] = df[\"y\"].map(math.cos)\n\n    return df", "compilation_passed": true, "time": 0.0021469593048095703, "tests_passed": true, "error": null}
{"code": "return pd.DataFrame([[math.sin(x) for x in tuple(row)] for row in tuples_list])", "compilation_passed": true, "time": 0.002432107925415039, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(list(map(list, tuples_list)))\n    df.apply(math.sin, axis=1)\n    return df", "compilation_passed": true, "time": 0.002035856246948242, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(tuples_list, columns=[\"a\", \"b\", \"c\", \"d\"])\n    return df.apply(math.sin)", "compilation_passed": true, "time": 0.0019192695617675781, "tests_passed": false, "error": "TypeError"}
{"code": "# Check if the list is empty\n    if not tuples_list:\n        return pd.DataFrame()\n\n    # Create an empty dataframe with the appropriate columns\n    columns = ['0', '1', '2', '3']\n    df = pd.DataFrame(index=[0], columns=columns)\n\n    # Iterate over the list and fill in the appropriate values in the dataframe\n    for i, tup in enumerate(tuples_list):\n        df.loc[i] = [math.sin(n) for n in tup]\n\n    # Return the dataframe\n    return df", "compilation_passed": true, "time": 0.005628824234008789, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(tuples_list, columns=['col1', 'col2', 'col3', 'col4'])\n    for column in df.columns:\n        df[column] = df[column].apply(math.sin)\n    return df", "compilation_passed": true, "time": 0.00433039665222168, "tests_passed": true, "error": null}
