{"code": "if not os.path.exists(directory_name):\n        os.mkdir(directory_name)\n    if not all([os.path.isdir(directory_name),\n                 all(os.path.isfile(os.path.join(directory_name, x)) for x in file_names),\n                 all(isinstance(x, str) for x in file_names),\n                 isinstance(content, str)]):\n            print(\"Error: The directory does not exist or the file names are not valid.\")\n            raise SystemExit\n    for name in file_names:\n        with open(os.path.join(directory_name, name), 'w') as file:\n            file.write(content)\n    with zipfile.ZipFile(os.path.join(directory_name, f\"{directory_name}.zip\"), 'w') as zip_ref:\n        for name in file_names:\n            zip_ref.write(os.path.join(directory_name, name))\n    return os.path.join(directory_name, f\"{directory_name", "compilation_passed": false, "time": 0.00013899803161621094, "tests_passed": false, "error": "SyntaxError"}
{"code": "if os.path.exists(directory_name):\n        print(\"Directory {} already exists. Please delete it manually before continuing.\".format(directory_name))\n        exit()\n    print(\"Creating {} directory...\".format(directory_name))\n    os.mkdir(directory_name)\n    print(\"{} directory created.\".format(directory_name))\n    print(\"Creating {} files...\".format(directory_name))\n    with os.scandir(directory_name) as files:\n        for file in files:\n            if file.name[-4:] == '.txt':\n                file.replace(file.name[:-4] + '.txt')\n                print(\"{} file created.\".format(file.name))\n        for i in range(len(file_names)):\n            with open(os.path.join(directory_name, file_names[i]), mode='w', encoding=encoding) as new_file:\n                new_file.write(content)\n        print(\"{} files created.\".format(len(file", "compilation_passed": false, "time": 0.00030422210693359375, "tests_passed": false, "error": "SyntaxError"}
{"code": "try:\n        os.mkdir(directory_name)\n    except FileExistsError:\n        pass\n\n    for file_name in file_names:\n        file = open(directory_name + '/' + file_name, 'w')\n        file.write(content)\n        file.close()\n\n    zipped_file = directory_name + '.zip'\n\n    zip = zipfile.ZipFile(zipped_file, 'w')\n\n    for root, dirs, files in os.walk('./' + directory_name):\n        for file in files:\n            zip.write(root + '/' + file, arcname=file)\n\n    zip.close()\n\n    return zipped_file", "compilation_passed": true, "time": 0.002354860305786133, "tests_passed": true, "error": null}
{"code": "for f in file_names:\n        with open(os.path.join(directory_name, f), \"w\", encoding=encoding) as f:\n            f.write(content)\n    zipped_file = zipfile.ZipFile(directory_name + '.zip', 'w')\n    zipped_file.write(directory_name)\n    zipped_file.close()\n    os.rmdir(directory_name)\n    return directory_name + \".zip\"", "compilation_passed": true, "time": 0.0015671253204345703, "tests_passed": false, "error": "OSError"}
{"code": "os.makedirs(directory_name, exist_ok=True)\n    for i, file_name in enumerate(file_names):\n        file_path = os.path.join(directory_name, file_name)\n        with codecs.open(file_path, 'w', encoding=encoding) as f:\n            f.write(content * (i + 1))\n\n    file_path = os.path.join(directory_name, '{}.zip'.format(directory_name))\n    with zipfile.ZipFile(file_path, 'w') as zipped:\n        for name in os.listdir(directory_name):\n            if name not in file_names:\n                zipped.write(os.path.join(directory_name, name))\n\n    return file_path", "compilation_passed": true, "time": 0.0018978118896484375, "tests_passed": true, "error": null}
{"code": "def write_file(file_name, text_content, encoding):\n        '''\n        Write the content of the text file using the given encoding.\n        '''\n        file = codecs.open(file_name, \"w\", encoding=encoding)\n        file.write(text_content)\n        file.close()\n\n    directory = os.path.join(directory_name)\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n    for file_name in file_names:\n        file_name = os.path.join(directory, file_name)\n        write_file(file_name, content, encoding)\n\n    zipped_file = os.path.join(directory, f\"{directory}.zip\")\n    with zipfile.ZipFile(zipped_file, mode=\"w\") as zipf:\n        for root, dirs, files in os.walk(directory):\n            for file in files:\n                zipf.write(os.path.join(root, file))\n    return zipped_file", "compilation_passed": true, "time": 0.001834869384765625, "tests_passed": true, "error": null}
{"code": "# Create the directory with given name\n    directory_path = os.path.join(os.getcwd(), directory_name)\n    if not os.path.exists(directory_path):\n        os.makedirs(directory_path)\n    # Create .txt files\n    file_path_list = [\n        os.path.join(directory_path, file_name) for file_name in file_names\n    ]\n    for file_path in file_path_list:\n        with open(file_path, mode='w', encoding=encoding) as file:\n            file.write(content)\n    # Zip the directory\n    zip_file = zipfile.ZipFile(directory_name+'.zip', 'w')\n    for directory, sub_directories, files in os.walk(directory_path):\n        for file_name in files:\n            zip_file.write(os.path.join(directory, file_name))\n    zip_file.close()\n    # return zipped file\n    return directory_name+'.zip'", "compilation_passed": true, "time": 0.0041010379791259766, "tests_passed": true, "error": null}
{"code": "for name in file_names:\n        file_path = os.path.join(directory_name, name)\n        with codecs.open(file_path, \"w\", encoding=encoding) as f:\n            f.write(content)\n    with open(f'{directory_name}.zip', \"wb\") as f:\n        zip_writer = zipfile.ZipFile(f, 'w')\n        for root, dirs, files in os.walk(directory_name):\n            for file in files:\n                zip_writer.write(file)\n    return f'{directory_name}.zip'", "compilation_passed": true, "time": 0.0013921260833740234, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "zipped_file_name = f\"{directory_name}.zip\"\n\n    try:\n        with zipfile.ZipFile(zipped_file_name, \"w\") as zf:\n            for f in file_names:\n                file_path = os.path.join(directory_name, f)\n                file_content = content + \" \"\n                zf.write(file_path, f)\n                with open(file_path, mode=\"w\", encoding=encoding) as f_open:\n                    f_open.write(file_content)\n\n        return zipped_file_name\n    except Exception as e:\n        return f\"{e.__class__.__name__} {e}\"", "compilation_passed": true, "time": 0.001445770263671875, "tests_passed": true, "error": null}
{"code": "os.makedirs(directory_name, exist_ok=True)\n\n    with zipfile.ZipFile('{0}.zip'.format(directory_name), 'w') as file:\n        for i, file_name in enumerate(file_names):\n            with codecs.open('{0}/{1}'.format(directory_name, file_name), \"w\", encoding=encoding) as f:\n                f.write(content)\n            file.write('{0}/{1}'.format(directory_name, file_name))", "compilation_passed": true, "time": 0.0017437934875488281, "tests_passed": true, "error": null}
{"code": "try:\n        zip_dir(directory_name, file_names, content, encoding)\n    except NameError as e:\n        raise e\n    except Exception as e:\n        print(e)", "compilation_passed": true, "time": 0.0011920928955078125, "tests_passed": false, "error": "NameError"}
{"code": "directory_name = os.path.abspath(directory_name)\n\n    for file_name in file_names:\n        file_name = os.path.join(directory_name, file_name)\n        with codecs.open(file_name, \"w\", encoding) as f:\n            f.write(content)\n\n    zipped_file_name = directory_name + \".zip\"\n    with zipfile.ZipFile(zipped_file_name, mode='w') as zip_file:\n        for file_name in file_names:\n            zip_file.write(os.path.join(directory_name, file_name))\n\n    return zipped_file_name", "compilation_passed": true, "time": 0.0017390251159667969, "tests_passed": true, "error": null}
{"code": "if not os.path.exists(directory_name):\n        os.makedirs(directory_name)\n    for i in range(len(file_names)):\n        with open(f\"{directory_name}/{file_names[i]}\", \"w\", encoding=encoding) as f:\n            f.write(content)\n    zipped_file = os.path.join(directory_name, f\"{directory_name}.zip\")\n    with zipfile.ZipFile(zipped_file, 'w') as zip_file:\n        for filename in os.listdir(directory_name):\n            zip_file.write(os.path.join(directory_name, filename), compress_type=zipfile.ZIP_DEFLATED)\n    return zipped_file", "compilation_passed": true, "time": 0.0018038749694824219, "tests_passed": true, "error": null}
{"code": "directory_name = os.path.join(\".\", directory_name)\n    os.makedirs(directory_name)\n\n    for index, file_name in enumerate(file_names):\n        path_to_file = os.path.join(directory_name, file_name)\n        path_to_file = codecs.open(path_to_file, encoding=encoding, mode='w')\n        path_to_file.write(content)\n        path_to_file.close()\n\n    with zipfile.ZipFile(f\"{directory_name}.zip\", 'w', compression=zipfile.ZIP_DEFLATED) as zip_file:\n        for file in file_names:\n            zip_file.write(os.path.join(directory_name, file), compress_type=zipfile.ZIP_DEFLATED)\n            os.remove(os.path.join(directory_name, file))\n\n    return f\"{directory_name}.zip\"", "compilation_passed": true, "time": 0.0013632774353027344, "tests_passed": false, "error": "FileExistsError"}
{"code": "directory = os.path.join(directory_name)\n    if not os.path.exists(directory):\n        os.mkdir(directory)\n    for filename in file_names:\n        path = os.path.join(directory, filename)\n        with open(path, 'w', encoding=encoding) as file:\n            file.write(content)\n    zip_name = os.path.join(directory_name, 'latin_files.zip')\n    with zipfile.ZipFile(zip_name, 'w') as archive:\n        archive.write(directory)\n    return zip_name", "compilation_passed": true, "time": 0.001560211181640625, "tests_passed": true, "error": null}
{"code": "directory = os.path.join(directory_name)\n    os.makedirs(directory, exist_ok=True)\n\n    with zipfile.ZipFile(directory + \".zip\", mode='w') as archive:\n        for file_name in file_names:\n            with open(os.path.join(directory, file_name), 'w', encoding=encoding) as file:\n                file.write(content)\n            archive.write(file.name)\n\n    return directory + \".zip\"", "compilation_passed": true, "time": 0.007090330123901367, "tests_passed": true, "error": null}
{"code": "directory = os.path.join(\"tests\", directory_name)\n    zip_file_name = os.path.join(directory, \"zipfile.zip\")\n\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n\n    for file_name in file_names:\n        file_path = os.path.join(directory, file_name)\n        with codecs.open(file_path, mode=\"w\", encoding=encoding) as file:\n            file.write(content)\n\n    zip_ref = zipfile.ZipFile(zip_file_name, 'w')\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            zip_ref.write(os.path.join(root, file))\n\n    zip_ref.close()\n\n    return zip_file_name", "compilation_passed": true, "time": 0.002008199691772461, "tests_passed": true, "error": null}
{"code": "# Create the directory if it doesn't exist\n    if not os.path.isdir(directory_name):\n        os.mkdir(directory_name)\n\n    # Create the files\n    for file_name in file_names:\n        with open(os.path.join(directory_name, file_name), 'w', encoding=encoding) as file:\n            file.write(content)\n\n    # Zip the directory\n    zipped_file_name = os.path.splitext(directory_name)[0] + \".zip\"\n    with zipfile.ZipFile(zipped_file_name, 'w') as zip_file:\n        for root, dirs, files in os.walk(directory_name):\n            for file in files:\n                file_path = os.path.join(root, file)\n                zip_file.write(file_path, os.path.relpath(file_path, directory_name))\n\n    return zipped_file_name", "compilation_passed": true, "time": 0.0035440921783447266, "tests_passed": true, "error": null}
{"code": "for file_name in file_names:\n        file_name = os.path.join(directory_name, file_name)\n        with open(file_name, 'w', encoding=encoding) as file:\n            file.write(content)\n    zip_file = zipfile.ZipFile('%s.zip' % directory_name, 'w')\n    for file_name in file_names:\n        file_name = os.path.join(directory_name, file_name)\n        zip_file.write(file_name)\n    zip_file.close()\n    return '%s.zip' % directory_name", "compilation_passed": true, "time": 0.0013079643249511719, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "print(os.listdir(\".\"))\n    # os.mkdir(directory_name)\n    with open('task1_ex3.txt', mode='w') as f:\n        f.write(f'Task 1: Encode the given content using the specified encoding and write it into all .txt files,\\n'\n                f'then zip the directory.')\n    directory_path = os.path.abspath(directory_name)\n    if not os.path.exists(directory_path):\n        os.mkdir(directory_path)\n    for fname in file_names:\n        with open(os.path.join(directory_path, fname), \"w\") as file_:\n            file_.write(content)\n    print(directory_path)\n    file_list = [fname for fname in os.listdir(directory_path)]\n    print(file_list)\n    print(zipfile.is_zipfile(directory_path))\n    with zipfile.ZipFile(os.path.join(directory_path, f\"{directory_", "compilation_passed": false, "time": 0.00011491775512695312, "tests_passed": false, "error": "SyntaxError"}
{"code": "zip_file_name = \"\"\n    if not os.path.isdir(directory_name):\n        os.mkdir(directory_name)\n        zip_file_name = \"{0}.zip\".format(directory_name)\n    else:\n        zip_file_name = directory_name + \".zip\"\n    if os.path.isfile(zip_file_name):\n        os.remove(zip_file_name)\n    with zipfile.ZipFile(zip_file_name, 'w', compression=zipfile.ZIP_DEFLATED) as zipf:\n        for file_name in file_names:\n            with codecs.open(os.path.join(directory_name, file_name), \"w\", encoding=encoding) as f:\n                f.write(content)\n            zipf.write(os.path.join(directory_name, file_name))\n        zipf.close()\n    return zip_file_name", "compilation_passed": true, "time": 0.007049083709716797, "tests_passed": true, "error": null}
{"code": "if os.path.exists(directory_name):\n        raise OSError(f\"File {directory_name} already exists.\")\n\n    os.makedirs(directory_name)\n\n    for i in range(len(file_names)):\n        with codecs.open(os.path.join(directory_name, file_names[i]), \"w\", encoding=encoding) as f:\n            f.write(content)\n\n    with zipfile.ZipFile(os.path.join(directory_name, os.path.basename(directory_name)+'.zip'), 'w', zipfile.ZIP_DEFLATED) as zf:\n        zf.write(os.path.abspath(directory_name), os.path.basename(directory_name))\n\n    return os.path.join(directory_name, os.path.basename(directory_name)+'.zip')", "compilation_passed": true, "time": 0.0017962455749511719, "tests_passed": true, "error": null}
{"code": "try:\n        os.makedirs(directory_name)\n    except FileExistsError:\n        pass\n    with codecs.open(os.path.join(directory_name, file_names[0].strip()), \"w\", encoding) as f:\n        f.write(content)\n    for name in file_names:\n        with codecs.open(os.path.join(directory_name, name), \"w\", encoding) as f:\n            f.write(content)\n    with zipfile.ZipFile(os.path.join(directory_name, '{}.zip'.format(directory_name)), 'w') as zf:\n        zf.write(directory_name)\n    return os.path.join(directory_name, '{}.zip'.format(directory_name))", "compilation_passed": true, "time": 0.0017430782318115234, "tests_passed": true, "error": null}
{"code": "# Create the directory\n    if not os.path.isdir(directory_name):\n        os.mkdir(directory_name)\n    else:\n        print(\"Directory exists.\")\n\n    # Create the files\n    for file_name in file_names:\n        with open(os.path.join(directory_name, file_name), 'w', encoding=encoding) as f:\n            f.write(content)\n\n    # Zip the files\n    zipped_file_name = directory_name + '.zip'\n    with zipfile.ZipFile(zipped_file_name, 'w', compression=zipfile.ZIP_DEFLATED) as zip_file:\n        for root, _, files in os.walk(directory_name):\n            for file in files:\n                if file_name in file:\n                    file_path = os.path.join(root, file)\n                    zip_file.write(file_path)\n\n    # Delete the files\n    for file_name in file_names:\n        file_path = os.path.join(", "compilation_passed": false, "time": 0.00028586387634277344, "tests_passed": false, "error": "SyntaxError"}
{"code": "os.makedirs(directory_name, exist_ok=True)\n    for filename in file_names:\n        file_path = os.path.join(directory_name, filename)\n        with open(file_path, \"w\", encoding=encoding) as f:\n            f.write(content)\n\n    zip_path = os.path.join(directory_name, directory_name + \".zip\")\n    with zipfile.ZipFile(zip_path, \"w\", zipfile.ZIP_DEFLATED) as zf:\n        for filename in os.listdir(directory_name):\n            if os.path.isfile(filename):\n                zf.write(os.path.join(directory_name, filename))\n    return zip_path", "compilation_passed": true, "time": 0.0017459392547607422, "tests_passed": true, "error": null}
{"code": "directory_path = os.path.join(os.getcwd(), directory_name)\n    if not os.path.exists(directory_path):\n        os.mkdir(directory_path)\n    for name in file_names:\n        file_path = os.path.join(directory_path, name)\n        with open(file_path, \"w\", encoding=encoding) as file:\n            file.write(content)\n    zipped_file_path = os.path.join(directory_path, \"{}.zip\".format(directory_name))\n    with zipfile.ZipFile(zipped_file_path, \"w\") as zf:\n        for file_path in os.listdir(directory_path):\n            zf.write(file_path, arcname=file_path)\n    return zipped_file_path", "compilation_passed": true, "time": 0.0017011165618896484, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "zipped_file = \"{}/{}.zip\".format(directory_name, \"files\")\n    with open(\"{}.txt\".format(zipped_file), \"wb\") as file:\n        file.write(content.encode(encoding=encoding))\n\n    for file_name in file_names:\n        file = \"{}/{}\".format(directory_name, file_name)\n        with open(file, \"wb\") as new_file:\n            new_file.write(content.encode(encoding=encoding))\n        print(\"{} {}\".format(file, \"OK\"))\n    with zipfile.ZipFile(zipped_file, \"w\", zipfile.ZIP_DEFLATED) as new_zip:\n        new_zip.write(zipped_file)\n        for file in file_names:\n            new_zip.write(os.path.join(directory_name, file))\n            print(\"{} {}\".format(file, \"OK\"))\n    return zipped_file", "compilation_passed": true, "time": 0.0019478797912597656, "tests_passed": true, "error": null}
{"code": "# Create directory\n    if not os.path.exists(directory_name):\n        os.mkdir(directory_name)\n\n    # Create files\n    for filename in file_names:\n        path = os.path.join(directory_name, filename)\n        with open(path, 'w', encoding=encoding) as f:\n            f.write(content)\n\n    # Zip the directory\n    zipped_file_name = os.path.join(directory_name, directory_name + '.zip')\n    with zipfile.ZipFile(zipped_file_name, 'w') as zipped_file:\n        for dir_name, dir_names, file_names in os.walk(directory_name):\n            for file in file_names:\n                zipped_file.write(os.path.join(dir_name, file), arcname=os.path.relpath(os.path.join(dir_name, file), start=directory_name))\n\n    return zipped_file_name", "compilation_passed": true, "time": 0.0020558834075927734, "tests_passed": true, "error": null}
{"code": "path_dir = os.path.dirname(os.path.abspath(__file__))\n    path_dir = os.path.join(path_dir, directory_name)\n    os.makedirs(path_dir, exist_ok=True)\n\n    for file_name in file_names:\n        file_path = os.path.join(path_dir, file_name)\n        with open(file_path, \"w\", encoding=encoding) as file:\n            file.write(content)\n\n    zipped_file = zip_dir(path_dir, file_names)\n\n    return zipped_file", "compilation_passed": true, "time": 0.001302957534790039, "tests_passed": false, "error": "NameError"}
{"code": "def create_dir(directory_name):\n        '''\n        Creates directory with given name, or raises an error if the directory already exists.\n        '''\n        if os.path.exists(directory_name):\n            raise FileExistsError(\"Directory exists\")\n        os.makedirs(directory_name)\n\n    def write_to_txt(directory_name, file_name, encoding, content):\n        '''\n        Writes the specified content to the specified file with the given encoding.\n\n        Args:\n        directory_name (str): The directory in which the file should be created.\n        file_name (str): The name of the file.\n        encoding (str): The encoding type for the file.\n        content (str): The content to be written to the file.\n        '''\n        file_path = os.path.join(directory_name, file_name)\n        with open(file_path, \"w\", encoding=encoding) as file:\n            file.write(content)\n\n    def zip_dir(directory_name):\n        '''\n        Zip all files in the specified directory.\n        ", "compilation_passed": false, "time": 0.00012087821960449219, "tests_passed": false, "error": "SyntaxError"}
