{"code": "files = os.listdir(directory)\n    matching_files = []\n\n    for file in files:\n        if (\n            re.search('like|what', file, re.IGNORECASE)\n            and file.endswith(\".txt\")\n        ):\n            matching_files.append(file)\n\n    new_dir = os.path.join(directory, \"Interesting Files\")\n    if not os.path.exists(new_dir):\n        os.mkdir(new_dir)\n\n    for file in matching_files:\n        source_file = os.path.join(directory, file)\n        dest_file = os.path.join(new_dir, file)\n        shutil.move(source_file, dest_file)\n\n    return matching_files", "compilation_passed": true, "time": 0.0022840499877929688, "tests_passed": true, "error": null}
{"code": "file_list = []\n    if os.path.isdir(directory):\n        for sub_dir, dirs, files in os.walk(directory):\n            if sub_dir:\n                for file_name in files:\n                    if re.search(r'what|like', file_name, re.IGNORECASE):\n                        file_list.append(file_name)\n                        shutil.move(os.path.join(sub_dir, file_name), os.path.join(sub_dir, 'Interesting Files', file_name))\n    return file_list", "compilation_passed": true, "time": 0.0022530555725097656, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "res = []\n    files = os.listdir(directory)\n    for file in files:\n        if 'like' in file.lower() or 'what' in file.lower():\n            res.append(file)\n    os.makedirs(os.path.join(directory, 'Interesting Files'), exist_ok=True)\n    for file in res:\n        shutil.move(os.path.join(directory, file), os.path.join(directory, 'Interesting Files', file))\n    return res", "compilation_passed": true, "time": 0.007812976837158203, "tests_passed": true, "error": null}
{"code": "files_moved = []\n    interesting_files = []\n    for filename in os.listdir(directory):\n        if re.search('(?i:like|what)', filename) is not None:\n            interesting_files.append(filename)\n        elif re.search('\\.(?i:txt|doc|jpg|pdf)$', filename) is not None:\n            files_moved.append(filename)\n    if len(interesting_files) > 0:\n        shutil.move(directory, directory + '_Interesting Files')\n        for filename in interesting_files:\n            shutil.move(os.path.join(directory, filename), os.path.join(directory + '_Interesting Files', filename))\n    return files_moved", "compilation_passed": true, "time": 0.002079010009765625, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "regex = re.compile(r'((like)|(what))', flags=re.IGNORECASE)\n    interesting_files = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if regex.search(file):\n                interesting_files.append(os.path.join(root, file))\n    if len(interesting_files) > 0:\n        shutil.move(*interesting_files, os.path.join(directory, 'Interesting Files'))\n    return interesting_files", "compilation_passed": true, "time": 0.0019130706787109375, "tests_passed": false, "error": "TypeError"}
{"code": "files_to_move = []\n\n    for file in os.listdir(directory):\n        file_path = os.path.join(directory, file)\n        if os.path.isfile(file_path):\n            if re.search(\"like|what\", file, re.IGNORECASE):\n                files_to_move.append(file_path)\n\n    if not os.path.isdir(os.path.join(directory, 'Interesting Files')):\n        os.mkdir(os.path.join(directory, 'Interesting Files'))\n    for file in files_to_move:\n        shutil.move(file, os.path.join(directory, 'Interesting Files'))\n\n    return files_to_move", "compilation_passed": true, "time": 0.0024878978729248047, "tests_passed": true, "error": null}
{"code": "matches = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if \"like\" in file.lower() or \"what\" in file.lower():\n                matches.append(os.path.join(root, file))\n\n    if len(matches) == 0:\n        return []\n\n    os.mkdir(os.path.join(directory, \"Interesting Files\"))\n    for file in matches:\n        shutil.move(file, os.path.join(directory, \"Interesting Files\"))\n\n    return matches", "compilation_passed": true, "time": 0.002395153045654297, "tests_passed": true, "error": null}
{"code": "results = []\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for filename in filenames:\n            # Check if the filename contains \"like\" or \"what\"\n            if \"like\" in filename.lower() or \"what\" in filename.lower():\n                # Create a new subdirectory in the current directory\n                subdir = os.path.join(dirpath, 'Interesting Files')\n                os.makedirs(subdir, exist_ok=True)\n                # Move the file to the new subdirectory\n                src = os.path.join(dirpath, filename)\n                dst = os.path.join(subdir, filename)\n                shutil.move(src, dst)\n                results.append(dst)\n    return results", "compilation_passed": true, "time": 0.002306222915649414, "tests_passed": true, "error": null}
{"code": "files = []\n\n    # Check if the directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory not found: {directory}\")\n\n    # Iterate through files in the directory\n    for filename in os.listdir(directory):\n        filepath = os.path.join(directory, filename)\n        if os.path.isfile(filepath):\n            # Check if the file contains either \"like\" or \"what\" in the name\n            if 'like' in os.path.basename(filename).lower() or 'what' in os.path.basename(filename).lower():\n                # Move the file to the \"Interesting Files\" directory\n                dest = os.path.join(directory, 'Interesting Files')\n                shutil.move(filepath, dest)\n                files.append(filename)\n\n    return files", "compilation_passed": true, "time": 0.008031845092773438, "tests_passed": true, "error": null}
{"code": "new_dir = os.path.join(directory, 'Interesting Files')\n    os.makedirs(new_dir, exist_ok=True)\n    moved_files = []\n    for file_name in os.listdir(directory):\n        file_path = os.path.join(directory, file_name)\n        if file_name.lower().find('like') > 0 or file_name.lower().find('what') > 0:\n            shutil.move(file_path, os.path.join(new_dir, file_name))\n            moved_files.append(file_name)\n    return moved_files", "compilation_passed": true, "time": 0.003203153610229492, "tests_passed": true, "error": null}
{"code": "directory = os.path.abspath(directory)\n\n    files_to_move = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if re.search(r\".*\\b(like|what)\\b.*\", file, re.IGNORECASE):\n                files_to_move.append(os.path.join(root, file))\n\n    shutil.move(*files_to_move)\n\n    return files_to_move", "compilation_passed": true, "time": 0.002260923385620117, "tests_passed": false, "error": "TypeError"}
{"code": "pattern = \"like|what\"\n    files = []\n    for root, dirs, _ in os.walk(directory):\n        for dir_ in dirs:\n            if re.search(pattern, dir_, re.IGNORECASE):\n                subdir = os.path.join(root, dir_)\n                for root, dirs, files_ in os.walk(subdir):\n                    files.extend([os.path.join(root, f) for f in files_])\n                os.rmdir(subdir)\n    files = [os.path.join(directory, f) for f in files if os.path.isfile(f)]\n    subdir = os.path.join(directory, \"Interesting Files\")\n    os.makedirs(subdir, exist_ok=True)\n    for file in files:\n        shutil.move(file, subdir)\n    return files", "compilation_passed": true, "time": 0.002471923828125, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    # Write your code here\n\n    for filename in os.listdir(directory):\n        if \"what\" in filename or \"like\" in filename:\n            dest = os.path.join(directory, \"Interesting Files\")\n            if not os.path.exists(dest):\n                os.mkdir(dest)\n\n            source_path = os.path.join(directory, filename)\n            shutil.move(source_path, dest)\n            moved_files.append(filename)\n\n    return moved_files", "compilation_passed": true, "time": 0.002699136734008789, "tests_passed": true, "error": null}
{"code": "regex = re.compile(r\"\\b(like|what)\\b\", re.IGNORECASE)\n    interesting_files = []\n\n    for file in os.listdir(directory):\n        if re.search(regex, file):\n            interesting_files.append(file)\n\n    shutil.move(*zip(interesting_files, [os.path.join(directory, file) for file in interesting_files]))\n    return interesting_files", "compilation_passed": true, "time": 0.0020999908447265625, "tests_passed": false, "error": "TypeError"}
{"code": "file_list = []\n    pattern = '(?i:like|what).+[.]{1}[a-zA-Z]+$'  # Regular expression pattern for file names containing the keywords\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if re.search(pattern, file):\n                file_list.append(os.path.join(root, file))\n\n    if not os.path.isdir(os.path.join(directory, 'Interesting Files')):\n        os.mkdir(os.path.join(directory, 'Interesting Files'))\n\n    for file in file_list:\n        shutil.move(file, os.path.join(directory, 'Interesting Files'))\n\n    return file_list", "compilation_passed": true, "time": 0.002543210983276367, "tests_passed": true, "error": null}
{"code": "# The directory path.\n    directory = os.path.abspath(directory)\n    files = []\n\n    # Get the list of files in the directory.\n    file_list = os.listdir(directory)\n\n    # Iterate over the list of files.\n    for file in file_list:\n        file_path = os.path.join(directory, file)\n\n        if os.path.isfile(file_path) and 'like' in file.lower() or 'what' in file.lower():\n            # Move the file to a new subdirectory.\n            new_directory = os.path.join(directory, 'Interesting Files')\n            shutil.move(file_path, new_directory)\n\n            # Add the moved file to the list.\n            files.append(os.path.join(new_directory, file))\n\n    return files", "compilation_passed": true, "time": 0.0025091171264648438, "tests_passed": true, "error": null}
{"code": "interesting_files = []\n    for file in os.listdir(directory):\n        if re.search('like|what', file, re.IGNORECASE):\n            interesting_files.append(file)\n    shutil.move(os.path.join(directory, os.listdir(directory)[0]), os.path.join(directory, 'Interesting Files'))\n    return interesting_files", "compilation_passed": true, "time": 0.00458216667175293, "tests_passed": true, "error": null}
{"code": "files_to_move = []\n    for file_name in os.listdir(directory):\n        if \"like\" in file_name or \"what\" in file_name:\n            files_to_move.append(file_name)\n            # shutil.move(os.path.join(directory, file_name), os.path.join(directory, \"Interesting Files\", file_name))\n    shutil.move(os.path.join(directory, files_to_move[0]), os.path.join(directory, \"Interesting Files\", files_to_move[0]))\n    for file in files_to_move[1:]:\n        shutil.move(os.path.join(directory, file), os.path.join(directory, \"Interesting Files\", file))\n    return files_to_move", "compilation_passed": true, "time": 0.002496004104614258, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "file_list = []\n    directory_files = os.listdir(directory)\n    for file in directory_files:\n        if 'like' in file or 'what' in file:\n            file_list.append(file)\n    if file_list:\n        shutil.move(directory, directory + os.sep + \"Interesting Files\")\n    return file_list", "compilation_passed": true, "time": 0.002218008041381836, "tests_passed": false, "error": "shutil.Error"}
{"code": "# Create a new subdirectory called \"Interesting Files\"\n    new_directory = os.path.join(directory, \"Interesting Files\")\n    os.makedirs(new_directory, exist_ok=True)\n\n    # Find the files that contain \"like\" or \"what\"\n    interesting_files = []\n    for filename in os.listdir(directory):\n        if re.search(r\"(like|what)\", filename, re.IGNORECASE):\n            interesting_files.append(filename)\n\n    # Move the interesting files to the new subdirectory\n    for file in interesting_files:\n        source_path = os.path.join(directory, file)\n        dest_path = os.path.join(new_directory, file)\n        shutil.move(source_path, dest_path)\n\n    return interesting_files", "compilation_passed": true, "time": 0.008295774459838867, "tests_passed": true, "error": null}
{"code": "directory_contents = os.listdir(directory)\n\n    interesting_file_paths = []\n    for file in directory_contents:\n        if 'like' in file or 'what' in file:\n            interesting_file_paths.append(os.path.join(directory, file))\n\n    interesting_files = []\n    for file_path in interesting_file_paths:\n        with open(file_path, 'r') as f:\n            data = f.read()\n        interesting_files.append(data)\n\n    interesting_directory_path = os.path.join(directory, \"Interesting Files\")\n    os.mkdir(interesting_directory_path)\n\n    for file, data in zip(interesting_file_paths, interesting_files):\n        with open(os.path.join(interesting_directory_path, os.path.basename(file)), 'w') as f:\n            f.write(data)\n\n    return interesting_file_paths", "compilation_passed": true, "time": 0.0028858184814453125, "tests_passed": true, "error": null}
{"code": "moved_files = []\n    for file in os.listdir(directory):\n        if file.lower().find(\"like\") >= 0 or file.lower().find(\"what\") >= 0:\n            moved_files.append(file)\n    if not os.path.exists(directory):\n        raise FileNotFoundError(\"Directory not found\")\n    elif not os.path.isdir(directory):\n        raise NotADirectoryError(\"Path is not a directory\")\n    elif len(moved_files) == 0:\n        raise FileNotFoundError(\"No files found with the keywords 'like' or 'what' in the directory\")\n    else:\n        new_directory_path = os.path.join(directory, \"Interesting Files\")\n        if not os.path.exists(new_directory_path):\n            os.makedirs(new_directory_path)\n        for moved_file in moved_files:\n            shutil.move(os.path.join(directory, moved_file), new_directory_path)\n        return moved_files", "compilation_passed": true, "time": 0.010791301727294922, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "moved_files = []\n\n    for root, _, files in os.walk(directory):\n        for file in files:\n            if \"like\" in file.lower() or \"what\" in file.lower():\n                moved_files.append(os.path.join(root, file))\n                shutil.move(os.path.join(root, file), os.path.join(root, \"Interesting Files\"))\n\n    return moved_files", "compilation_passed": true, "time": 0.002772808074951172, "tests_passed": true, "error": null}
{"code": "files = []\n    # TODO: Write your solution here.\n\n    files_to_check = []\n    for file_name, file_type in os.walk(directory):\n        files_to_check.append(file_name)\n\n    for file in files_to_check:\n        if os.path.exists(file) and os.path.isfile(file):\n            with open(file, 'r', encoding='utf-8') as file:\n                content = file.read()\n                if re.search(r'\\blike\\b', content, re.IGNORECASE):\n                    os.makedirs(os.path.join(directory, 'Interesting Files'), exist_ok=True)\n                    new_file_path = os.path.join(directory, 'Interesting Files', file_name)\n                    os.rename(file, new_file_path)\n                    files.append(file_name)\n\n    return files", "compilation_passed": true, "time": 0.0021409988403320312, "tests_passed": false, "error": "ValueError"}
{"code": "import re\n    import os\n    import shutil\n\n    pattern = re.compile('[lL]ike|[wW]hat')\n    files = []\n    if os.path.isdir(directory):\n        for file in os.listdir(directory):\n            if pattern.search(file):\n                files.append(file)\n                shutil.move(os.path.join(directory, file), os.path.join(directory, \"Interesting Files\", file))\n    return files", "compilation_passed": true, "time": 0.002746105194091797, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# TODO: Implement the task\n\n    # Write your code here\n\n    # The files with filenames that contain \"like\" or \"what\" are saved in files_to_move.\n    # files_to_move = []\n\n    # For each file in the directory.\n    for filename in os.listdir(directory):\n        # Get the file's extension.\n        extension = os.path.splitext(filename)[1].lower()\n        # If the file's extension is .txt, .doc, or .docx, save the file's name to files_to_move.\n        if extension in ['.txt', '.doc', '.docx']:\n            with open(filename, 'r') as f:\n                content = f.read()\n                if 'like' in content or 'what' in content:\n                    # os.makedirs(\"Interesting Files\", exist_ok=True)\n                    shutil.copy(filename, os.path.join(\"Interesting Files\", filename))\n                    # files_to_move.append", "compilation_passed": true, "time": 0.0021600723266601562, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "interesting_files = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if re.search('(like|what)', file, re.I) is not None:\n                interesting_files.append(os.path.join(root, file))\n    shutil.make_archive(\n        os.path.join(directory, 'interesting_files'),\n        'gztar',\n        directory=directory\n    )\n    shutil.move(\n        os.path.join(directory, 'interesting_files.tar.gz'),\n        os.path.join(directory, 'interesting_files.tar.gz')\n    )\n    shutil.move(\n        os.path.join(directory, 'interesting_files.tar.gz'),\n        os.path.join(directory, 'interesting_files.tar.gz')\n    )\n    return interesting_files", "compilation_passed": true, "time": 0.002135038375854492, "tests_passed": false, "error": "TypeError"}
{"code": "# Create an empty list to store filenames that match the keywords\n    matched_files = []\n\n    # Use the os.listdir() method to retrieve the files in the directory\n    directory_files = os.listdir(directory)\n\n    # Iterate over each file\n    for file in directory_files:\n        # Open the file in read-only mode\n        with open(os.path.join(directory, file), 'r') as f:\n            # Read the contents of the file\n            contents = f.read()\n            # Check if the file contains keywords\n            if 'like' in contents or 'what' in contents:\n                # Move the file to the 'Interesting Files' subdirectory\n                shutil.move(os.path.join(directory, file), os.path.join(directory, 'Interesting Files', file))\n                # Add the file to the list of matched files\n                matched_files.append(file)\n\n    return matched_files", "compilation_passed": true, "time": 0.0020580291748046875, "tests_passed": true, "error": null}
{"code": "files = os.listdir(directory)\n    interesting_files = []\n    for file in files:\n        if \"like\" in file or \"what\" in file:\n            interesting_files.append(file)\n    if not os.path.exists(os.path.join(directory, \"Interesting Files\")):\n        os.mkdir(os.path.join(directory, \"Interesting Files\"))\n    for file in interesting_files:\n        shutil.move(os.path.join(directory, file), os.path.join(directory, \"Interesting Files\", file))\n    return interesting_files", "compilation_passed": true, "time": 0.002454996109008789, "tests_passed": true, "error": null}
{"code": "if not directory.endswith(\"/\") or directory.endswith(\"\\\\\"):\n        directory = directory + \"/\"\n    matching_files = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if re.search('[aA]like|[aA]what', file):\n                matching_files.append(file)\n    os.makedirs(os.path.join(directory, 'Interesting Files'), exist_ok=True)\n    for file in matching_files:\n        shutil.move(os.path.join(directory, file), os.path.join(directory, 'Interesting Files'))\n    return matching_files", "compilation_passed": true, "time": 0.002440929412841797, "tests_passed": true, "error": null}
