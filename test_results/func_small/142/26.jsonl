{"code": "fig = plt.figure()\n    fig.suptitle(\"Sine and Cosine\")\n\n    axs = fig.subplots(2)\n    axs[0].set_title(\"Sine function\")\n    axs[0].set(ylabel=\"sin(x)\")\n    axs[0].plot([i * 0.5 for i in range(50)], [np.sin(i * 0.5) for i in range(50)], '--')\n    axs[0].set(xlabel=\"x\")\n\n    axs[1].set_title(\"Cosine function\")\n    axs[1].set(ylabel=\"cos(x)\")\n    axs[1].plot([i * 0.5 for i in range(50)], [np.cos(i * 0.5) for i in range(50)], '--')\n    axs[1].set(xlabel=\"x\")\n\n    return fig, axs", "compilation_passed": true, "time": 0.1002340316772461, "tests_passed": true, "error": null}
{"code": "def sine_func(x):\n        return np.sin(x)\n\n    def cosine_func(x):\n        return np.cos(x)\n\n    fig, axs = plt.subplots(1, 2, figsize=(6, 3))\n    axs[0].plot(range(0, 1000), sine_func(range(0, 1000)))\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    axs[1].plot(range(0, 1000), cosine_func(range(0, 1000)))\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.0931239128112793, "tests_passed": true, "error": null}
{"code": "s = np.linspace(0, 2*np.pi, 1000)\n    sin_s = np.sin(s)\n    cos_s = np.cos(s)\n\n    plt.plot(s, sin_s, label='Sine function')\n    plt.plot(s, cos_s, label='Cosine function')\n    plt.xlabel('x')\n    plt.ylabel('sin(x)')\n    plt.title('Sine and Cosine Functions')\n    plt.legend()\n\n    return plt.gcf(), plt.gca()", "compilation_passed": true, "time": 0.0020182132720947266, "tests_passed": false, "error": "TypeError"}
{"code": "import numpy as np\n    import matplotlib.pyplot as plt\n\n    # Generate x values for the sine function\n    x = np.linspace(0, 2 * np.pi, 100)\n    y1 = np.sin(x)\n\n    # Generate x values for the cosine function\n    x2 = np.linspace(0, 2 * np.pi, 100)\n    y2 = np.cos(x2)\n\n    # Create figure and axes\n    fig, axs = plt.subplots(ncols=2, figsize=(8, 6))\n\n    # Plot the sine function\n    axs[0].plot(x, y1, label='Sine function')\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot the cosine function\n    axs[1].plot(x2, y2, label='Cosine function')\n    axs[1].set_", "compilation_passed": true, "time": 0.01861405372619629, "tests_passed": false, "error": "AttributeError"}
{"code": "fig, axs = plt.subplots(1, 2)\n\n    x = np.linspace(0, 2 * np.pi, 20)\n\n    axs[0].plot(x, np.sin(x))\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    axs[1].plot(x, np.cos(x))\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.0903470516204834, "tests_passed": true, "error": null}
{"code": "fig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n    fig.suptitle('Sine and Cosine Functions')\n    axs[0].plot(x, np.sin(x), label='sin(x)')\n    axs[1].plot(x, np.cos(x), label='cos(x)')\n\n    axs[0].set(ylabel='sin(x)', xlabel='x')\n    axs[0].set_title('Sine function')\n    axs[1].set_title('Cosine function')\n    axs[1].set(xlabel='x', ylabel='cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.017429113388061523, "tests_passed": false, "error": "NameError"}
{"code": "n = 1000\n    x = np.linspace(0, 2 * np.pi, n, endpoint=True)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n\n    fig, axs = plt.subplots(ncols=2, sharey='all')\n    axs[0].plot(x, y_sin)\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].set_title('Sine function')\n\n    axs[1].plot(x, y_cos)\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n    axs[1].set_title('Cosine function')\n    plt.show()\n    return fig, axs", "compilation_passed": true, "time": 0.09239792823791504, "tests_passed": true, "error": null}
{"code": "plt.figure()\n\n    x = np.linspace(0, 2*np.pi, 10000, endpoint=True)\n\n    # Sine Function\n    axs[0].plot(x, np.sin(x))\n    axs[0].set_xlabel(r'x')\n    axs[0].set_ylabel(r'sin(x)')\n    axs[0].set_title('Sine function')\n\n    # Cosine Function\n    axs[1].plot(x, np.cos(x))\n    axs[1].set_xlabel(r'x')\n    axs[1].set_ylabel(r'cos(x)')\n    axs[1].set_title('Cosine function')\n\n    return plt.gcf(), axs", "compilation_passed": true, "time": 0.011319875717163086, "tests_passed": false, "error": "NameError"}
{"code": "def sine(x):\n        return np.sin(x)\n\n    def cosine(x):\n        return np.cos(x)\n\n    x = np.linspace(0, 2 * np.pi, 100)\n\n    fig = plt.figure(figsize=(8, 6))\n    ax1 = fig.add_subplot(2, 1, 1)\n    ax2 = fig.add_subplot(2, 1, 2)\n\n    ax1.plot(x, sine(x), label='Sine function')\n    ax1.grid(True)\n    ax1.set(xlabel='x', ylabel='sin(x)', title='Sine function')\n\n    ax2.plot(x, cosine(x), label='Cosine function')\n    ax2.grid(True)\n    ax2.set(xlabel='x', ylabel='cos(x)', title='Cosine function')\n\n    plt.suptitle('Sine and Cosine function')\n    plt.show()\n\n    return fig, ax1,", "compilation_passed": true, "time": 0.019379854202270508, "tests_passed": false, "error": "TypeError"}
{"code": "x = np.linspace(0, 2 * np.pi, 100)\n    fig = plt.figure()\n    fig.subplots_adjust(bottom=0.1, left=0.15, top=0.75, right=0.85)\n    ax1 = fig.add_subplot(211)\n    ax2 = fig.add_subplot(212)\n\n    ax1.plot(x, np.sin(x))\n    ax1.set_ylabel('sin(x)')\n    ax1.set_xlabel('x')\n    ax1.set_title('Sine function')\n\n    ax2.plot(x, np.cos(x))\n    ax2.set_ylabel('cos(x)')\n    ax2.set_xlabel('x')\n    ax2.set_title('Cosine function')\n    return fig, [ax1, ax2]", "compilation_passed": true, "time": 0.08499002456665039, "tests_passed": true, "error": null}
{"code": "fig = plt.figure(figsize=(14, 9))\n    fig.suptitle('Sine and Cosine functions')\n    ax1 = fig.add_subplot(2,1,1)\n    ax2 = fig.add_subplot(2,1,2)\n    x = np.linspace(0, 2 * np.pi, 1000)\n    y = np.sin(x)\n    ax1.plot(x, y, label='Sine function')\n    ax1.set_title('Sine function')\n    ax1.set_xlabel('x')\n    ax1.set_ylabel('sin(x)')\n    ax1.set_ylim(-1.5, 1.5)\n    x = np.linspace(0, 2 * np.pi, 1000)\n    y = np.cos(x)\n    ax2.plot(x, y, label='Cosine function')\n    ax2.set_title('Cosine function')\n    ax2.set_xlabel('x')\n    ax2.set_ylabel", "compilation_passed": true, "time": 0.019923925399780273, "tests_passed": false, "error": "TypeError"}
{"code": "# Task 1\n    x = np.linspace(0, 2*np.pi, 1000)\n    # Task 1\n    y = np.sin(x)\n    # Task 1\n    ax1 = plt.subplot(2, 1, 1)\n    # Task 1\n    ax1.plot(x, y)\n    # Task 1\n    ax1.set_xlabel('x')\n    # Task 1\n    ax1.set_ylabel('sin(x)')\n    # Task 1\n    ax1.set_title('Sine function')\n\n    # Task 1\n    y = np.cos(x)\n    # Task 1\n    ax2 = plt.subplot(2, 1, 2)\n    # Task 1\n    ax2.plot(x, y)\n    # Task 1\n    ax2.set_xlabel('x')\n    # Task 1\n    ax2.set_ylabel('cos(x)')\n    # Task 1\n    ax2.set_title('Cosine function')\n", "compilation_passed": true, "time": 0.001435995101928711, "tests_passed": false, "error": "TypeError"}
{"code": "# Step 1: Create the figure and two subplots\n    fig = plt.figure()\n    ax1 = fig.add_subplot(2, 1, 1)\n    ax2 = fig.add_subplot(2, 1, 2)\n\n    # Step 2: Set appropriate titles for the plots\n    ax1.set_title('Sine function')\n    ax2.set_title('Cosine function')\n\n    # Step 3: Set axis labels for both plots\n    ax1.set(xlabel='x', ylabel='sin(x)')\n    ax2.set(xlabel='x', ylabel='cos(x)')\n\n    # Step 4: Plot the sine and cosine functions over the range [0, 2\u03c0] using Matplotlib's matplotlib.pyplot.plot()\n    t = np.linspace(0, 2*np.pi, 100)\n    ax1.plot(t, np.sin(t), label='Sine function')\n    ax2.plot(t, np.cos(t), label='Cosine", "compilation_passed": false, "time": 9.012222290039062e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "fig = plt.figure(figsize=(8, 6))\n    axs = np.array([plt.subplot2grid((1, 2), (0, 0), colspan=1), plt.subplot2grid((1, 2), (0, 1), colspan=1)])\n    axs[0].plot(np.linspace(0, 2*np.pi, 500), np.sin(np.linspace(0, 2*np.pi, 500)))\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[1].plot(np.linspace(0, 2*np.pi, 500), np.cos(np.linspace(0, 2*np.pi, 500)))\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')", "compilation_passed": true, "time": 0.017617225646972656, "tests_passed": false, "error": "TypeError"}
{"code": "fig, axs = plt.subplots(ncols=2)\n\n    # Set the range of values to be plotted\n    x_values = np.linspace(0, 2 * np.pi, 100)\n    y_sine = np.sin(x_values)\n    y_cosine = np.cos(x_values)\n\n    # Plot the sine function\n    axs[0].plot(x_values, y_sine, label='Sine function')\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    # Plot the cosine function\n    axs[1].plot(x_values, y_cosine, label='Cosine function')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.32353997230529785, "tests_passed": true, "error": null}
{"code": "# Generate sine and cosine arrays\n    x = np.linspace(0, 2*np.pi, 1000)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n\n    # Generate figure and axes\n    fig, axs = plt.subplots(1, 2, figsize=(12, 7))\n\n    # Plot sine and cosine functions on the same axes\n    axs[0].plot(x, y_sin, 'r', label='Sine function')\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].legend()\n\n    axs[1].plot(x, y_cos, 'g', label='Cosine function')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos", "compilation_passed": false, "time": 0.00013589859008789062, "tests_passed": false, "error": "SyntaxError"}
{"code": "fig = plt.figure()\n    axs = [\n        fig.add_subplot(2, 1, 1),\n        fig.add_subplot(2, 1, 2),\n    ]\n\n    x = np.linspace(0, 2 * np.pi, 1000)\n\n    y1 = np.sin(x)\n    y2 = np.cos(x)\n\n    axs[0].plot(x, y1, label='Sine function')\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].grid(True)\n    axs[0].legend()\n\n    axs[1].plot(x, y2, label='Cosine function')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(", "compilation_passed": false, "time": 9.799003601074219e-05, "tests_passed": false, "error": "SyntaxError"}
{"code": "fig, axs = plt.subplots(1, 2)\n\n    axs[0].plot(np.linspace(0, 2 * np.pi, 100), np.sin(np.linspace(0, 2 * np.pi, 100)))\n    axs[0].set_title(\"Sine function\")\n    axs[0].set_xlabel(\"x\")\n    axs[0].set_ylabel(\"sin(x)\")\n\n    axs[1].plot(np.linspace(0, 2 * np.pi, 100), np.cos(np.linspace(0, 2 * np.pi, 100)))\n    axs[1].set_title(\"Cosine function\")\n    axs[1].set_xlabel(\"x\")\n    axs[1].set_ylabel(\"cos(x)\")\n\n    return fig, axs", "compilation_passed": true, "time": 0.09263110160827637, "tests_passed": true, "error": null}
{"code": "n_divisions = 100\n\n    x = np.linspace(0, 2*np.pi, n_divisions)\n    sin_vals = np.sin(x)\n    cos_vals = np.cos(x)\n\n    fig, axs = plt.subplots(1, 2)\n\n    axs[0].set_title('Sine function')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].plot(x, sin_vals)\n\n    axs[1].set_title('Cosine function')\n    axs[1].set_ylabel('cos(x)')\n    axs[1].plot(x, cos_vals)\n\n    return fig, axs", "compilation_passed": true, "time": 0.017802000045776367, "tests_passed": true, "error": null}
{"code": "# Generate arrays for the x-axis values and y-axis values for the sine and cosine functions\n    x = np.arange(0, 2*np.pi, 0.1)\n    y_sine = np.sin(x)\n    y_cosine = np.cos(x)\n\n    # Create a figure with 2 subplots\n    fig, axs = plt.subplots(2, figsize=(8, 5), sharex=True)\n\n    # Plot the sine function on the first subplot\n    axs[0].plot(x, y_sine, 'b', label='Sine')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].grid()\n    axs[0].set_title('Sine function')\n\n    # Plot the cosine function on the second subplot\n    axs[1].plot(x, y_cosine, 'g', label='Cosine')\n    axs[1].set_ylabel('cos(x)')\n    axs[1]", "compilation_passed": true, "time": 0.018223047256469727, "tests_passed": false, "error": "TypeError"}
{"code": "# Generate x values from 0 to 2*np.pi\n    x = np.linspace(0, 2*np.pi, 100)\n\n    # Generate sine and cosine values for x\n    sine = np.sin(x)\n    cosine = np.cos(x)\n\n    # Create a figure and two subplots for the sine and cosine functions\n    fig, axs = plt.subplots(ncols=2, figsize=(8, 4))\n\n    # Set titles and axis labels for both subplots\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    # Plot sine and cosine values for x on the subplots\n    axs[0].plot(x, sine, label='sin(", "compilation_passed": false, "time": 0.00011968612670898438, "tests_passed": false, "error": "SyntaxError"}
{"code": "# Create the figure\n    fig = plt.figure()\n\n    # Create the subplots\n    axs = fig.subplots(1, 2)\n\n    # Set the plot titles\n    axs[0].set_title('Sine function')\n    axs[1].set_title('Cosine function')\n\n    # Set the x and y axis labels\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    # Plot the sine and cosine functions on the subplots\n    axs[0].plot(np.linspace(0, 2*np.pi, 100), np.sin(np.linspace(0, 2*np.pi, 100)))\n    axs[1].plot(np.linspace(0, 2*np.pi, 100), np.cos(np.linspace(", "compilation_passed": false, "time": 0.00021505355834960938, "tests_passed": false, "error": "SyntaxError"}
{"code": "fig = plt.figure(figsize=(12, 6))\n    ax1 = fig.add_subplot(121)\n    ax2 = fig.add_subplot(122)\n\n    x = np.linspace(0, 2*np.pi, 1000)\n    ax1.plot(x, np.sin(x), label='Sine function')\n    ax1.grid()\n    ax1.set_ylabel(r'sin(x)')\n    ax1.set_xlabel('x')\n    ax1.set_title('Sine Function')\n\n    ax2.plot(x, np.cos(x), label='Cosine function')\n    ax2.grid()\n    ax2.set_ylabel(r'cos(x)')\n    ax2.set_xlabel('x')\n    ax2.set_title('Cosine Function')\n\n    return fig, [ax1, ax2]", "compilation_passed": true, "time": 0.052995920181274414, "tests_passed": true, "error": null}
{"code": "def sin(x):\n        return np.sin(x)\n\n    def cos(x):\n        return np.cos(x)\n\n    fig, axs = plt.subplots(1, 2)\n    axs[0].plot(np.arange(0, 2*np.pi, 0.01), sin(np.arange(0, 2*np.pi, 0.01)))\n    axs[0].set_title('Sine function')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].set_xlabel('x')\n\n    axs[1].plot(np.arange(0, 2*np.pi, 0.01), cos(np.arange(0, 2*np.pi, 0.01)))\n    axs[1].set_title('Cosine function')\n    axs[1].set_ylabel('cos(x)')\n    axs[1].set_xlabel('x')\n\n    return fig,", "compilation_passed": true, "time": 0.020240306854248047, "tests_passed": false, "error": "ValueError"}
{"code": "# Generate the sine function\n    x_sine = np.linspace(0, 2 * np.pi, 1000)\n    y_sine = np.sin(x_sine)\n\n    # Generate the cosine function\n    x_cosine = np.linspace(0, 2 * np.pi, 1000)\n    y_cosine = np.cos(x_cosine)\n\n    # Create a figure\n    fig = plt.figure()\n\n    # Create a grid layout\n    gs = matplotlib.gridspec.GridSpec(ncols=2, nrows=1)\n\n    # Create Axes objects in the figure\n    ax1 = fig.add_subplot(gs[0])\n    ax2 = fig.add_subplot(gs[1])\n\n    # Plot the sine and cosine functions\n    ax1.plot(x_sine, y_sine, label=\"Sine function\")\n    ax2.plot(x_cosine, y_cosine, label=\"Cosine function\")\n\n    # Set the appropriate", "compilation_passed": true, "time": 0.011528253555297852, "tests_passed": false, "error": "NameError"}
{"code": "# Create figure and axes\n    fig = plt.figure(figsize=(6, 6))\n    axs = fig.subplots(2)\n    fig.subplots_adjust(top=0.9, bottom=0.2, left=0.2, right=0.9)\n\n    # Plot sine function\n    x = np.linspace(0, 2*np.pi, 1000)\n    y = np.sin(x)\n    axs[0].plot(x, y)\n    axs[0].set_title(\"Sine function\")\n    axs[0].set_xlabel(\"x\")\n    axs[0].set_ylabel(\"sin(x)\")\n\n    # Plot cosine function\n    x = np.linspace(0, 2*np.pi, 1000)\n    y = np.cos(x)\n    axs[1].plot(x, y)\n    axs[1].set_title(\"Cosine function\")\n    axs[1].set", "compilation_passed": true, "time": 0.0174868106842041, "tests_passed": false, "error": "TypeError"}
{"code": "# YOUR CODE HERE\n    fig, axs = plt.subplots(2, 1, sharex=True)\n    fig.suptitle('Sine and Cosine Functions')\n    x = np.linspace(0, 2*np.pi, 200)\n    axs[0].plot(x, np.sin(x), label='Sine function', linewidth=3)\n    axs[0].set(xlabel='x', ylabel='sin(x)')\n    axs[1].plot(x, np.cos(x), label='Cosine function', linewidth=3)\n    axs[1].set(xlabel='x', ylabel='cos(x)')\n    axs[1].set_xlim([0, 2*np.pi])\n    axs[0].set_xlim([0, 2*np.pi])\n    return fig, axs", "compilation_passed": true, "time": 0.0548558235168457, "tests_passed": true, "error": null}
{"code": "# Create an empty figure and an empty grid of axes for the subplots\n    fig, axs = plt.subplots(ncols=2)\n\n    # Create x-axis values in the range [0, 2\u03c0] (2001 steps)\n    x = np.linspace(0, 2 * np.pi, 2001)\n\n    # Plot sine function\n    axs[0].plot(x, np.sin(x), label='Sine function')\n\n    # Plot cosine function\n    axs[1].plot(x, np.cos(x), label='Cosine function')\n\n    # Add legends for both axes and set labels and titles\n    axs[0].legend(loc='best')\n    axs[0].set_title('Sine function')\n    axs[0].set_ylabel('sin(x)')\n    axs[0].set_xlabel('x')\n\n    axs[1].legend(loc='best')\n    axs[1].set_title('Cosine function')\n    ax", "compilation_passed": true, "time": 0.021229028701782227, "tests_passed": false, "error": "NameError"}
{"code": "x = np.arange(0, 2*np.pi, 0.1)\n\n    y1 = np.sin(x)\n    y2 = np.cos(x)\n\n    fig, axs = plt.subplots(2)\n    axs[0].plot(x, y1)\n    axs[1].plot(x, y2)\n\n    axs[0].set_title('Sine function')\n    axs[0].set_xlabel('x')\n    axs[0].set_ylabel('sin(x)')\n\n    axs[1].set_title('Cosine function')\n    axs[1].set_xlabel('x')\n    axs[1].set_ylabel('cos(x)')\n\n    return fig, axs", "compilation_passed": true, "time": 0.08736777305603027, "tests_passed": true, "error": null}
{"code": "# generate sine and cosine functions\n    x = np.linspace(0, 2*np.pi, 1000)\n    y1 = np.sin(x)\n    y2 = np.cos(x)\n\n    # create figure with subplots\n    fig, axs = plt.subplots(1, 2, figsize=(8, 4), sharey=True)\n\n    # plot sine function\n    axs[0].plot(x, y1, label='Sine')\n    axs[0].set_title('Sine function')\n    axs[0].set_ylabel('y = sin(x)')\n    axs[0].set_xlabel('x')\n\n    # plot cosine function\n    axs[1].plot(x, y2, label='Cosine')\n    axs[1].set_title('Cosine function')\n    axs[1].set_ylabel('y = cos(x)')\n    axs[1].set_xlabel('x')\n\n    # add legend to both axes\n", "compilation_passed": true, "time": 0.0180208683013916, "tests_passed": false, "error": "TypeError"}
