{"code": "random.seed(seed)\n    words = random.sample(WORDS, n)\n    word_counts = Counter(words)\n    json.dump(word_counts, open(file_name, 'w'))\n    return file_name", "compilation_passed": true, "time": 0.001234292984008789, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    words = random.choices(WORDS, k=n)\n\n    with open(file_name, \"w\") as file:\n        json.dump(Counter(words), file)\n\n    return file_name", "compilation_passed": true, "time": 0.0012657642364501953, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    words = random.sample(WORDS, n)\n    with open(file_name, 'w', encoding='utf-8') as f:\n        json.dump(Counter(words), f, ensure_ascii=False)\n    return file_name", "compilation_passed": true, "time": 0.0011982917785644531, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    random.shuffle(WORDS)\n    n_words = min(n, len(WORDS))\n    word_counts = Counter(WORDS[:n_words])\n\n    with open(file_name, 'w', encoding='utf-8') as f:\n        json.dump(word_counts, f, indent=4)\n\n    return file_name", "compilation_passed": true, "time": 0.0016350746154785156, "tests_passed": true, "error": null}
{"code": "# Create a random list of words\n    random.seed(seed)\n    words_list = random.sample(WORDS, n)\n\n    # Create a dictionary with the word as key and its count as value\n    word_counts = Counter(words_list)\n    word_counts_json = json.dumps(word_counts, indent=4, sort_keys=True)\n\n    # Create the json file with the word counts\n    with open(file_name, \"w\") as file:\n        file.write(word_counts_json)\n    return file_name", "compilation_passed": true, "time": 0.0013201236724853516, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    random_words = random.sample(WORDS, n)\n    with open(file_name, \"w\") as file:\n        json.dump(random_words, file, indent=4)\n    return file_name", "compilation_passed": true, "time": 0.0011959075927734375, "tests_passed": false, "error": "TypeError"}
{"code": "random.seed(seed)\n    word_counts = Counter(random.sample(WORDS, n))\n    with open(file_name, 'w') as file:\n        json.dump(word_counts, file, indent=2)\n    return file_name", "compilation_passed": true, "time": 0.001194000244140625, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    counter = Counter(random.sample(WORDS, n))\n    with open(file_name, 'w') as f:\n        json.dump(counter, f, indent=4)\n    return file_name", "compilation_passed": true, "time": 0.0011851787567138672, "tests_passed": false, "error": "KeyError"}
{"code": "# seeding random\n    random.seed(seed)\n\n    # generating random word list\n    word_list = random.sample(WORDS, n)\n\n    # open file to write to\n    with open(file_name, \"w\") as out_file:\n        # write contents to file\n        json.dump({\"word_counts\": Counter(word_list)}, out_file, indent=4)\n\n    # return file_name\n    return file_name", "compilation_passed": true, "time": 0.0010230541229248047, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    words_selected = random.sample(WORDS, n)\n    word_counts = dict(Counter(words_selected))\n    with open(file_name, 'w') as f:\n        json.dump(word_counts, f)\n    return file_name", "compilation_passed": true, "time": 0.0012369155883789062, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    random_words = random.sample(WORDS, n)\n    counter = Counter(random_words)\n    with open(file_name, 'w') as file:\n        json.dump(counter, file, indent=2)\n    return file_name", "compilation_passed": true, "time": 0.0012280941009521484, "tests_passed": false, "error": "KeyError"}
{"code": "# Get random words from WORDS\n    words = [random.choice(WORDS) for _ in range(n)]\n    # Use Counter to count the occurrences of each word\n    word_count = Counter(words)\n    # Convert the word_count to json\n    json.dump(word_count, open(file_name, 'w'), sort_keys=True, indent=4)\n    # Return the file name\n    return file_name", "compilation_passed": true, "time": 0.0012111663818359375, "tests_passed": true, "error": null}
{"code": "# Randomly select n words from the WORDS list and count their occurrences\n    random.seed(seed)\n    selected_words = random.sample(WORDS, n)\n    counter = Counter(selected_words)\n\n    # Convert the counter to a dictionary with 'word' as keys and 'count' as values\n    word_counts = {word: counter[word] for word in counter}\n\n    # Convert the word_counts dictionary to json\n    with open(file_name, 'w') as f:\n        json.dump(word_counts, f)\n\n    return file_name", "compilation_passed": true, "time": 0.0012350082397460938, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    words = random.sample(WORDS, n)\n    with open(file_name, 'w') as file:\n        json.dump(Counter(words), file)\n    return file_name", "compilation_passed": true, "time": 0.0011751651763916016, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    words = random.sample(WORDS, n)\n    json_file_name = file_name.replace(\"/\", \"_\").replace(\"\\\\\", \"_\") + \".json\"\n    with open(json_file_name, \"w\") as file:\n        json.dump(words, file)\n    return json_file_name", "compilation_passed": true, "time": 0.0012021064758300781, "tests_passed": false, "error": "TypeError"}
{"code": "random.seed(seed)\n    word_counts = Counter(random.sample(WORDS, n))\n    with open(file_name, 'w') as file:\n        json.dump(word_counts, file, indent=4)\n    return file_name", "compilation_passed": true, "time": 0.0012259483337402344, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    selected_words = random.sample(WORDS, n)\n    json.dump(selected_words, open(file_name, 'w'), indent=4)\n    return file_name", "compilation_passed": true, "time": 0.0011467933654785156, "tests_passed": false, "error": "TypeError"}
{"code": "random.seed(seed)\n    words = random.sample(WORDS, n)\n    counts = Counter(words)\n    with open(file_name, 'w') as outfile:\n        json.dump(counts, outfile)\n    return file_name", "compilation_passed": true, "time": 0.0011441707611083984, "tests_passed": false, "error": "KeyError"}
{"code": "# set a random seed\n    random.seed(seed)\n    # get a list of n randomly selected words from WORDS\n    random_words = random.sample(WORDS, n)\n    # sort the random words\n    random_words.sort()\n    # create a dict with the words as keys and the number of occurrences as values\n    word_counts = Counter(random_words)\n    # convert word_counts to json format and save to a file\n    with open(file_name, 'w') as outfile:\n        json.dump(word_counts, outfile, indent=4, separators=(',', ': '))\n    # return the file name\n    return file_name", "compilation_passed": true, "time": 0.001234292984008789, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    words = random.sample(WORDS, n)\n    with open(file_name, 'w') as f:\n        json.dump(Counter(words), f)\n    return file_name", "compilation_passed": true, "time": 0.001149892807006836, "tests_passed": false, "error": "KeyError"}
{"code": "# Use a random seed to generate the same sequence of words in every run\n    random.seed(seed)\n    # Select n words randomly from WORDS\n    words = random.sample(WORDS, n)\n    # Convert words to a dictionary, counting occurrence for each word\n    word_counts = Counter(words)\n    # Write the word counts to the json file\n    with open(file_name, 'w') as f:\n        json.dump(word_counts, f)\n    # Return the name of the json file\n    return file_name", "compilation_passed": true, "time": 0.0012059211730957031, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    counter = Counter(random.sample(WORDS, n))\n    with open(file_name, 'w') as f:\n        json.dump(counter, f)\n    return file_name", "compilation_passed": true, "time": 0.0011570453643798828, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    counts = Counter(random.sample(WORDS, n))\n    json.dump(counts, open(file_name, \"w\"))\n    return file_name", "compilation_passed": true, "time": 0.0011479854583740234, "tests_passed": false, "error": "KeyError"}
{"code": "# Choose n random words from WORDS\n    words = random.sample(WORDS, n)\n\n    # Use Counter to count the occurrences of each word\n    word_counts = Counter(words)\n\n    # Convert the word counts to a dictionary with JSON formatting\n    word_counts_dict = {word: count for word, count in word_counts.items()}\n\n    # Write the dictionary to a JSON file\n    with open(file_name, 'w') as f:\n        json.dump(word_counts_dict, f, indent=4)\n\n    # Return the name of the generated JSON file\n    return file_name", "compilation_passed": true, "time": 0.0011987686157226562, "tests_passed": false, "error": "KeyError"}
{"code": "# create a Counter object called word_counts to store the count of words\n    random.seed(seed)\n    word_counts = Counter(random.sample(WORDS, n))\n\n    # convert the word_counts Counter object into a JSON string\n    data = json.dumps(word_counts)\n\n    with open(file_name, 'w') as f:\n        f.write(data)\n\n    return file_name", "compilation_passed": true, "time": 0.0011830329895019531, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    counter = Counter(random.sample(WORDS, n))\n\n    with open(file_name, 'w') as f:\n        json.dump(counter, f)\n\n    return file_name", "compilation_passed": true, "time": 0.001142740249633789, "tests_passed": false, "error": "KeyError"}
{"code": "random.seed(seed)\n    selected_words = [random.choice(WORDS) for _ in range(n)]\n    with open(file_name, \"w\") as f:\n        json.dump(Counter(selected_words), f)\n    return file_name", "compilation_passed": true, "time": 0.0011560916900634766, "tests_passed": true, "error": null}
{"code": "random.seed(seed)\n    word_count_list = random.sample(WORDS, n)\n    with open(file_name, 'w') as file:\n        json.dump(word_count_list, file)\n    return file_name", "compilation_passed": true, "time": 0.0012097358703613281, "tests_passed": false, "error": "TypeError"}
{"code": "random.seed(seed)\n    word_list = random.sample(WORDS, n)\n    word_counts = Counter(word_list)\n    with open(file_name, 'w') as f:\n        json.dump(word_counts, f)\n    return file_name", "compilation_passed": true, "time": 0.0011572837829589844, "tests_passed": false, "error": "KeyError"}
