{"code": "words = 0\n    chars = 0\n    unique_chars = set()\n\n    for word in text.split():\n        if word.strip(string.punctuation):\n            words += 1\n            chars += len(word.strip(string.punctuation))\n            unique_chars.update(re.findall(r\"[a-zA-Z']\", word))\n\n    return (words, chars, len(unique_chars))", "compilation_passed": true, "time": 0.0009360313415527344, "tests_passed": true, "error": null}
{"code": "word_count = len(text.split())\n    char_count = len(re.sub('\\s', '', text))\n    unique_char_count = len(set(re.sub('\\s', '', text)))\n    return word_count, char_count, unique_char_count", "compilation_passed": true, "time": 0.0007171630859375, "tests_passed": true, "error": null}
{"code": "# Split the text into words using whitespace as the delimiter\n    words = text.split()\n\n    # Count the number of words\n    word_count = len(words)\n\n    # Create a regular expression to exclude special characters and whitespace\n    exclude = re.compile(r'[^\\w\\s]')\n\n    # Count the number of characters excluding whitespace and special characters\n    char_count = sum(len(w) for w in words) - len(text)\n\n    # Remove whitespace-separated substrings from the text\n    text = text.replace(' ', '')\n\n    # Count the unique characters in the text\n    unique_char_count = len(text.replace(\" \", \"\"))\n\n    return (word_count, char_count, unique_char_count)", "compilation_passed": true, "time": 0.0008420944213867188, "tests_passed": true, "error": null}
{"code": "# split the text into words\n    words = re.findall(r'\\w+', text)\n    # count words\n    count_words = len(words)\n    # count characters\n    count_chars = len(text)\n    for char in string.punctuation:\n        count_chars = count_chars - text.count(char)\n    # count unique characters\n    count_unique_chars = len(set(text.lower()))\n    return count_words, count_chars, count_unique_chars", "compilation_passed": true, "time": 0.0007228851318359375, "tests_passed": true, "error": null}
{"code": "if text is None:\n        return None\n\n    # Count words\n    words = re.split(r\"[\\s\\n\\t]+\", text)\n    num_words = len(words)\n\n    # Count characters\n    characters = len(text)\n    for c in string.punctuation:\n        characters -= text.count(c)\n    for c in string.whitespace:\n        characters -= text.count(c)\n\n    # Count unique characters\n    unique_characters = set(text)\n    for c in string.punctuation:\n        unique_characters.discard(c)\n    for c in string.whitespace:\n        unique_characters.discard(c)\n\n    return num_words, characters, len(unique_characters)", "compilation_passed": true, "time": 0.0008978843688964844, "tests_passed": true, "error": null}
{"code": "words = len(re.findall(r'\\w+', text))\n    characters = len(re.findall(r'[\\w\\s]', text))\n    unique_chars = len(set(text).difference(string.punctuation))\n\n    return words, characters, unique_chars", "compilation_passed": true, "time": 0.0007028579711914062, "tests_passed": true, "error": null}
{"code": "pattern = re.compile(r'\\w+')\n    words = pattern.findall(text)\n    characters = len(re.sub(r'[ \\t\\n]+', '', text))\n    uniq_chars = len(set(characters))\n    return len(words), characters, uniq_chars", "compilation_passed": true, "time": 0.001077890396118164, "tests_passed": false, "error": "TypeError"}
{"code": "# Convert text to lowercase and split it into words\n    words = [word.lower() for word in re.findall(r'\\w+', text)]\n    # Count characters (excluding whitespace and special characters)\n    chars = len(re.sub(r'[^\\w\\s]', '', text))\n    # Count unique characters (excluding whitespace and special characters)\n    unique_chars = len(set(text.replace(\" \", \"\")))\n    # Count words\n    word_count = len(words)\n    return word_count, chars, unique_chars", "compilation_passed": true, "time": 0.0007069110870361328, "tests_passed": true, "error": null}
{"code": "return (re.findall(\"\\w+\", text), len(text) - text.count(\" \"),\n            len(set(text) - set(string.punctuation)))", "compilation_passed": true, "time": 0.0006999969482421875, "tests_passed": true, "error": null}
{"code": "# Split the text into words\n    words = re.findall(r'\\w+', text)\n\n    # Calculate the number of words, characters, and unique characters\n    num_words = len(words)\n    num_chars = sum(len(word) for word in words)\n    unique_chars = len(set(word.lower() for word in words))\n\n    return num_words, num_chars, unique_chars", "compilation_passed": true, "time": 0.0006878376007080078, "tests_passed": true, "error": null}
{"code": "regex = re.compile(r\"\\s*[\\w\\u00C0-\\u00FF\\u10000-\\u10FF\\U00010000-\\U00010FFFD\\U000E0000-\\U000EFFFD\\u2100-\\u2B7F]+\")\n    word_count = len(regex.findall(text))\n    char_count = len(regex.findall(text)[:-1])\n    unique_char_count = len(set(text))\n    return word_count, char_count, unique_char_count", "compilation_passed": true, "time": 0.0009448528289794922, "tests_passed": true, "error": null}
{"code": "regex = re.compile(r\"\\w+\")\n\n    words = regex.findall(text)\n    words_count = len(words)\n\n    characters_count = sum(map(len, regex.findall(text)))\n\n    unique_characters_count = set(text).difference(string.punctuation)\n    unique_characters_count = sum(map(len, unique_characters_count))\n\n    return words_count, characters_count, unique_characters_count", "compilation_passed": true, "time": 0.0007100105285644531, "tests_passed": true, "error": null}
{"code": "words = text.count(\" \")\n    words += len(re.findall(r'\\w+', text))\n    words += len(re.findall(r'[\\w]', text.lower()))\n    chars = len(re.findall(r'\\w+', text)) + len(re.findall(r'\\S', text))\n    return words, chars, len(set(text.lower()))", "compilation_passed": true, "time": 0.0007770061492919922, "tests_passed": true, "error": null}
{"code": "word_count, char_count, unique_char_count = 0, 0, 0\n\n    # Count words in the text using string.split()\n    words = text.split()\n    word_count = len(words)\n\n    # Count characters excluding whitespace and special characters\n    for char in text:\n        if char.isalnum():\n            char_count += 1\n            unique_char_count += 1\n        elif char not in string.whitespace:\n            unique_char_count += 1\n\n    return (word_count, char_count, unique_char_count)", "compilation_passed": true, "time": 0.0007188320159912109, "tests_passed": true, "error": null}
{"code": "words = len(re.split('\\s+', text))\n    chars = len(re.sub('[^a-zA-Z0-9]+', '', text))\n    unique_chars = len(set(text.replace(' ', '')))\n\n    return words, chars, unique_chars", "compilation_passed": true, "time": 0.0007679462432861328, "tests_passed": true, "error": null}
{"code": "regex = re.compile(r\"[^\\s\\w]+\")\n    text_without_punctuation = regex.sub(\" \", text)\n    words = len(text_without_punctuation.split())\n    characters = len(text_without_punctuation)\n    uniq_char = len(set(text_without_punctuation.lower().strip()))\n    return (words, characters, uniq_char)", "compilation_passed": true, "time": 0.0007059574127197266, "tests_passed": true, "error": null}
{"code": "unique_chars = set()\n    words_count = 0\n    chars_count = 0\n    for word in re.split(r'\\s+', text):\n        words_count += 1\n        for char in word:\n            if char not in string.punctuation and char not in string.whitespace:\n                chars_count += 1\n                unique_chars.add(char)\n    return words_count, chars_count, len(unique_chars)", "compilation_passed": true, "time": 0.0007770061492919922, "tests_passed": true, "error": null}
{"code": "# remove any trailing whitespace\n    text = text.strip()\n\n    # remove special characters and punctuation\n    cleaned_text = re.sub(r'[^\\w\\s]', '', text)\n    cleaned_text = cleaned_text.lower()\n\n    # split text into words using whitespace as a delimiter\n    words = cleaned_text.split()\n    word_count = len(words)\n\n    # count number of characters\n    char_count = len(''.join(cleaned_text))\n\n    # count unique characters\n    unique_chars = set(cleaned_text)\n    unique_char_count = len(unique_chars)\n\n    return word_count, char_count, unique_char_count", "compilation_passed": true, "time": 0.000713348388671875, "tests_passed": true, "error": null}
{"code": "text = text.replace(\" \", \"\")\n    words = re.findall(r'\\w+', text)\n    chars = len(text)\n    uniques = len(set(text))\n    return (len(words), chars, uniques)", "compilation_passed": true, "time": 0.0007457733154296875, "tests_passed": true, "error": null}
{"code": "# Your code goes here\n    #\n    words = re.findall('\\S+', text)\n    # print(words)\n    # print(len(text))\n    # print(words, len(words))\n    char_count = len(re.sub(r'[^\\w]', '', text))\n    words_count = len(words)\n    unique_characters = set(re.sub(r'[^\\w]', '', text))\n    return (words_count, char_count, len(unique_characters))", "compilation_passed": true, "time": 0.0007140636444091797, "tests_passed": true, "error": null}
{"code": "if not isinstance(text, str):\n        raise TypeError(f\"Expected type 'str' but received '{type(text)}'\")\n\n    words = re.findall(r'\\w+', text)\n    num_words = len(words)\n    num_chars = len(text)\n    chars_count = len(re.sub(r'[\\w\\d\\s,.:;?!/!\"()\\-]+', '', text))\n    unique_chars = set(text.replace(' ', ''))\n    return num_words, num_chars, chars_count, unique_chars", "compilation_passed": true, "time": 0.0007958412170410156, "tests_passed": true, "error": null}
{"code": "# Check if the input text is valid\n    if not isinstance(text, str):\n        raise ValueError(\"The input text must be a string.\")\n\n    # Split the text into words using whitespace\n    words = re.split(r'\\s+', text)\n    words = [word.strip() for word in words]\n    words = [word for word in words if word]\n\n    # Remove whitespace from the text\n    text = text.replace(' ', '')\n    # Count the number of characters excluding whitespace and special characters (i.e. string.punctuation).\n    chars = sum(1 for char in text if char.isalpha())\n    # Count the number of words\n    words_count = len(words)\n\n    # Count the number of unique characters\n    unique_chars = len(set(char for char in text if char.isalpha()))\n\n    return words_count, chars, unique_chars", "compilation_passed": true, "time": 0.0008769035339355469, "tests_passed": true, "error": null}
{"code": "# Check that text is not empty or contains non-string values\n    if not isinstance(text, str) or len(text) < 1:\n        return 0, 0, 0\n    # Remove whitespace from both sides of the text\n    text = text.strip()\n\n    # Split the text into words using whitespace as a delimiter\n    words = re.findall(r'\\w+', text)\n\n    # Count the number of words\n    n_words = len(words)\n\n    # Remove whitespace and special characters from the text\n    cleaned_text = re.sub('\\s', '', text)\n\n    # Count the number of characters\n    cleaned_text = re.sub(r'[^\\w\\s]', '', cleaned_text)\n    n_chars = len(cleaned_text)\n\n    # Count the number of unique characters\n    chars_set = set(cleaned_text)\n    n_unique = len(chars_set)\n\n    # Return the number of words, characters, and unique characters\n    return n_words, n_chars, n_unique", "compilation_passed": true, "time": 0.0008509159088134766, "tests_passed": true, "error": null}
{"code": "words = len(re.findall(r'\\S+', text))\n    characters = len(re.findall(r'\\w', text))\n    unique_characters = len(set(text))\n    return words, characters, unique_characters", "compilation_passed": true, "time": 0.0006783008575439453, "tests_passed": true, "error": null}
{"code": "# Split the text into words\n    words = re.split('\\W+', text)\n    # Remove whitespace-separated substrings from the input string\n    text = re.sub('\\s+', ' ', text)\n    # Remove trailing/leading whitespace from the string\n    text = text.strip()\n    # Count the number of characters\n    num_char = len(text)\n    # Count the number of words\n    num_words = len(words)\n    # Get the unique characters\n    unique_chars = set(text)\n    return (num_words, num_char, len(unique_chars))", "compilation_passed": true, "time": 0.000759124755859375, "tests_passed": true, "error": null}
{"code": "words = len(text.split())\n    # excluding string.punctuation for the sake of simplicity\n    char_count = len(re.sub(r'\\s|\\W', '', text))\n    unique_chars = len(set(text.translate(str.maketrans('', '', string.punctuation)).split()))\n    return words, char_count, unique_chars", "compilation_passed": true, "time": 0.0007159709930419922, "tests_passed": true, "error": null}
{"code": "# Define regular expressions for words and whitespace\n    word_pattern = r'\\w+'\n    space_pattern = r'\\s+'\n\n    # Split the text into words using the whitespace pattern\n    words = re.findall(word_pattern, text)\n\n    # Calculate the number of characters and unique characters\n    char_count = sum(len(word) for word in words)\n    unique_char_count = len(set(word for word in words))\n\n    # Calculate the number of words\n    word_count = len(words)\n\n    # Return the results as a tuple\n    return (word_count, char_count, unique_char_count)", "compilation_passed": true, "time": 0.0007770061492919922, "tests_passed": true, "error": null}
{"code": "# Step 1: Split the input text into words using whitespace as the delimiter\n    words = re.findall(r\"\\w+\", text)\n    # Step 2: Count the number of words in the text\n    num_words = len(words)\n    # Step 3: Remove any whitespace from the input text\n    text = re.sub(r\"\\s+\", \" \", text)\n    # Step 4: Count the number of non-whitespace characters in the text\n    num_non_whitespace_characters = len(text)\n    # Step 5: Exclude whitespace and special characters from the text\n    text_without_whitespace_and_special_characters = re.sub(r\"[^\\w\\s]\", \"\", text)\n    # Step 6: Remove consecutive whitespace characters from the text\n    text_without_consecutive_whitespace_characters = re.sub(r\"\\s+\", \" \", text_without_whitespace_and_special_characters)\n    # Step 7: Count the", "compilation_passed": true, "time": 0.0006301403045654297, "tests_passed": true, "error": null}
{"code": "text = text.lower()\n    word_count = len(re.findall(r'\\S+', text))\n    char_count = sum(len(word) for word in text.split())\n    unique_char_count = len(set(text.replace(string.punctuation, '')))\n\n    return word_count, char_count, unique_char_count", "compilation_passed": true, "time": 0.0008788108825683594, "tests_passed": true, "error": null}
{"code": "return len(text.split()), sum(len(i) for i in text if i != ' ' and i not in string.punctuation), len({i for i in re.split(r\"\\W+\", text) if i})", "compilation_passed": true, "time": 0.0006918907165527344, "tests_passed": true, "error": null}
