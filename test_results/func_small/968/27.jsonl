{"code": "df = pd.DataFrame(data)\n    cols = df.select_dtypes(include='number')\n    if len(cols) == 0:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    ax = sns.heatmap(cols.cumsum(), cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.1184072494506836, "tests_passed": true, "error": null}
{"code": "numeric_columns = []\n    for column_name, column_values in data.items():\n        try:\n            if pd.Series(column_values).apply(pd.isnull).any():\n                continue\n            else:\n                numeric_columns.append(column_name)\n        except ValueError:\n            pass\n    if len(numeric_columns) == 0:\n        raise ValueError('DataFrame is empty or no numeric columns are present.')\n    if len(numeric_columns) == 1:\n        data_df = pd.DataFrame(data)\n    else:\n        data_df = pd.DataFrame(data)\n        for col in numeric_columns:\n            data_df[col] = data_df[col].cumsum()\n    return sns.heatmap(data_df[numeric_columns], annot=True, cmap='Blues')", "compilation_passed": true, "time": 0.023879051208496094, "tests_passed": false, "error": "ValueError"}
{"code": "numeric_cols = [col for col in data.keys() if pd.api.types.is_numeric_dtype(data[col])]\n    if not numeric_cols:\n        raise ValueError('Dataframe contains no numeric columns.')\n\n    df = pd.DataFrame(data)\n    return sns.heatmap(df[numeric_cols].cumsum(), cmap='coolwarm')", "compilation_passed": true, "time": 0.0012390613555908203, "tests_passed": false, "error": "ValueError"}
{"code": "try:\n        df = pd.DataFrame(data)\n    except:\n        return\n    df_numeric = df[df.apply(pd.to_numeric).all()]  # Convert column to numeric, if possible\n    if len(df_numeric) == 0:\n        return\n    df_numeric = df_numeric.apply(pd.to_numeric, errors='coerce')\n\n    if len(df_numeric.columns) == 0:\n        return\n\n    df_cumulative = df_numeric.cumsum()  # Calculate cumulative sum\n\n    return sns.heatmap(df_cumulative,\n                       cmap='RdYlGn',\n                       annot=False,\n                       linewidths=1)", "compilation_passed": true, "time": 0.001672983169555664, "tests_passed": false, "error": "pandas.errors.IndexingError"}
{"code": "df = pd.DataFrame(data)\n\n    numeric_cols = df.select_dtypes(include=[np.number])\n\n    if not numeric_cols.empty:\n        cols = numeric_cols.columns\n        cum_sum_matrix = df[cols].cumsum().stack()\n        ax = sns.heatmap(cum_sum_matrix,\n                         annot=True,\n                         fmt='g',\n                         cmap='cool',\n                         linewidth=0.5,\n                         cbar_kws={\"shrink\": .7},\n                         square=True,\n                         linewidths=.5,\n                         )\n    else:\n        raise ValueError(\"The DataFrame is empty or there are no numeric columns.\")", "compilation_passed": true, "time": 0.0030438899993896484, "tests_passed": false, "error": "IndexError"}
{"code": "df = pd.DataFrame(data)\n    # Check if the DataFrame is empty\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n\n    # Find numeric columns and their values\n    num_cols = []\n    col_values = []\n    for col in df.columns:\n        try:\n            # Convert column values to floats\n            col_values.append(df[col].astype(float))\n            num_cols.append(col)\n        except ValueError:\n            continue\n\n    # Check if there are no numeric columns\n    if len(num_cols) == 0:\n        raise ValueError(\"No numeric columns present\")\n\n    # Create the Seaborn heatmap\n    heatmap = sns.heatmap(pd.DataFrame(col_values),\n                          cmap='Greys',\n                          mask=pd.isnull(pd.DataFrame(col_values)))\n\n    return heatmap", "compilation_passed": true, "time": 0.0197601318359375, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n\n    if df.empty:\n        raise ValueError(\"Dataframe is empty.\")\n\n    numeric_cols = [col for col in df.columns if df[col].dtype.name in ['int', 'float', 'decimal']]\n    if not numeric_cols:\n        raise ValueError(\"No numeric columns found in DataFrame.\")\n\n    sns.heatmap(df[numeric_cols].cumsum(), cmap=\"YlGnBu\", annot=True, square=True)\n    return ax", "compilation_passed": true, "time": 0.0013577938079833984, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n    if df.empty or not df.select_dtypes(include=['int64','float64']).any():\n        raise ValueError('The data is empty or there are no numeric columns')\n    ax = sns.heatmap(df.cumsum(), cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.0012998580932617188, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n\n    # Check that the DataFrame is not empty\n    if not df.empty:\n\n        # Check that all columns are numeric\n        if df.columns.isnull().any() or df.columns.apply(pd.to_numeric).isna().any():\n            raise ValueError(\"No numeric columns found in the DataFrame.\")\n\n        # Create a copy of the DataFrame with only numeric columns\n        numeric_columns = df.columns[~df.columns.isnull()]\n        numeric_columns = df.columns[df.columns.apply(pd.to_numeric).notna()]\n        df = df[numeric_columns]\n\n        # Create the Seaborn heatmap\n        ax = sns.heatmap(df.cumsum(), cmap='Blues')\n\n        # Return the Axes object\n        return ax\n\n    else:\n        raise ValueError(\"DataFrame is empty.\")", "compilation_passed": true, "time": 0.0011420249938964844, "tests_passed": false, "error": "AttributeError"}
{"code": "# Check if the data is empty\n    if len(data) == 0:\n        raise ValueError(\"The data is empty.\")\n\n    # Extract numeric columns from the dictionary\n    numeric_cols = []\n    for col_name, col_values in data.items():\n        if (pd.api.types.is_numeric_dtype(pd.Series(col_values))):\n            numeric_cols.append(col_name)\n\n    # Create a DataFrame with the numeric columns\n    df = pd.DataFrame(data=data)\n    numeric_cols_df = df[numeric_cols]\n\n    # Create the heatmap\n    ax = sns.heatmap(numeric_cols_df.cumsum(), cmap=\"Blues\", linewidths=0.1, annot=True, fmt=\".1g\")\n\n    return ax", "compilation_passed": true, "time": 0.1214289665222168, "tests_passed": true, "error": null}
{"code": "# Convert the dictionary to a DataFrame\n    df = pd.DataFrame(data)\n\n    # Check if the DataFrame is empty or if no numeric columns are present\n    if df.empty:\n        raise ValueError('Dataframe is empty')\n\n    # Filter out non-numeric columns\n    numeric_cols = df.select_dtypes(include=['int', 'float']).columns\n    df = df[numeric_cols]\n\n    # Create and return the Seaborn heatmap\n    return sns.heatmap(df.cumsum())", "compilation_passed": true, "time": 0.12243103981018066, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame.from_dict(data, orient='columns').fillna(0).select_dtypes(include=[np.number])\n    if df.empty:\n        raise ValueError('Data is empty')\n\n    ax = sns.heatmap(df.cumsum(), cmap='Reds', annot=True, cbar=False)\n    return ax", "compilation_passed": true, "time": 0.05605888366699219, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    if not df.empty:\n        df = df.select_dtypes(include=[int, float])\n        if not df.empty:\n            return sns.heatmap(df.cumsum(), annot=True, fmt='', cmap='Blues')\n\n    raise ValueError(\"DataFrame is empty or contains no numeric columns.\")", "compilation_passed": true, "time": 0.1204838752746582, "tests_passed": true, "error": null}
{"code": "data = pd.DataFrame(data)\n\n    if len(data) == 0:\n        raise ValueError('Data is empty')\n\n    numeric_columns = [column for column in data if data[column].dtypes.name in ('int64', 'float64')]\n\n    if not numeric_columns:\n        raise ValueError('No numeric columns present')\n\n    df = pd.DataFrame({column: data[column] for column in numeric_columns})\n    ax = sns.heatmap(df.cumsum(), cmap='RdYlGn', linewidths=0.5, cbar=True, cbar_kws=dict(ticks=[10**i for i in range(5)]))\n    ax.figure.set_size_inches(8, 8)\n\n    return ax", "compilation_passed": true, "time": 0.09789514541625977, "tests_passed": true, "error": null}
{"code": "columns = list(data.keys())\n\n    if len(columns) == 0:\n        raise ValueError(\"The DataFrame is empty.\")\n\n    for col in columns:\n        try:\n            col_data = pd.Series(data[col])\n        except TypeError:\n            raise TypeError(\"The DataFrame is not numeric.\")\n        if col_data.dtype.kind not in \"biu\":\n            columns.remove(col)\n\n    df = pd.DataFrame.from_dict(data, orient=\"index\")\n    if len(columns) == 0:\n        raise ValueError(\"The DataFrame contains no numeric columns.\")\n\n    fig, ax = plt.subplots(figsize=(15, 15))\n    sns.heatmap(df[columns].cumsum(), cmap=\"RdYlBu_r\", ax=ax)\n    ax.set_xlabel(\"Column\")\n    ax.set_ylabel(\"Column\")\n    return ax", "compilation_passed": true, "time": 0.00618290901184082, "tests_passed": false, "error": "KeyError"}
{"code": "df = pd.DataFrame(data)\n\n    if df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n\n    numeric_columns = df.select_dtypes(include=['int', 'float']).columns\n    if not numeric_columns:\n        raise ValueError(\"No numeric columns found\")\n\n    return sns.heatmap(df[numeric_columns].cumsum())", "compilation_passed": true, "time": 0.0012230873107910156, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n    if not df.empty and df.dtypes[df.dtypes.apply(lambda x: np.issubdtype(x, np.number))].count() > 0:\n        df_heatmap = pd.DataFrame.from_dict(\n            pd.DataFrame.from_dict(data).cumsum(axis=0).cumsum(axis=1), orient='index')\n        return sns.heatmap(df_heatmap, ax=ax, cmap='YlOrBr', cbar=False)\n    else:\n        raise ValueError('Data is empty or no numeric columns present.')", "compilation_passed": true, "time": 0.0015399456024169922, "tests_passed": false, "error": "TypeError"}
{"code": "df = pd.DataFrame(data)\n    if len(df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    numeric_cols = df.select_dtypes(include=[\"number\"]).columns\n    if len(numeric_cols) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = df.cumsum()\n    ax = sns.heatmap(df_cumsum, xticklabels=numeric_cols, yticklabels=list(range(1, len(numeric_cols)+1)), cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.019482851028442383, "tests_passed": false, "error": "ValueError"}
{"code": "df = pd.DataFrame(data)\n    if not df.empty:\n        numeric_columns = df.select_dtypes(include=np.number).columns.tolist()\n        if numeric_columns:\n            return sns.heatmap(df[numeric_columns].cumsum(), cmap='coolwarm', annot=True, fmt='', square=True)\n        else:\n            print(\"No numeric columns found in the DataFrame.\")\n    else:\n        raise ValueError(\"DataFrame is empty.\")", "compilation_passed": true, "time": 0.02140212059020996, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    df_numeric = df[df.dtypes.apply(pd.types.is_numeric)]\n    if len(df_numeric) == 0:\n        raise ValueError(\"No numeric columns present.\")\n\n    ax = sns.heatmap(df_numeric.cumsum())\n\n    return ax", "compilation_passed": true, "time": 0.0012829303741455078, "tests_passed": false, "error": "AttributeError"}
{"code": "df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    numeric_cols = [col for col in df.columns if df[col].dtypes.name in [\"int64\", \"float64\"]]\n    if len(numeric_cols) == 0:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df = df[numeric_cols]\n    sns.heatmap(df.cumsum(), cmap=\"Blues\"), ax.axis(\"off\")\n    return ax", "compilation_passed": true, "time": 0.02019977569580078, "tests_passed": false, "error": "NameError"}
{"code": "df = pd.DataFrame(data)\n    df_num = df.select_dtypes(include=float)\n    if df_num.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    return sns.heatmap(df_num.cumsum())", "compilation_passed": true, "time": 0.0013098716735839844, "tests_passed": false, "error": "ValueError"}
{"code": "try:\n        df = pd.DataFrame(data)\n    except (ValueError, TypeError):\n        raise ValueError(\"Data must be a dictionary or a Series.\")\n    numeric_columns = df.select_dtypes(include=['number']).columns\n    if numeric_columns.empty:\n        raise ValueError(\"No numeric columns found.\")\n    return sns.heatmap(df.select_dtypes(include=['number']), cmap='YlGnBu')", "compilation_passed": true, "time": 0.019190073013305664, "tests_passed": true, "error": null}
{"code": "if len(data.keys()) == 0:\n        raise ValueError(\"No data provided\")\n    try:\n        df = pd.DataFrame(data)\n    except pd.errors.EmptyDataError:\n        raise ValueError(\"No numeric columns present\")\n    for col in df.keys():\n        try:\n            df[col] = df[col].fillna(0)\n        except TypeError:\n            df[col] = df[col].fillna(0)\n    cols = list(filter(lambda x: x not in df.keys(), df.keys()))\n    df = df.drop(cols, axis=1)\n    if len(df.columns) == 0:\n        raise ValueError(\"Empty DataFrame\")\n    sns.heatmap(df.cumsum(), annot=True, fmt='s', linewidths=0)\n    return sns.axes_locator.AxesLocator(sns.heatmap(df.cumsum(), annot=True, fmt='s', linewidths=0))", "compilation_passed": true, "time": 0.020180940628051758, "tests_passed": false, "error": "ValueError"}
{"code": "if not data:\n        raise ValueError(\"Dataframe is empty\")\n\n    try:\n        df = pd.DataFrame(data)\n    except TypeError:\n        raise ValueError(\"Dataframe has non numeric types\")\n\n    numeric_cols = df.select_dtypes(include=['number'])\n    if not numeric_cols.empty:\n        return sns.heatmap(numeric_cols.cumsum(), cmap='RdYlGn_r')\n    else:\n        raise ValueError(\"Dataframe has no numeric columns\")", "compilation_passed": true, "time": 0.11745214462280273, "tests_passed": true, "error": null}
{"code": "df = pd.DataFrame(data)\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    numeric_columns = df.select_dtypes(include=[\"int\", \"float\"]).columns\n    if len(numeric_columns) == 0:\n        raise ValueError(\"No numeric columns found\")\n    heatmap = sns.heatmap(df[numeric_columns].cumsum(), cmap='coolwarm', annot=True, fmt='g')\n    return heatmap", "compilation_passed": true, "time": 0.12106704711914062, "tests_passed": true, "error": null}
{"code": "if len(data) == 0:\n        raise ValueError(\"No numeric columns present in DataFrame.\")\n\n    df = pd.DataFrame(data)\n    df = df.select_dtypes(np.number)\n    if len(df) == 0:\n        raise ValueError(\"No numeric columns present in DataFrame.\")\n\n    ax = sns.heatmap(df.cumsum(), cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.397737979888916, "tests_passed": true, "error": null}
{"code": "# Check if DataFrame is empty\n    if data is None:\n        raise ValueError('Data is None.')\n    elif pd.DataFrame().empty:\n        raise ValueError('Dataframe is empty.')\n    # Create DataFrame from dictionary\n    df = pd.DataFrame(data)\n    # Check if DataFrame is empty\n    if df.empty:\n        raise ValueError('DataFrame is empty.')\n    # Get numeric columns\n    num_cols = df.select_dtypes(include=['number']).columns.values\n    # Check if no numeric columns are present\n    if len(num_cols) == 0:\n        raise ValueError('No numeric columns present.')\n    # Create heatmap\n    return sns.heatmap(df[num_cols].cumsum(), annot=True, cmap='viridis', fmt='.0f')", "compilation_passed": true, "time": 0.0014882087707519531, "tests_passed": false, "error": "ValueError"}
{"code": "if len(data) == 0:\n        raise ValueError(\"Dataframe is empty\")\n\n    df = pd.DataFrame(data)\n    numeric_cols = df.select_dtypes(include=[np.number]).columns\n    if not len(numeric_cols):\n        raise ValueError(\"No numeric columns found\")\n\n    df = df.groupby(numeric_cols).cumsum()[numeric_cols]\n\n    ax = sns.heatmap(df, annot=True, fmt=\"d\", linewidths=0.5, cmap=\"YlGnBu\")\n    return ax", "compilation_passed": true, "time": 0.0014903545379638672, "tests_passed": false, "error": "ValueError"}
{"code": "if len(data) == 0:\n        raise ValueError(\"DataFrame is empty\")\n\n    # Check for numeric columns\n    numeric_cols = []\n    for col in data:\n        if pd.api.types.is_numeric_dtype(data[col]):\n            numeric_cols.append(col)\n\n    if not numeric_cols:\n        raise ValueError(\"No numeric columns found\")\n\n    # Create a DataFrame from the dictionary\n    df = pd.DataFrame(data)\n\n    # Create the Seaborn heatmap with a custom palette\n    ax = sns.heatmap(df[numeric_cols].cumsum().astype(\"int\"), cmap=\"Blues\", linewidth=0.0, yticklabels=False, xticklabels=False, cbar_kws={\"label\": \"Cumulative sum\"}, annot=False)\n\n    # Set the title of the Axes object\n    ax.set_title(f\"Cumulative sum of {list(numeric_cols)}\")\n\n    return ax", "compilation_passed": true, "time": 0.0011510848999023438, "tests_passed": false, "error": "ValueError"}
