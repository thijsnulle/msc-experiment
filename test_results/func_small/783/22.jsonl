{"code": "files_moved = 0\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            src_file = os.path.join(src_dir, filename)\n            dest_file = os.path.join(dest_dir, filename)\n            shutil.move(src_file, dest_file)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004579782485961914, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file in os.listdir(src_dir):\n        if file.endswith(extension):\n            src_path = os.path.join(src_dir, file)\n            dest_path = os.path.join(dest_dir, file)\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.004395961761474609, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            src_file = os.path.join(src_dir, filename)\n            dest_file = os.path.join(dest_dir, filename)\n            shutil.move(src_file, dest_file)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.0048198699951171875, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            file_path = os.path.join(src_dir, file_name)\n            new_file_name = file_name.replace('.txt', '.txt.txt')\n            new_file_path = os.path.join(dest_dir, new_file_name)\n            shutil.move(file_path, new_file_path)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0045299530029296875, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                src_path = os.path.join(root, file)\n                dest_path = os.path.join(dest_dir, file)\n                if not os.path.exists(dest_path):\n                    shutil.move(src_path, dest_path)\n                    files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.005592823028564453, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for file in os.listdir(src_dir):\n        if file.endswith(extension):\n            src_file = os.path.join(src_dir, file)\n            dest_file = os.path.join(dest_dir, file)\n            shutil.move(src_file, dest_file)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.006527900695800781, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        file_path = os.path.join(src_dir, file_name)\n        if os.path.isfile(file_path) and file_name.endswith(extension):\n            dst_file_path = os.path.join(dest_dir, file_name)\n            shutil.move(file_path, dst_file_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.005568981170654297, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for filename in os.listdir(src_dir):\n        if os.path.isfile(os.path.join(src_dir, filename)):\n            extension_check = filename.rsplit('.', 1)[1]\n            if extension_check == extension:\n                shutil.move(os.path.join(src_dir, filename),\n                            os.path.join(dest_dir, filename))\n                files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.0019059181213378906, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                src = os.path.join(root, file)\n                dest = os.path.join(dest_dir, file)\n                shutil.move(src, dest)\n                files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0062160491943359375, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            src = os.path.join(src_dir, filename)\n            dest = os.path.join(dest_dir, filename)\n\n            if os.path.isfile(src):\n                shutil.move(src, dest)\n                files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.006027936935424805, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    src_dir_files = os.listdir(src_dir)\n    for file in src_dir_files:\n        if file.endswith(extension):\n            filepath = os.path.join(src_dir, file)\n            dest_filepath = os.path.join(dest_dir, file)\n            if not os.path.exists(dest_filepath):\n                shutil.move(filepath, dest_filepath)\n                files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00557398796081543, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            file_path = os.path.join(src_dir, file_name)\n            if os.path.isfile(file_path):\n                shutil.move(file_path, dest_dir)\n                files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.005908966064453125, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            src_file_path = os.path.join(src_dir, file_name)\n            dest_file_path = os.path.join(dest_dir, file_name)\n            shutil.move(src_file_path, dest_file_path)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00739288330078125, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_path in os.listdir(src_dir):\n        if file_path.endswith(extension):\n            src_file_path = os.path.join(src_dir, file_path)\n            dest_file_path = os.path.join(dest_dir, file_path)\n            try:\n                shutil.move(src_file_path, dest_file_path)\n                files_moved += 1\n            except:\n                print(f\"Error moving {file_path} to {dest_file_path}\")\n    return files_moved", "compilation_passed": true, "time": 0.00606083869934082, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            full_path = os.path.join(src_dir, filename)\n            dest_path = os.path.join(dest_dir, filename)\n            shutil.move(full_path, dest_path)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004998922348022461, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for filename in os.listdir(src_dir):\n        if filename.endswith(extension):\n            file_path = os.path.join(src_dir, filename)\n            new_file_path = os.path.join(dest_dir, filename)\n            os.rename(file_path, new_file_path)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004971981048583984, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_path in os.listdir(src_dir):\n        if file_path.endswith(extension):\n            file_name = os.path.splitext(file_path)[0]\n            src_file_path = os.path.join(src_dir, file_path)\n            dest_file_path = os.path.join(dest_dir, f'{file_name}.txt')\n            shutil.move(src_file_path, dest_file_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.004934787750244141, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for path, dirs, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                src_path = os.path.join(path, file)\n                dest_path = os.path.join(dest_dir, file)\n                shutil.move(src_path, dest_path)\n                files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004992961883544922, "tests_passed": true, "error": null}
{"code": "# Initialize variables\n    files_moved = 0\n\n    # Iterate over the files in the source directory\n    for root, dirs, filenames in os.walk(src_dir):\n        for filename in filenames:\n            # Check if the file matches the extension\n            if filename.endswith(extension):\n                # Create the destination file path\n                dest_filename = os.path.join(dest_dir, filename)\n\n                # Move the file to the destination directory\n                shutil.move(os.path.join(root, filename), dest_filename)\n\n                # Increment the counter\n                files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.006704092025756836, "tests_passed": true, "error": null}
{"code": "# Initialize the counter of files moved.\n    files_moved = 0\n    for file_path in os.listdir(src_dir):\n        if file_path.endswith(f'.{extension}'):\n            file_name = file_path.replace(f'.{extension}', '')\n            src_path = os.path.join(src_dir, file_path)\n            dest_path = os.path.join(dest_dir, f'{file_name}.{extension}')\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.001825094223022461, "tests_passed": true, "error": null}
{"code": "# Check if the source directory exists\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} not found.\")\n\n    # Check if the destination directory exists\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n\n    # Initialize variables\n    files_moved = 0\n\n    # Loop through files in the source directory\n    for file in os.listdir(src_dir):\n        # Check if the file matches the extension\n        if file.endswith(extension):\n            src_file = os.path.join(src_dir, file)\n            dest_file = os.path.join(dest_dir, file)\n            shutil.move(src_file, dest_file)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.005203962326049805, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                src_path = os.path.join(root, file)\n                dest_path = os.path.join(dest_dir, file)\n                shutil.move(src_path, dest_path)\n                files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.005082845687866211, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for root, dirs, files in os.walk(src_dir):\n        for file_name in files:\n            if file_name.endswith(extension):\n                source_file = os.path.join(root, file_name)\n                destination_file = os.path.join(dest_dir, file_name)\n                os.makedirs(os.path.dirname(destination_file), exist_ok=True)\n                shutil.move(source_file, destination_file)\n                files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.005155801773071289, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    src_files = os.listdir(src_dir)\n    for f in src_files:\n        if f.endswith(extension):\n            src_file = os.path.join(src_dir, f)\n            dst_file = os.path.join(dest_dir, f)\n            shutil.move(src_file, dst_file)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.005018949508666992, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_name in os.listdir(src_dir):\n        if file_name.endswith(extension):\n            src_file = os.path.join(src_dir, file_name)\n            dest_file = os.path.join(dest_dir, file_name)\n            shutil.move(src_file, dest_file)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0047838687896728516, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    if os.path.exists(dest_dir):\n        shutil.rmtree(dest_dir)\n    os.makedirs(dest_dir)\n\n    for root, _, files in os.walk(src_dir):\n        for file in files:\n            if file.endswith(extension):\n                file_path = os.path.join(root, file)\n                shutil.move(file_path, os.path.join(dest_dir, file))\n                files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.008083105087280273, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n\n    for root, dir_names, files in os.walk(src_dir):\n        for file_name in files:\n            if file_name.endswith(extension):\n                file_path = os.path.join(root, file_name)\n                dest_file_path = os.path.join(dest_dir, file_name)\n\n                shutil.move(file_path, dest_file_path)\n                files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.0050258636474609375, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for src_file in os.listdir(src_dir):\n        if src_file.endswith(extension):\n            dest_file = os.path.join(dest_dir, src_file)\n            shutil.move(src_file, dest_file)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0019731521606445312, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files_moved = 0\n\n    for src_file in os.listdir(src_dir):\n        if src_file.endswith(extension):\n            src_file_path = os.path.join(src_dir, src_file)\n            dest_file_path = os.path.join(dest_dir, src_file)\n            shutil.move(src_file_path, dest_file_path)\n            files_moved += 1\n\n    return files_moved", "compilation_passed": true, "time": 0.004895925521850586, "tests_passed": true, "error": null}
{"code": "files_moved = 0\n    for file_path in os.listdir(src_dir):\n        if file_path.endswith(extension):\n            src_path = os.path.join(src_dir, file_path)\n            dest_path = os.path.join(dest_dir, file_path)\n            shutil.move(src_path, dest_path)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0047550201416015625, "tests_passed": true, "error": null}
