{"code": "# TODO: Implement task_func\n    raise NotImplementedError()", "compilation_passed": true, "time": 0.0019402503967285156, "tests_passed": false, "error": "NotImplementedError"}
{"code": "# create a list of files to copy\n    files = []\n    for (dirpath, _, filenames) in os.walk(src_dir):\n        for filename in filenames:\n            if fnmatch.fnmatch(filename, '*.txt') or fnmatch.fnmatch(filename, '*.docx'):\n                files.append(os.path.join(dirpath, filename))\n\n    # copy files\n    for filepath in files:\n        shutil.copy(filepath, dst_dir)\n\n    return dst_dir", "compilation_passed": true, "time": 0.011144876480102539, "tests_passed": true, "error": null}
{"code": "# Create the destination directory if it doesn't exist\n    os.makedirs(dst_dir, exist_ok=True)\n    # Copy all files that match any pattern in ['*.txt', '*.docx']\n    for src_path, dir_names, file_names in os.walk(src_dir):\n        for filename in file_names:\n            src_path = os.path.join(src_path, filename)\n            dst_path = os.path.join(dst_dir, filename)\n            if fnmatch.fnmatch(filename, '*.txt') or fnmatch.fnmatch(filename, '*.docx'):\n                shutil.copy(src_path, dst_path)\n    return dst_dir", "compilation_passed": true, "time": 0.0024309158325195312, "tests_passed": false, "error": "NotADirectoryError"}
{"code": "for item in itertools.chain(os.listdir(src_dir), os.listdir(dst_dir)):\n        src = os.path.join(src_dir, item)\n        dst = os.path.join(dst_dir, item)\n        if os.path.isfile(src):\n            if fnmatch.fnmatch(item, '*.txt') or fnmatch.fnmatch(item, '*.docx'):\n                shutil.copy(src, dst)\n    return dst", "compilation_passed": true, "time": 0.014928102493286133, "tests_passed": true, "error": null}
{"code": "file_list = []\n    file_list = os.listdir(src_dir)\n    file_list = fnmatch.filter(file_list, '*.txt')\n    file_list = fnmatch.filter(file_list, '*.docx')\n\n    file_list_iter = itertools.cycle(file_list)\n\n    dst_dir = os.path.join(dst_dir, os.path.basename(src_dir))\n\n    try:\n        os.makedirs(dst_dir)\n    except OSError:\n        pass\n\n    for item in os.listdir(src_dir):\n        if item in file_list:\n            shutil.copy(os.path.join(src_dir, item), os.path.join(dst_dir, item))\n\n    return dst_dir", "compilation_passed": true, "time": 0.0029060840606689453, "tests_passed": true, "error": null}
{"code": "files = filter(fnmatch.fnmatch, os.listdir(src_dir), ['*.txt', '*.docx'])\n\n    for file in files:\n        shutil.copy(os.path.join(src_dir, file), os.path.join(dst_dir, file))\n\n    return dst_dir", "compilation_passed": true, "time": 0.002290964126586914, "tests_passed": false, "error": "TypeError"}
{"code": "for root, _, files in os.walk(src_dir):\n        for f in fnmatch.filter(files, '*.txt*'):\n            shutil.copy(os.path.join(root, f), os.path.join(dst_dir, f))\n        for f in fnmatch.filter(files, '*.docx*'):\n            shutil.copy(os.path.join(root, f), os.path.join(dst_dir, f))\n    return dst_dir", "compilation_passed": true, "time": 0.01415705680847168, "tests_passed": true, "error": null}
{"code": "for root, dirs, files in os.walk(src_dir):\n        for filename in fnmatch.filter(files, '*.txt'):\n            shutil.copy(os.path.join(root, filename), os.path.join(dst_dir, filename))\n    return dst_dir", "compilation_passed": true, "time": 0.0034637451171875, "tests_passed": true, "error": null}
{"code": "if not os.path.isdir(src_dir):\n        return 'No directory found'\n    elif not os.path.isdir(dst_dir):\n        return 'No directory found'\n\n    for path, dirs, files in os.walk(src_dir):\n        for f in files:\n            if fnmatch.fnmatch(f, '*.txt') or fnmatch.fnmatch(f, '*.docx'):\n                src = os.path.join(path, f)\n                dst = os.path.join(dst_dir, f)\n                shutil.copy(src, dst)\n                print('Successfully copied %s to %s' % (src, dst))\n\n    return dst", "compilation_passed": true, "time": 0.012989044189453125, "tests_passed": true, "error": null}
{"code": "for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if fnmatch.fnmatch(file, '*.txt') or fnmatch.fnmatch(file, '*.docx'):\n                src_path = os.path.join(root, file)\n                dst_path = os.path.join(dst_dir, file)\n                shutil.copy(src_path, dst_path)\n    return dst_dir", "compilation_passed": true, "time": 0.01186990737915039, "tests_passed": true, "error": null}
{"code": "src_dir = os.path.abspath(src_dir)\n    dst_dir = os.path.abspath(dst_dir)\n\n    for root, dirs, files in os.walk(src_dir):\n        for file in files:\n            if fnmatch.fnmatch(file, '*.txt') or fnmatch.fnmatch(file, '*.docx'):\n                src_file = os.path.join(root, file)\n                dst_file = os.path.join(dst_dir, file)\n                shutil.copyfile(src_file, dst_file)\n\n    return dst_dir", "compilation_passed": true, "time": 0.012295246124267578, "tests_passed": true, "error": null}
{"code": "# Define the patterns to match.\n    patterns = ['*.txt', '*.docx']\n\n    # Get all the files that match the patterns in 'src_dir'.\n    src_files = [f for f in os.listdir(src_dir) if any(fnmatch.fnmatch(f, pattern) for pattern in patterns)]\n\n    # Copy the files to 'dst_dir'.\n    for src_file in src_files:\n        shutil.copy(os.path.join(src_dir, src_file), os.path.join(dst_dir, src_file))\n\n    # Return the destination directory.\n    return dst_dir", "compilation_passed": true, "time": 0.010166168212890625, "tests_passed": true, "error": null}
{"code": "print(f\"src_dir: {src_dir}\")\n    print(f\"dst_dir: {dst_dir}\")\n\n    files_to_copy = []\n    for filename in os.listdir(src_dir):\n        if fnmatch.fnmatch(filename, \"*.txt\"):\n            print(f\"Adding {filename} to files_to_copy\")\n            files_to_copy.append(filename)\n\n    for file in files_to_copy:\n        shutil.copy(f\"{src_dir}/{file}\", f\"{dst_dir}/{file}\")", "compilation_passed": true, "time": 0.002537965774536133, "tests_passed": true, "error": null}
{"code": "files = []\n    for root, dirs, filenames in os.walk(src_dir):\n        # ignore dirs\n        dirs[:] = [d for d in dirs if fnmatch.fnmatch(d, '*.txt') or fnmatch.fnmatch(d, '*.docx')]\n        files.extend([os.path.join(root, f) for f in filenames])\n    for f in files:\n        shutil.copy(f, dst_dir)\n    return dst_dir", "compilation_passed": true, "time": 0.003229856491088867, "tests_passed": true, "error": null}
{"code": "for root, dirs, files in os.walk(src_dir):\n        for filename in files:\n            for pattern in ['*.txt', '*.docx']:\n                if fnmatch.fnmatch(filename, pattern):\n                    src_path = os.path.join(root, filename)\n                    dst_path = os.path.join(dst_dir, filename)\n                    shutil.copy(src_path, dst_path)\n    return dst_dir", "compilation_passed": true, "time": 0.010859966278076172, "tests_passed": true, "error": null}
{"code": "for file in os.listdir(src_dir):\n        file_path = os.path.join(src_dir, file)\n        if fnmatch.fnmatch(file, '*.txt') or fnmatch.fnmatch(file, '*.docx'):\n            shutil.copy(file_path, dst_dir)\n    return dst_dir", "compilation_passed": true, "time": 0.01183319091796875, "tests_passed": true, "error": null}
{"code": "# Find all files that match any pattern in ['*.txt', '*.docx'] and copy them\n    for filename in itertools.chain(*map(os.listdir, [src_dir, dst_dir])):\n        if fnmatch.fnmatch(filename, '*.txt') or fnmatch.fnmatch(filename, '*.docx'):\n            shutil.copy(os.path.join(src_dir, filename), os.path.join(dst_dir, filename))\n\n    return dst_dir", "compilation_passed": true, "time": 0.010008096694946289, "tests_passed": true, "error": null}
{"code": "# check that both parameters are strings\n    if not isinstance(src_dir, str) or not isinstance(dst_dir, str):\n        raise TypeError(\"src_dir and dst_dir must be strings\")\n\n    # check that both parameters are valid directories\n    if not os.path.isdir(src_dir) or not os.path.isdir(dst_dir):\n        raise ValueError(\"src_dir and dst_dir must be valid directories\")\n\n    # check that both parameters are on the same filesystem\n    if not os.path.samefile(src_dir, dst_dir):\n        raise ValueError(\"src_dir and dst_dir must be on the same filesystem\")\n\n    # find all files in src_dir that match any pattern in ['*.txt', '*.docx']\n    files_to_copy = []\n    for root, dirnames, filenames in os.walk(src_dir):\n        for filename in fnmatch.filter(filenames, '*.txt*'):\n            files_to_copy.append(os.path.join(", "compilation_passed": false, "time": 0.00020575523376464844, "tests_passed": false, "error": "SyntaxError"}
{"code": "files = [os.path.join(src_dir, f) for f in os.listdir(src_dir)\n            if fnmatch.fnmatch(f, '*.txt') or fnmatch.fnmatch(f, '*.docx')]\n    for file in files:\n        shutil.copy(file, os.path.join(dst_dir, file.split('/')[-1]))\n    return dst_dir", "compilation_passed": true, "time": 0.011157989501953125, "tests_passed": true, "error": null}
{"code": "for root, _dir, files in os.walk(src_dir):\n        for file in fnmatch.filter(files, '*.txt'):\n            shutil.copy(os.path.join(root, file), dst_dir)\n        for file in fnmatch.filter(files, '*.docx'):\n            shutil.copy(os.path.join(root, file), dst_dir)\n\n    return dst_dir", "compilation_passed": true, "time": 0.010918855667114258, "tests_passed": true, "error": null}
{"code": "# Make sure 'src_dir' is a directory and 'dst_dir' exists.\n    if not os.path.isdir(src_dir) or not os.path.exists(dst_dir):\n        return\n\n    for root, dirnames, filenames in os.walk(src_dir):\n        # Ignore 'src_dir' itself to avoid running the function on itself.\n        if root == src_dir:\n            continue\n\n        for filename in fnmatch.filter(filenames, '*.txt'):\n            shutil.copyfile(os.path.join(root, filename), os.path.join(dst_dir, filename))\n\n        for filename in fnmatch.filter(filenames, '*.docx'):\n            shutil.copyfile(os.path.join(root, filename), os.path.join(dst_dir, filename))", "compilation_passed": true, "time": 0.002201080322265625, "tests_passed": true, "error": null}
{"code": "for root, _, files in os.walk(src_dir):\n        for filename in fnmatch.filter(files, '*.txt'):\n            src = os.path.join(root, filename)\n            dst = os.path.join(dst_dir, filename)\n            shutil.copy(src, dst)\n\n    return dst_dir", "compilation_passed": true, "time": 0.0025758743286132812, "tests_passed": true, "error": null}
{"code": "for file_name in os.listdir(src_dir):\n        src_path = os.path.join(src_dir, file_name)\n        dst_path = os.path.join(dst_dir, file_name)\n\n        if fnmatch.fnmatch(file_name, '*.txt') or fnmatch.fnmatch(file_name, '*.docx'):\n            print(f\"Copying {file_name} to {dst_path}\")\n            shutil.copy(src_path, dst_path)\n\n        # print(f\"Copying {file_name} to {dst_path}\")\n        # shutil.copy(src_path, dst_path)\n\n    return dst_dir", "compilation_passed": true, "time": 0.00996088981628418, "tests_passed": true, "error": null}
{"code": "for pattern in ['*.txt', '*.docx']:\n        for file in itertools.chain(os.listdir(src_dir), os.listdir(dst_dir)):\n            if fnmatch.fnmatch(file, pattern):\n                shutil.copy(os.path.join(src_dir, file), dst_dir)\n    return dst_dir", "compilation_passed": true, "time": 0.01051783561706543, "tests_passed": true, "error": null}
{"code": "# Create a list of file paths that match the patterns\n    pattern = ['*.txt', '*.docx']\n    src_paths = [os.path.join(src_dir, path) for path in os.listdir(src_dir)\n                 if any(fnmatch.fnmatch(path, pattern_str) for pattern_str in pattern)]\n\n    # Iterate through the list of file paths and copy each file to the destination directory\n    for src_path in src_paths:\n        dst_path = os.path.join(dst_dir, os.path.basename(src_path))\n        shutil.copy(src_path, dst_path)\n\n    # Return the destination directory as the task result\n    return dst_dir", "compilation_passed": true, "time": 0.011106252670288086, "tests_passed": true, "error": null}
{"code": "src_dir = os.path.abspath(src_dir)\n    dst_dir = os.path.abspath(dst_dir)\n\n    if not os.path.exists(src_dir) or not os.path.isdir(src_dir):\n        print('Source directory does not exist or is not a directory')\n        return dst_dir\n\n    if not os.path.exists(dst_dir) or not os.path.isdir(dst_dir):\n        os.makedirs(dst_dir)\n\n    for dir_path, dir_names, file_names in os.walk(src_dir):\n        for file_name in file_names:\n            file_path = os.path.join(dir_path, file_name)\n            if any(fnmatch.fnmatch(file_path, pattern) for pattern in ['*.txt', '*.docx']):\n                shutil.copy(file_path, os.path.join(dst_dir, os.path.basename(file_path)))\n\n    return dst_dir", "compilation_passed": true, "time": 0.010500669479370117, "tests_passed": true, "error": null}
{"code": "filenames = [\n        os.path.join(src_dir, filename) for filename in os.listdir(src_dir) if fnmatch.fnmatch(filename, '*.txt') or fnmatch.fnmatch(filename, '*.docx')\n    ]\n    for filename in filenames:\n        shutil.copy(filename, dst_dir)\n    return dst_dir", "compilation_passed": true, "time": 0.010111808776855469, "tests_passed": true, "error": null}
{"code": "filenames = []\n\n    # Iterate over files in src_dir\n    for root, _, files in os.walk(src_dir):\n        for filename in fnmatch.filter(files, '*.txt'):\n            filenames.append(os.path.join(root, filename))\n\n    # Iterate over files in dst_dir\n    for root, _, files in os.walk(dst_dir):\n        for filename in fnmatch.filter(files, '*.txt'):\n            os.remove(os.path.join(root, filename))\n\n    # Iterate over filenames and copy them to dst_dir\n    for filename in itertools.chain(filenames, os.listdir(dst_dir)):\n        shutil.copy(os.path.join(src_dir, filename), os.path.join(dst_dir, filename))\n\n    # Return destination directory\n    return dst_dir", "compilation_passed": true, "time": 0.0021219253540039062, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = os.listdir(src_dir)\n    for src in files:\n        src_file = os.path.join(src_dir, src)\n        dst_file = os.path.join(dst_dir, src)\n        if fnmatch.fnmatch(src, '*.txt'):\n            shutil.copy(src_file, dst_file)\n    return dst_dir", "compilation_passed": true, "time": 0.0026209354400634766, "tests_passed": true, "error": null}
{"code": "# Get all files in 'src_dir' matching any pattern in ['*.txt', '*.docx'].\n    txt_files = fnmatch.filter(os.listdir(src_dir), '*.txt')\n    docx_files = fnmatch.filter(os.listdir(src_dir), '*.docx')\n    files = txt_files + docx_files\n\n    # Iterate over all files and copy them to the 'dst_dir'.\n    for file in files:\n        shutil.copy2(os.path.join(src_dir, file), os.path.join(dst_dir, file))\n\n    return dst_dir", "compilation_passed": true, "time": 0.011094093322753906, "tests_passed": true, "error": null}
