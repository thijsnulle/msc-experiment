{"code": "words = re.findall(r'\\w+', text)\n    stop_words = set(stopwords.words('english'))\n    word_counts = Counter(words)\n    word_counts = {word: count for word, count in word_counts.items() if word not in stop_words}\n    return word_counts", "compilation_passed": true, "time": 0.0009121894836425781, "tests_passed": true, "error": null}
{"code": "word_list = [word for word in re.sub(r'[^\\w\\s]', '', text).split() if word not in stopwords.words(\"english\")]\n    word_count = Counter(word_list)\n    return word_count", "compilation_passed": true, "time": 0.0008378028869628906, "tests_passed": true, "error": null}
{"code": "stop_words = set(stopwords.words('english'))\n    pattern = re.compile(r'\\w+', re.U)\n    matches = pattern.findall(text)\n    count_words = Counter(matches)\n\n    return dict(count_words)", "compilation_passed": true, "time": 0.00066375732421875, "tests_passed": true, "error": null}
{"code": "word_counts = Counter(text.split())\n    # Filter out stopwords\n    word_counts = Counter(word_counts)\n\n    return word_counts", "compilation_passed": true, "time": 0.0005366802215576172, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\w+', text)\n    word_counts = Counter(words)\n    return word_counts", "compilation_passed": true, "time": 0.0005848407745361328, "tests_passed": true, "error": null}
{"code": "result = Counter(re.findall(r\"\\w+\", text))\n    result = dict(result)\n    return result", "compilation_passed": true, "time": 0.0005218982696533203, "tests_passed": true, "error": null}
{"code": "words = text.split()\n    counter = Counter()\n    for word in words:\n        counter[word] += 1\n    return dict(counter)", "compilation_passed": true, "time": 0.0005576610565185547, "tests_passed": true, "error": null}
{"code": "text = text.strip()\n\n    words = re.findall(r'\\w+', text)\n    stopwords = set(stopwords.words('english'))\n\n    count = Counter(w.lower() for w in words if w.lower() not in stopwords)\n    return dict(count)", "compilation_passed": true, "time": 0.0005707740783691406, "tests_passed": false, "error": "UnboundLocalError"}
{"code": "word_list = re.findall(r'\\w+', text)\n    word_counts = Counter(word_list)\n    return word_counts", "compilation_passed": true, "time": 0.0006048679351806641, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\w+', text)\n    counter = Counter(words)\n\n    return dict(counter)", "compilation_passed": true, "time": 0.0005331039428710938, "tests_passed": true, "error": null}
{"code": "stop_words = set(stopwords.words('english'))\n    words = re.findall(r'\\w+', text)\n    counter = Counter(words)\n    filtered_counter = {word: counter[word] for word in counter if word not in stop_words}\n    return filtered_counter", "compilation_passed": true, "time": 0.0006768703460693359, "tests_passed": true, "error": null}
{"code": "# Define the non-stop words to be counted\n    words = ['some', 'are', 'text', 'in']\n\n    # Create a Counter object with default stopwords\n    count = Counter(re.findall(r'\\w+', text))\n\n    # Iterate over the non-stop words and update the Counter object\n    for word in words:\n        if word in count:\n            del count[word]\n\n    return count", "compilation_passed": true, "time": 0.0005688667297363281, "tests_passed": true, "error": null}
{"code": "# Define the regex pattern for words\n    word_pattern = re.compile(r'\\w+')\n\n    # Extract all words from the input text\n    words = word_pattern.findall(text)\n\n    # Create a counter for the words\n    counts = Counter(words)\n\n    # Filter out non-stop words and their counts\n    counts = dict(counts.most_common())\n    for key in list(counts.keys()):\n        if key not in stopwords.words('english'):\n            del counts[key]\n\n    return counts", "compilation_passed": true, "time": 0.0009160041809082031, "tests_passed": true, "error": null}
{"code": "stop_words = set(stopwords.words(\"english\"))\n    regex = re.compile('[^a-z0-9]', re.IGNORECASE)\n    words = regex.split(text)\n\n    words_counts = Counter()\n    for word in words:\n        word = word.strip()\n        if word not in stop_words and word != \"\":\n            words_counts[word] += 1\n\n    return words_counts", "compilation_passed": true, "time": 0.0007719993591308594, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\w+', text.lower())\n    count = Counter(words)\n\n    return count", "compilation_passed": true, "time": 0.0005431175231933594, "tests_passed": true, "error": null}
{"code": "words = re.findall(r\"\\w+\", text)\n    return Counter(words) - Counter(stopwords.words('english'))", "compilation_passed": true, "time": 0.0006148815155029297, "tests_passed": true, "error": null}
{"code": "# Remove punctuation and non-word characters, and convert to lowercase\n    clean_text = re.sub('[!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~]+', ' ', text.lower()).strip()\n\n    # Split the text into words, and count their occurrences\n    words = Counter(clean_text.split())\n\n    # Remove the stopwords and count the remaining words\n    stop_words = stopwords.words('english')\n    filtered_words = [word for word in words if word not in stop_words]\n    word_counts = Counter(filtered_words)\n\n    return word_counts", "compilation_passed": true, "time": 0.0013279914855957031, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\w+', text)\n    word_counts = Counter(words)\n    return dict(word_counts)", "compilation_passed": true, "time": 0.0005590915679931641, "tests_passed": true, "error": null}
{"code": "word_counts = Counter(re.findall(r'\\w+', text.lower()))\n    return word_counts", "compilation_passed": true, "time": 0.0005259513854980469, "tests_passed": true, "error": null}
{"code": "words = re.findall(r'\\w+', text)\n    return Counter(words)", "compilation_passed": true, "time": 0.000518798828125, "tests_passed": true, "error": null}
{"code": "stop_words = set(stopwords.words('english'))\n    words = re.findall(r'\\w+', text)\n    word_counts = Counter(words)\n    non_stop_counts = {}\n\n    for word, count in word_counts.items():\n        if word not in stop_words:\n            non_stop_counts[word] = count\n\n    return non_stop_counts", "compilation_passed": true, "time": 0.0007560253143310547, "tests_passed": true, "error": null}
{"code": "# remove stop words\n    stop_words = set(stopwords.words(\"english\"))\n    text = \" \".join([word for word in text.lower().split() if word not in stop_words])\n    # split the text into words\n    words = re.findall(r'\\w+', text)\n    # count the number of non-stop words\n    count = Counter(words)\n    return count", "compilation_passed": true, "time": 0.0007848739624023438, "tests_passed": true, "error": null}
{"code": "pattern = re.compile(r'\\w+')\n    word_list = re.findall(pattern, text)\n\n    stopwords_list = stopwords.words('russian')\n\n    # filter stopwords and get word counts\n    word_counts = Counter(list(filter(lambda word: word not in stopwords_list, word_list)))\n    return word_counts", "compilation_passed": true, "time": 0.0010418891906738281, "tests_passed": true, "error": null}
{"code": "text = text.lower()\n    words = re.split(\" |\\n|\\r\\n\", text)\n    word_counts = Counter(words)\n    word_counts.subtract(stopwords.words('english'))\n    return word_counts", "compilation_passed": true, "time": 0.0014519691467285156, "tests_passed": true, "error": null}
{"code": "# Split the text into a list of words\n    words = re.findall(r'\\w+', text.lower())\n    # Remove all stop words and convert to lowercase\n    words = [word for word in words if word not in stopwords.words(\"english\")]\n    # Count the occurrences of each word\n    counts = Counter(words)\n    # Return a dictionary of words and their counts\n    return counts", "compilation_passed": true, "time": 0.0014510154724121094, "tests_passed": true, "error": null}
{"code": "# Define regular expression patterns for word extraction\n    patterns = [\n        r\"\\b\\w{1,}\\b\",  # Words with at least one letter\n        r\"\\S+\"  # Non-whitespace characters\n    ]\n\n    # Create a list of compiled regular expressions for each pattern\n    regexes = [re.compile(p) for p in patterns]\n\n    # Create a list of lists to store words in\n    word_list = [[] for _ in regexes]\n\n    # Iterate over each word in the text\n    for match in regexes:\n        for word in match.findall(text):\n            word_list[regexes.index(match)].append(word)\n\n    # Use Counter to count the words\n    counter = Counter()\n    for words in word_list:\n        counter.update(words)\n\n    # Remove stop words from the dictionary\n    stops = stopwords.words('english')\n    filtered_counter = Counter()\n    for word, count in counter.items():\n        if word not in stops:\n            filtered_counter[word] = count", "compilation_passed": true, "time": 0.0008077621459960938, "tests_passed": true, "error": null}
{"code": "word_counter = Counter()\n    # Split the text into a list of words\n    words = re.findall(r'\\w+', text)\n    # Remove stopwords\n    words = [w for w in words if w not in stopwords.words()]\n    # Count the non-stop words\n    word_counter.update(words)\n    return word_counter", "compilation_passed": true, "time": 0.013651847839355469, "tests_passed": true, "error": null}
{"code": "# Convert text to lowercase and strip leading/trailing whitespace\n    text = text.lower().strip()\n\n    # Split the text into words\n    words = re.findall(r'\\w+', text)\n\n    # Remove stop words using the `stopwords` corpus\n    stop_words = set(stopwords.words('english'))\n    words = [word for word in words if word not in stop_words]\n\n    # Count the occurrences of each word\n    word_counts = Counter(words)\n\n    return word_counts", "compilation_passed": true, "time": 0.000881195068359375, "tests_passed": true, "error": null}
{"code": "word_counts = Counter(re.findall(r'\\b\\w+\\b', text))\n    word_counts.subtract(stopwords.words(\"english\"))\n    return dict(word_counts)", "compilation_passed": true, "time": 0.0015108585357666016, "tests_passed": true, "error": null}
