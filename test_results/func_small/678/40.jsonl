{"code": "files = sorted(os.listdir(path))\n    dfs = []\n    for file in files:\n        try:\n            df = pd.read_json(os.path.join(path, file), lines=True)\n            df['Source'] = file\n            dfs.append(df)\n        except:\n            continue\n    if len(dfs) > 0:\n        df = pd.concat(dfs, axis=0)\n    else:\n        df = pd.DataFrame(columns=['Source'])\n    os.makedirs('processed', exist_ok=True)\n    df.to_json(os.path.join('processed', 'result.json'), orient='records', indent=4, default=str)\n    shutil.rmtree(path)\n    return df", "compilation_passed": true, "time": 0.002599954605102539, "tests_passed": false, "error": "TypeError"}
{"code": "def process_json(json_path):\n        with open(json_path, 'r') as f:\n            data = json.load(f)\n            df = pd.DataFrame(data)\n            df['Source'] = json_path\n            return df\n\n    os.makedirs(path, exist_ok=True)\n    files = os.listdir(path)\n    files.sort()\n    df_list = []\n    for file in files:\n        if os.path.isfile(os.path.join(path, file)) and file.endswith('.json'):\n            df = process_json(os.path.join(path, file))\n            df_list.append(df)\n\n    df = pd.concat(df_list)\n    print(df)\n    os.makedirs(os.path.join(path, 'processed'), exist_ok=True)\n    processed_files = [os.path.join(path, 'processed', file) for file in files]\n    for file in processed_files:\n        os.remove(file)\n    sh", "compilation_passed": true, "time": 0.0019397735595703125, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "files = []\n    for filename in os.listdir(path):\n        if filename.endswith('.json'):\n            files.append(os.path.join(path, filename))\n\n    df = pd.DataFrame()\n\n    for f in files:\n        with open(f, 'r') as file:\n            df2 = pd.DataFrame(json.load(file), columns=['a', 'b'])\n            df2['source'] = os.path.basename(f)\n        df = df.append(df2, ignore_index=True)\n\n    df.to_parquet(path + '/processed/output.parquet', compression='snappy')\n\n    return df", "compilation_passed": true, "time": 0.0014889240264892578, "tests_passed": false, "error": "AttributeError"}
{"code": "# Get the list of files in the directory\n    files = [f for f in os.listdir(path) if f.endswith('.json')]\n\n    # Read the JSON files into a list of dicts\n    files_json = [json.load(open(os.path.join(path, f), 'r')) for f in files]\n\n    # Convert the list of dicts to a pandas DataFrame\n    df = pd.DataFrame(files_json)\n\n    # Add the \"Source\" column with filenames\n    df['source'] = [f[:-5] for f in files]\n\n    # Move files to the \"processed\" subdirectory\n    shutil.move(path, os.path.join(path, 'processed'))\n\n    # Return the DataFrame\n    return df", "compilation_passed": true, "time": 0.0015370845794677734, "tests_passed": false, "error": "shutil.Error"}
{"code": "files = os.listdir(path)\n    df_list = []\n    for file in sorted(files):\n        if file.endswith('.json'):\n            with open(path + '/' + file) as f:\n                data = json.load(f)\n            df = pd.DataFrame.from_dict(data)\n            df['source'] = file\n            df_list.append(df)\n    df = pd.concat(df_list)\n    return df", "compilation_passed": true, "time": 0.001947164535522461, "tests_passed": false, "error": "ValueError"}
{"code": "path = os.path.abspath(path)\n\n    if not os.path.exists(path):\n        os.makedirs(path)\n\n    files = os.listdir(path)\n    files.sort()\n\n    df = []\n\n    for file in files:\n        with open(path + os.sep + file, 'r') as f:\n            data = json.load(f)\n        df.append({'a': data[0]['a'],\n                   'b': data[0]['b'],\n                   'source': file})\n\n    df = pd.DataFrame(df)\n\n    path = path + os.sep + 'processed'\n\n    if not os.path.exists(path):\n        os.mkdir(path)\n\n    for file in files:\n        if file.endswith('.json'):\n            source = file\n        else:\n            source = 'processed'\n\n        shutil.move(path + os.sep + file, path + os.sep + source)\n\n    return df", "compilation_passed": true, "time": 0.0018188953399658203, "tests_passed": false, "error": "FileNotFoundError"}
{"code": "# Create a processed directory if it doesn't exist\n    if not os.path.exists('processed'):\n        os.mkdir('processed')\n\n    # Read files from the directory\n    files = [os.path.join(path, f) for f in os.listdir(path)]\n    files.sort()\n    df = pd.DataFrame()\n\n    for file in files:\n        # Read each file\n        with open(file) as f:\n            df_file = pd.read_json(f)\n            df_file['Source'] = os.path.basename(file)\n            # Add \"Source\" column\n\n            # Add \"Source\" column\n            df_file['Source'] = os.path.basename(file)\n            df = pd.concat([df, df_file])\n\n    # Move processed files to processed directory\n    processed_files = [\n        os.path.join(path, os.path.splitext(f)[0]) for f in files\n    ]\n    for pfile in processed_files:\n        if not os.path.exists(pfile):\n", "compilation_passed": false, "time": 0.00022602081298828125, "tests_passed": false, "error": "IndentationError"}
{"code": "if not os.path.isdir(path):\n        print(f'\"{path}\" does not exist.')\n        return None\n\n    files = os.listdir(path)\n    if not files:\n        print(f'\"{path}\" is empty.')\n        return None\n\n    files.sort()\n    for filename in files:\n        if not filename.endswith('.json'):\n            print(f'Skipping \"{filename}\".')\n            continue\n\n        with open(os.path.join(path, filename), 'r') as f:\n            try:\n                data = json.load(f)\n            except:\n                print(f'Could not load JSON data from \"{filename}\".')\n                continue\n\n            df = pd.DataFrame(data)\n            df['source'] = filename\n\n            df.to_json(os.path.join(path, 'processed', filename), orient='records')\n\n    return df", "compilation_passed": true, "time": 0.0018050670623779297, "tests_passed": true, "error": null}
{"code": "# Initialize a DataFrame to store the data\n    df = pd.DataFrame()\n\n    # Iterate over the files in alphabetical order\n    for filename in sorted(os.listdir(path)):\n        # Skip non-JSON files\n        if not filename.endswith('.json'):\n            continue\n\n        # Read the JSON file\n        with open(os.path.join(path, filename), 'r') as f:\n            data = json.load(f)\n\n        # Add a new column to store the source file name\n        df[filename] = [json.dumps(row) for row in data]\n\n    # Move the processed files to a \"processed\" subdirectory\n    processed_path = os.path.join(path, 'processed')\n    os.makedirs(processed_path, exist_ok=True)\n    for filename, data in df.iteritems():\n        # Write the data to a JSON file in the processed directory\n        with open(os.path.join(processed_path, filename), 'w') as f:\n            json.dump(data, f, indent=", "compilation_passed": false, "time": 0.00022602081298828125, "tests_passed": false, "error": "SyntaxError"}
{"code": "print(\"Running task function\")\n    os.makedirs('processed', exist_ok=True)\n    files = sorted(os.listdir(path))\n\n    # Parse each JSON file using pandas.json_normalize()\n    df_list = [\n        pd.DataFrame(\n            pd.read_json(os.path.join(path, file), orient=\"records\",\n                         lines=True),\n            columns=[col.lower() for col in df.columns]\n        )\n        for file in files\n    ]\n    df = pd.concat(df_list, axis=0)\n    df['source'] = df.index.astype(str).str.join('.')\n    df = df.reset_index(drop=True)\n    df.to_json(\"processed/concat.json\", orient=\"records\",\n               lines=True, ensure_ascii=False)\n    return df", "compilation_passed": true, "time": 0.0016508102416992188, "tests_passed": false, "error": "NameError"}
{"code": "# Read the files from the directory\n    files = [f for f in os.listdir(path) if f.endswith('.json')]\n    dfs = []\n    for file in sorted(files):\n        with open(os.path.join(path, file), 'r') as f:\n            dfs.append(pd.DataFrame.from_records(json.load(f)))\n    df = pd.concat(dfs, ignore_index=True).astype('int64')\n    df['source'] = files\n\n    # Move the files to a \"processed\" subdirectory\n    os.makedirs(os.path.join(path, 'processed'), exist_ok=True)\n    for file in files:\n        shutil.move(os.path.join(path, file), os.path.join(path, 'processed', file))\n\n    # Return the DataFrame of data\n    return df", "compilation_passed": true, "time": 0.0016360282897949219, "tests_passed": false, "error": "ValueError"}
{"code": "path = Path(path)\n    if path.is_file():\n        filename = path.name\n        with open(path, 'r') as f:\n            data = json.load(f)\n    else:\n        os.mkdir(path)\n        with open(path.joinpath(\"a.json\"), \"w\") as f:\n            f.write('[{\"a\": 1, \"b\": 2}, {\"a\": 3, \"b\": 4}]')\n        with open(path.joinpath(\"b.json\"), \"w\") as f:\n            f.write('[{\"a\": 5, \"b\": 6}, {\"a\": 7, \"b\": 8}]')\n        filename = path.name\n        data = json.load(open(path.joinpath(path.name, \"a.json\")))\n    df = pd.DataFrame(data).rename(columns={\"a\": \"a_\", \"b\": \"b_\"})\n    df[\"Source\"] = filename\n    return df", "compilation_passed": true, "time": 0.0011332035064697266, "tests_passed": false, "error": "NameError"}
{"code": "files = os.listdir(path)\n    files.sort()\n    files = [os.path.join(path, file) for file in files if file.endswith('.json')]\n    df_list = [json.load(open(file, 'r')) for file in files]\n    df_list = [pd.DataFrame(df, columns=['a', 'b']).assign(Source=file) for file, df in zip(files, df_list)]\n    df = pd.concat(df_list)\n    return df", "compilation_passed": true, "time": 0.0018489360809326172, "tests_passed": false, "error": "FileExistsError"}
{"code": "os.makedirs(path, exist_ok=True)\n    df = []\n    for filename in sorted(os.listdir(path)):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename), 'r') as f:\n                data = json.load(f)\n                df.append([json.loads(row[\"a\"]) for row in data])\n    return pd.DataFrame(df)", "compilation_passed": true, "time": 0.0012569427490234375, "tests_passed": false, "error": "TypeError"}
{"code": "files = sorted(os.listdir(path))\n    df = pd.DataFrame()\n\n    for f in files:\n        if f.endswith('.json'):\n            with open(os.path.join(path, f), 'r') as fp:\n                data = json.load(fp)\n                df = df.append(pd.DataFrame(data, index=[0]), ignore_index=True)\n\n    df['Source'] = files\n\n    processed_path = os.path.join(path, 'processed')\n    os.makedirs(processed_path, exist_ok=True)\n\n    df.to_csv(os.path.join(processed_path, 'result.csv'), index=False)\n    shutil.rmtree(path)\n\n    return df", "compilation_passed": true, "time": 0.001325845718383789, "tests_passed": false, "error": "AttributeError"}
{"code": "df = pd.DataFrame()\n    files = sorted([os.path.join(path, f)\n                    for f in os.listdir(path) if f.endswith('.json')])\n    for f in files:\n        with open(f, 'r') as read_file:\n            data = json.load(read_file)\n        df = df.append(pd.DataFrame(data).set_index(0).rename_axis('Source'), ignore_index=True)\n    df['source'] = df['source'].apply(lambda s: os.path.basename(s))\n    os.makedirs('processed', exist_ok=True)\n    processed_files = [os.path.join(path, f) for f in os.listdir(path)\n                       if f.endswith('.json') and f not in os.listdir('processed')]\n    for f in processed_files:\n        shutil.move(f, os.path.join('processed', os.path.basename(f)))\n    return df", "compilation_passed": true, "time": 0.0013899803161621094, "tests_passed": false, "error": "AttributeError"}
{"code": "# Create a directory if it doesn't exist\n    os.makedirs(path, exist_ok=True)\n    # Create a DataFrame from the JSON files in the directory\n    df = pd.DataFrame()\n    for filename in os.listdir(path):\n        if not filename.endswith('.json'):\n            continue\n        with open(os.path.join(path, filename), 'r') as f:\n            df = df.append(pd.DataFrame(json.load(f)))\n        df['source'] = filename\n    # Move the processed files to a \"processed\" subdirectory\n    processed_path = os.path.join(path, 'processed')\n    os.makedirs(processed_path, exist_ok=True)\n    for filename in df['source'].unique():\n        filename = filename.strip('.json')\n        shutil.move(os.path.join(path, filename), processed_path)", "compilation_passed": true, "time": 0.0013041496276855469, "tests_passed": false, "error": "AttributeError"}
{"code": "if not os.path.isdir(path):\n        os.mkdir(path)\n\n    filenames = sorted(os.listdir(path))\n\n    df = None\n    for filename in filenames:\n        with open(os.path.join(path, filename), 'r') as f:\n            data = json.load(f)\n            if df is None:\n                df = pd.DataFrame(data)\n            else:\n                df = df.append(pd.DataFrame(data), ignore_index=True)\n\n    df.insert(0, 'source', df.pop('source'))\n    df.to_csv(os.path.join(path, 'processed'), sep='\\t', index=False)\n    return df", "compilation_passed": true, "time": 0.0013339519500732422, "tests_passed": false, "error": "AttributeError"}
{"code": "df = pd.DataFrame()\n    for filename in os.listdir(path):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename), 'r') as f:\n                data = json.load(f)\n                df = df.append(pd.DataFrame([[x['a'], x['b'], filename] for x in data]),\n                               ignore_index=True)\n    df['Source'] = df.filename\n    df.to_csv('processed.csv')\n    os.rename('processed.csv', 'data/processed.csv')\n    df = pd.read_csv(os.path.join(path, 'processed.csv'))\n    return df", "compilation_passed": true, "time": 0.0012519359588623047, "tests_passed": false, "error": "AttributeError"}
{"code": "# Create a dictionary to store the files and their filenames\n    files = {}\n\n    # Iterate over files in the directory\n    for file in os.listdir(path):\n        if file.endswith('.json'):\n            try:\n                with open(path + '/' + file) as f:\n                    # Read the JSON data from the file\n                    data = json.load(f)\n                    # Convert each item in the list into a dictionary\n                    for item in data:\n                        item = dict(item)\n                        # Add the filename to the dictionary\n                        item['source'] = file\n                    files[file] = data\n            except Exception as e:\n                # Handle any exceptions encountered during processing\n                print(f\"Error reading file {file}: {e}\")\n        else:\n            print(f\"Skipping file {file} - not a .json file.\")\n\n    # Convert the dictionary to a DataFrame\n    df = pd.DataFrame(files[key] for key in files.keys())\n    return df", "compilation_passed": true, "time": 0.0013461112976074219, "tests_passed": true, "error": null}
{"code": "source = []\n    df = []\n    for file in os.listdir(path):\n        if file.endswith('.json'):\n            with open(path + os.sep + file) as f:\n                json_data = json.load(f)\n            df.append(pd.DataFrame.from_dict(json_data, orient='columns'))\n            source.append(file)\n    df = pd.concat(df, axis=0)\n    df['source'] = source\n    df.reset_index(drop=True, inplace=True)\n    shutil.move(path, path + os.sep + \"processed\")\n    return df", "compilation_passed": true, "time": 0.0015261173248291016, "tests_passed": false, "error": "ValueError"}
{"code": "if not os.path.exists(path):\n        os.makedirs(path)\n    file_list = [f for f in os.listdir(path) if f.endswith(\".json\")]\n    df = pd.concat([pd.read_json(os.path.join(path, f)).assign(Source=f) for f in file_list], axis=0)\n    os.makedirs(os.path.join(path, \"processed\"))\n    for f in file_list:\n        shutil.move(os.path.join(path, f), os.path.join(path, \"processed\", f))\n    return df", "compilation_passed": true, "time": 0.0029082298278808594, "tests_passed": false, "error": "FileExistsError"}
{"code": "json_files = [f for f in os.listdir(path) if f.endswith('.json')]\n    df = pd.DataFrame()\n    for fname in json_files:\n        with open(os.path.join(path, fname), 'r') as f:\n            data = json.load(f)\n            df = df.append([pd.DataFrame([json_data]) for json_data in data], ignore_index=True)\n        df['source'] = fname\n    os.makedirs(os.path.join(path, 'processed'), exist_ok=True)\n    os.rename(os.path.join(path, json_files[0]), os.path.join(path, 'processed', json_files[0]))\n    for fname in json_files[1:]:\n        os.rename(os.path.join(path, fname), os.path.join(path, 'processed', fname))\n    return df", "compilation_passed": true, "time": 0.001508951187133789, "tests_passed": false, "error": "AttributeError"}
{"code": "files = os.listdir(path)\n    files.sort()\n    df_list = []\n    for filename in files:\n        with open(os.path.join(path, filename), 'r') as f:\n            data = json.load(f)\n            df = pd.DataFrame.from_dict(data, orient=\"index\")\n            df[\"Source\"] = filename\n        df_list.append(df)\n    df = pd.concat(df_list)\n    return df", "compilation_passed": true, "time": 0.0011441707611083984, "tests_passed": false, "error": "AttributeError"}
{"code": "if not os.path.isdir(path):\n        return None\n\n    df = pd.DataFrame()\n\n    for filename in sorted(os.listdir(path)):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename)) as f:\n                data = json.load(f)\n                df = df.append(pd.DataFrame(data), ignore_index=True)\n                df['source'] = filename\n\n    df.reset_index(inplace=True)\n\n    df.drop(['source'], axis=1, inplace=True)\n\n    processed_dir = os.path.join(path, 'processed')\n    if not os.path.exists(processed_dir):\n        os.mkdir(processed_dir)\n\n    df.to_json(os.path.join(processed_dir, 'json.json'), orient='records', indent=2, date_format='s')\n    return df", "compilation_passed": true, "time": 0.001378774642944336, "tests_passed": false, "error": "AttributeError"}
{"code": "# Check if path exists\n    if not os.path.isdir(path):\n        raise FileNotFoundError('Path does not exist or is not a directory.')\n\n    # Define the source file names\n    source_files = [os.path.join(path, f) for f in os.listdir(path) if f.endswith('.json')]\n\n    # Process each source file\n    dataframes = [pd.read_json(f) for f in source_files]\n\n    # Insert the file names into the DataFrame as the 'Source' column\n    dataframes = [df.assign(source=f) for df, f in zip(dataframes, source_files)]\n\n    # Move the processed files to the processed directory\n    processed_path = os.path.join(path, 'processed')\n    if not os.path.exists(processed_path):\n        os.mkdir(processed_path)\n\n    for df, f in zip(dataframes, source_files):\n        # Move the processed files to the processed directory\n        processed_file = os.path.join(processed_path,", "compilation_passed": false, "time": 0.00021982192993164062, "tests_passed": false, "error": "SyntaxError"}
{"code": "import os\n    import json\n\n    def parse_file(filename):\n        try:\n            return json.load(open(filename))\n        except:\n            print(f\"Failed to parse {filename}\")\n        return None\n\n    df = None\n\n    for filename in sorted(os.listdir(path)):\n        if filename.endswith(\".json\"):\n            df_ = parse_file(os.path.join(path, filename))\n            if df_ is None:\n                continue\n            if df is None:\n                df = pd.DataFrame(df_)\n            else:\n                df = pd.concat([df, pd.DataFrame(df_)], axis=0)\n            df.loc[:, 'Source'] = filename\n\n    if df is None:\n        print(\"No JSON files found in directory\")\n        return df\n\n    processed_path = os.path.join(path, \"processed\")\n    os.mkdir(processed_path)\n    shutil.move(os.path.join(path, df['Source'].iloc[0]), processed_", "compilation_passed": false, "time": 0.0002770423889160156, "tests_passed": false, "error": "SyntaxError"}
{"code": "files = sorted(os.listdir(path))\n    for f in files:\n        if f.endswith('.json'):\n            with open(os.path.join(path, f), 'r') as read_file:\n                data = json.load(read_file)\n                df = pd.DataFrame.from_records(data, columns=data[0].keys()).reset_index(drop=True)\n                df.loc[:, 'Source'] = f\n    os.makedirs('processed', exist_ok=True)\n    for f in files:\n        if f.endswith('.json'):\n            shutil.move(os.path.join(path, f), os.path.join('processed', f))\n    return df", "compilation_passed": true, "time": 0.0017390251159667969, "tests_passed": true, "error": null}
{"code": "filenames = []\n    for filename in sorted(os.listdir(path)):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename), 'r') as f:\n                json_data = json.load(f)\n                filenames.append(filename)\n    df = pd.DataFrame(json_data)\n    df['source'] = filenames\n    shutil.move(path, os.path.join(path, 'processed'))\n    return df", "compilation_passed": true, "time": 0.0015659332275390625, "tests_passed": false, "error": "shutil.Error"}
{"code": "df = pd.DataFrame()\n    for filename in os.listdir(path):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename), 'r') as f:\n                data = json.load(f)\n            df = df.append(pd.DataFrame(data, index=None).assign(Source=filename))\n\n    # Move processed files to processed directory\n    processed_path = os.path.join(path, \"processed\")\n    if not os.path.exists(processed_path):\n        os.mkdir(processed_path)\n\n    for filename in df[\"Source\"].values:\n        shutil.move(os.path.join(path, filename), os.path.join(processed_path, filename))\n\n    return df", "compilation_passed": true, "time": 0.0013849735260009766, "tests_passed": false, "error": "AttributeError"}
