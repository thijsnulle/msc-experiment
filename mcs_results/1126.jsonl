{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0007207393646240234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006577968597412109, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006577968597412109, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006251335144042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005960464477539062, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005791187286376953, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005791187286376953, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005068778991699219, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005791187286376953, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006251335144042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0004982948303222656, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005719661712646484, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005719661712646484, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0004868507385253906, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006880760192871094, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0007207393646240234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005970001220703125, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0004918575286865234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006251335144042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006577968597412109, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005719661712646484, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005068778991699219, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005731582641601562, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005731582641601562, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006577968597412109, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005960464477539062, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005109310150146484, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0004982948303222656, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005731582641601562, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006251335144042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005791187286376953, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005970001220703125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005030632019042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006880760192871094, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005109310150146484, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005791187286376953, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005030632019042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006251335144042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006577968597412109, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006251335144042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005791187286376953, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005960464477539062, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006880760192871094, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006577968597412109, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018491744995117188, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005970001220703125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005068778991699219, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006251335144042969, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006880760192871094, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]+', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0019948482513427734, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0004918575286865234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005791187286376953, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0006039142608642578, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-z0-9]', '', input_str.lower())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004873991012573242, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005960464477539062, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005068778991699219, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str).strip()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016198158264160156, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049898624420166016, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0048580169677734375, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005791187286376953, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005130767822265625, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w\\s]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.003962039947509766, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018341541290283203, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.005714893341064453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str).lower()\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004225015640258789, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^\\w\\s]\", \"\", input_str).replace(\" \", \"\")\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0049321651458740234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [22, 23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005109310150146484, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0023040771484375, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(char for char in input_str if char.isalnum())\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [23, 22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[\\W_]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0005970001220703125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = ''.join(re.findall(r'[^\\W\\d_]', input_str))\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004167795181274414, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r\"[^a-zA-Z0-9]+\", \"\", input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0018379688262939453, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.001605987548828125, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^\\w]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [22], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub(r'[^a-zA-Z0-9]', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode()).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0015881061553955078, "tests_passed": true, "error": null}}
{"selected_lines": [23], "result": {"code": "import re\nimport hashlib\n\ndef task_func(input_str):\n    \"\"\"\n    Removes all special characters, punctuation marks, and spaces from the input string using a regular expression,\n    retaining only alphanumeric characters. Then hashes the cleaned string with SHA256.\n\n    Parameters:\n    input_str (str): The input string to be cleaned and hashed.\n\n    Returns:\n    str: The SHA256 hash of the cleaned string.\n\n    Requirements:\n    - re\n    - hashlib\n\n    Example:\n    >>> task_func('Special $#! characters   spaces 888323')\n    'af30263c4d44d67917a4f0727191a4149e1ab615b772b2aeda859068178b146c'\n    \"\"\"\n    cleaned_str = re.sub('[^A-Za-z0-9]+', '', input_str)\n    hashed_str = hashlib.sha256(cleaned_str.encode('utf-8')).hexdigest()\n    return hashed_str", "compilation_passed": true, "time": 0.0014119148254394531, "tests_passed": true, "error": null}}
