{"selected_lines": [43, 42, 40, 35, 37, 33, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09172177314758301, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 41, 30, 42, 34, 35, 31, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.15429306030273438, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 40, 42, 32, 39, 35, 36, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.383120059967041, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 42, 41, 34, 36, 33, 39, 37, 40, 30, 31, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06783604621887207, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 37, 33, 38, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.34775400161743164, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.16886210441589355, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 36, 37, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5577740669250488, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38, 39, 35, 40, 37, 41, 33, 30, 42, 43, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array)\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 30, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0657958984375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 31, 32, 41, 42, 36, 40, 34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07925224304199219, "tests_passed": true, "error": null}}
{"selected_lines": [33, 43, 35, 36, 38, 30, 41, 34, 39, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.11034488677978516, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06788206100463867, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 31, 35, 36, 40, 39, 38, 34, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07109689712524414, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 42, 43, 40, 30, 41, 32, 37, 31, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 33, 39, 35, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06643104553222656, "tests_passed": true, "error": null}}
{"selected_lines": [32, 42, 30, 37, 38, 39, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3953120708465576, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3473658561706543, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 41, 42, 35, 32, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.43878912925720215, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 39, 34, 37, 33, 30, 43, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins=20, density=True)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06654787063598633, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 32, 31, 41, 34, 38, 30, 35, 40, 37, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.33748698234558105, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 30, 35, 32, 40, 37, 34, 39, 36, 41, 42, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08127379417419434, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4091472625732422, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21080899238586426, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 38, 35, 37, 31, 43, 41, 42, 40, 39, 32, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, density=True)\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 38, 31, 42, 30, 40, 32, 34, 36, 43, 39, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06476211547851562, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21920204162597656, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20165419578552246, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2029712200164795, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 36, 37, 30, 34, 31, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 43, 38, 37, 34, 30, 32, 42, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 30, 37, 31, 34, 40, 42, 33, 32, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, density=True)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0641930103302002, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 33, 31, 36, 41, 40, 38, 30, 43, 39, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.32492685317993164, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 30, 33, 39, 36, 40, 41, 43, 35, 34, 38, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 41, 32, 33, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.39839792251586914, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21920204162597656, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 42, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.414503812789917, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 34, 41, 38, 39, 33, 40, 35, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins=20)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06577205657958984, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 43, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06728601455688477, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 42, 31, 33, 40, 36, 37, 30, 38, 32, 39, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 33, 32, 41, 38, 30, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 43, 34, 38, 42, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42343616485595703, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 39, 37, 40, 36, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0671842098236084, "tests_passed": true, "error": null}}
{"selected_lines": [31, 41, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39258289337158203, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 38, 31, 34, 33, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.40335607528686523, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.34870195388793945, "tests_passed": true, "error": null}}
{"selected_lines": [31, 43, 38, 39, 32, 36, 30, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06644988059997559, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 36, 38, 33, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.374605655670166, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 31, 34, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3352787494659424, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 35, 34, 41, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39699888229370117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 42, 39, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06661581993103027, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3284449577331543, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20907187461853027, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 33, 43, 35, 30, 39, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3839740753173828, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21454691886901855, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.04824113845825195, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2166130542755127, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3639998435974121, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 43, 33, 37, 39, 30, 42, 35, 40, 31, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06434893608093262, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 34, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07990789413452148, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32, 31, 37, 43, 36, 40, 33, 41, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins=15, color='blue')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.11289215087890625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 34, 35, 39, 32, 33, 38, 43, 30, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06912779808044434, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 31, 40, 30, 39, 42, 33, 38, 36, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.32371997833251953, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 30, 34, 39, 40, 38, 43, 35, 32, 31, 37, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 38, 37, 35, 36, 42, 34, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08950090408325195, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 37, 41, 31, 39, 35, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06776928901672363, "tests_passed": true, "error": null}}
{"selected_lines": [30, 40, 38, 39, 34, 31, 43, 33, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07228636741638184, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 41, 40, 31, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 34, 32, 41, 43, 33, 42, 36, 39, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.11982488632202148, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 30, 41, 42, 38, 31, 35, 39, 32, 36, 40, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06666684150695801, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 39, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3461482524871826, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 30, 32, 38, 43, 35, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09774994850158691, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 34, 42, 38, 32, 43, 40, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06661701202392578, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 37, 42, 33, 41, 40, 34, 35, 36, 43, 32, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06473493576049805, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 34, 43, 41, 32, 36, 42, 35, 40, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0943601131439209, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 35, 36, 41, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.11574387550354004, "tests_passed": true, "error": null}}
{"selected_lines": [31, 42, 39, 38, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.357177734375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 42, 33, 34, 43, 32, 36, 31, 41, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07230806350708008, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32, 42, 37, 33, 38, 30, 43, 36, 39, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06472921371459961, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 37, 36, 41, 35, 31, 39, 43, 42, 40, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins=30)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 43, 39, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3975539207458496, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 42, 38, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06711912155151367, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 32, 43, 42, 41, 38, 39, 34, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 30, 42, 38, 39, 34, 32, 35, 31, 37, 43, 33, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 34, 35, 36, 31, 32, 37, 40, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins=30)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06790900230407715, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 41, 40, 35, 31, 37, 33, 34, 36, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08854508399963379, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 32, 31, 35, 37, 33, 38, 34, 40, 36, 39, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.10065698623657227, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 34, 32, 38, 43, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3191239833831787, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 40, 41, 38, 33, 43, 30, 35, 32, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.11670494079589844, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 31, 40, 30, 32, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0669260025024414, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 40, 41, 30, 42, 37, 31, 32, 33, 34, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3372070789337158, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 39, 31, 30, 33, 43, 40, 32, 36, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0974740982055664, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 33, 39, 36, 41, 42, 43, 32, 40, 35, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.09443998336791992, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 33, 31, 37, 30, 39, 43, 38, 42, 36, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 32, 35, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06646990776062012, "tests_passed": true, "error": null}}
{"selected_lines": [43, 32, 42, 33, 34, 38, 37, 41, 39, 31, 30, 35, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0714261531829834, "tests_passed": true, "error": null}}
{"selected_lines": [41, 30, 43, 37, 33, 32, 36, 38, 40, 39, 31, 35, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 30, 39, 33, 37, 31, 36, 32, 35, 41, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.37649011611938477, "tests_passed": true, "error": null}}
{"selected_lines": [43, 34, 42, 37, 33, 39, 40, 36, 41, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 38, 34, 42, 39, 31, 40, 36, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins=50)\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07129979133605957, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39, 33, 43, 30, 36, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06811690330505371, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 43, 36, 34, 41, 32, 37, 31, 38, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07188200950622559, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 30, 33, 38, 37, 31, 41, 34, 43, 42, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20785999298095703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 36, 39, 31, 40, 41, 30, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39076733589172363, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 35, 42, 38, 43, 31, 40, 34, 30, 39, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 36, 30, 31, 33, 35, 32, 37, 42, 34, 38, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins=15, color='blue')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 37, 31, 38, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08747601509094238, "tests_passed": true, "error": null}}
{"selected_lines": [42, 31, 39, 34, 41, 43, 33, 37, 35, 32, 30, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 37, 31, 42, 43, 41, 30, 33, 39, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5543382167816162, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 35, 30, 37, 31, 36, 40, 38, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06704592704772949, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 34, 42, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.414503812789917, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 31, 43, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.45539021492004395, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21729612350463867, "tests_passed": true, "error": null}}
{"selected_lines": [30, 40, 33, 43, 36, 35, 31, 41, 32, 39, 42, 34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0657038688659668, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2166130542755127, "tests_passed": true, "error": null}}
{"selected_lines": [43, 39, 33, 41, 30, 32, 35, 38, 34, 37, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3797647953033447, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 35, 39, 36, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06784272193908691, "tests_passed": true, "error": null}}
{"selected_lines": [43, 30, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.13608694076538086, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21920204162597656, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 43, 32, 31, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06692814826965332, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 31, 36, 34, 41, 43, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.33429503440856934, "tests_passed": true, "error": null}}
{"selected_lines": [41, 31, 43, 39, 37, 42, 34, 30, 40, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 40, 35, 38, 43, 36, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 39, 42, 38, 35, 30, 43, 32, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06717491149902344, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 40, 42, 36, 32, 43, 39, 31, 34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.40067386627197266, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 40, 36, 31, 37, 34, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06594681739807129, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 39, 37, 43, 31, 38, 41, 33, 35, 40, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06687593460083008, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 40, 41, 36, 37, 30, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.5060908794403076, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 32, 31, 35, 37, 41, 40, 42, 36, 38, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0736992359161377, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 38, 39, 34, 36, 31, 33, 37, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06557822227478027, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 43, 31, 41, 40, 34, 32, 39, 30, 36, 42, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 42, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.43499016761779785, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 31, 34, 30, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3258230686187744, "tests_passed": true, "error": null}}
{"selected_lines": [42, 33, 40, 41, 37, 39, 32, 35, 38, 30, 31, 34, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 43, 42, 30, 39, 36, 40, 32, 37, 33, 34, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06550002098083496, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 35, 32, 36, 33, 43, 37, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 43, 41, 32, 40, 35, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.11584806442260742, "tests_passed": true, "error": null}}
{"selected_lines": [42, 32, 38, 30, 35, 40, 33, 43, 36, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 43, 41, 40, 30, 32, 34, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0650780200958252, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 30, 43, 37, 35, 33, 41, 38, 31, 39, 42, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.17827105522155762, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 39, 41, 36, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06883978843688965, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2131509780883789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 43, 42, 34, 39, 37, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4017951488494873, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.011256933212280273, "tests_passed": false, "error": "    https"}}
{"selected_lines": [34, 33, 43, 41, 39, 37, 35, 38, 36, 40, 32, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 41, 32, 31, 35, 40, 33, 34, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06525278091430664, "tests_passed": true, "error": null}}
{"selected_lines": [43, 30, 33, 41, 31, 32, 38, 39, 36, 34, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.45062994956970215, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3161001205444336, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 38, 37, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42268896102905273, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 43, 33, 36, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.33609604835510254, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 43, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 31, 39, 33, 43, 36, 37, 34, 41, 40, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.527508020401001, "tests_passed": true, "error": null}}
{"selected_lines": [43, 30, 34, 35, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.35044121742248535, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2755091190338135, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 41, 34, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0721731185913086, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 36, 35, 31, 32, 43, 39, 30, 40, 33, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09193897247314453, "tests_passed": true, "error": null}}
{"selected_lines": [33, 42, 36, 34, 38, 31, 39, 35, 43, 32, 40, 37, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06524014472961426, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 33, 43, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06715202331542969, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 41, 40, 35, 33, 32, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.12218618392944336, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 35, 33, 38, 30, 34, 43, 40, 41, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0654449462890625, "tests_passed": true, "error": null}}
{"selected_lines": [43, 30, 42, 31, 40, 39, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.361407995223999, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 33, 36, 34, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5676510334014893, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 43, 38, 36, 42, 39, 37, 32, 33, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 30, 36, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 32, 30, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3548128604888916, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21080899238586426, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 38, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0683908462524414, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 37, 31, 43, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 31, 41, 35, 34, 40, 36, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3962900638580322, "tests_passed": true, "error": null}}
{"selected_lines": [30, 39, 36, 38, 35, 41, 40, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06737995147705078, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 38, 36, 37, 34, 43, 42, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06525802612304688, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20304012298583984, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 34, 35, 38, 37, 43, 33, 41, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 40, 30, 32, 43, 41, 36, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 38, 39, 36, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06859493255615234, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 30, 37, 42, 41, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 32, 43, 31, 42, 36, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3618478775024414, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20453715324401855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.17770695686340332, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.6460568904876709, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35, 31, 42, 32, 36, 38, 43, 40, 33, 37, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 36, 41, 30, 33, 39, 32, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 30, 43, 34, 31, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [43, 39, 35, 31, 36, 34, 38, 37, 33, 41, 42, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 35, 34, 43, 38, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06723713874816895, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 36, 30, 42, 37, 43, 35, 33, 34, 41, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21036791801452637, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 39, 43, 32, 42, 37, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 43, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4313228130340576, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 30, 35, 42, 40, 33, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=30)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06892108917236328, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 34, 42, 37, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3227202892303467, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 41, 34, 42, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.41013622283935547, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 36, 35, 34, 30, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06592297554016113, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [38, 43, 33, 40, 36, 34, 41, 35, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0650169849395752, "tests_passed": true, "error": null}}
{"selected_lines": [34, 43, 30, 38, 40, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 40, 35, 36, 43, 41, 31, 33, 34, 38, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 42, 33, 40, 30, 32, 31, 37, 43, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 31, 43, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 43, 34, 32, 33, 31, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42513179779052734, "tests_passed": true, "error": null}}
{"selected_lines": [32, 42, 30, 34, 38, 31, 41, 40, 39, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.32404017448425293, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 43, 39, 41, 33, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.33654212951660156, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 35, 42, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.14475584030151367, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 32, 36, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3491249084472656, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06821608543395996, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 36, 38, 42, 31, 35, 32, 34, 30, 39, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08306407928466797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 38, 37, 36, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.37623071670532227, "tests_passed": true, "error": null}}
{"selected_lines": [38, 43, 34, 39, 31, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06613492965698242, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 41, 43, 30, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 42, 41, 43, 33, 40, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09455275535583496, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 43, 37, 42, 35, 34, 33, 36, 38, 39, 31, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.19764399528503418, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 42, 39, 34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 31, 36, 40, 32, 33, 35, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06869792938232422, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 35, 30, 32, 37, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06903290748596191, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20304012298583984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06939697265625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 40, 30, 41, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39159202575683594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 43, 39, 42, 40, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.05061197280883789, "tests_passed": true, "error": null}}
{"selected_lines": [35, 42, 30, 34, 39, 31, 41, 40, 33, 37, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10197710990905762, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 41, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3376593589782715, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 30, 39, 33, 31, 42, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4177122116088867, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 43, 35, 40, 38, 33, 34, 41, 39, 36, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 33, 42, 39, 36, 43, 37, 34, 30, 31, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 33, 43, 34, 42, 37, 40, 30, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 30, 38, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.33713579177856445, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 41, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42780303955078125, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 34, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 40, 32, 37, 36, 43, 31, 42, 34, 41, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 38, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.331834077835083, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20227718353271484, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4257369041442871, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 36, 34, 43, 41, 38, 33, 35, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.09721994400024414, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 42, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 32, 41, 30, 33, 42, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39687013626098633, "tests_passed": true, "error": null}}
{"selected_lines": [41, 31, 33, 38, 36, 37, 34, 35, 40, 32, 43, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 37, 43, 36, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06803178787231445, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 41, 32, 36, 37, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 30, 35, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07182097434997559, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 32, 30, 40, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 41, 31, 35, 32, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06975984573364258, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 40, 41, 30, 42, 36, 32, 43, 39, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.09517693519592285, "tests_passed": true, "error": null}}
{"selected_lines": [32, 43, 41, 39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3600897789001465, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 32, 37, 39, 30, 34, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09648895263671875, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 39, 31, 37, 30, 43, 32, 40, 35, 41, 36, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 43, 30, 35, 32, 37, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 34, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.37754082679748535, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 43, 40, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3512308597564697, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 36, 43, 41, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 33, 37, 31, 43, 40, 39, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20785999298095703, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.046079158782958984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06818723678588867, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.04854583740234375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [30, 43, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.12082695960998535, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 30, 43, 40, 35, 33, 42, 41, 31, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 33, 39, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06830620765686035, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 34, 38, 41, 42, 31, 36, 33, 32, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5033636093139648, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2755091190338135, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 35, 31, 39, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07055211067199707, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 39, 33, 40, 34, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.41782188415527344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 37, 42, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.33883118629455566, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.16886210441589355, "tests_passed": true, "error": null}}
{"selected_lines": [30, 40, 42, 32, 31, 37, 43, 36, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06819319725036621, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 40, 33, 41, 37, 31, 39, 35, 34, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0659782886505127, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21364521980285645, "tests_passed": true, "error": null}}
{"selected_lines": [30, 42, 41, 31, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4086010456085205, "tests_passed": true, "error": null}}
{"selected_lines": [31, 42, 36, 39, 38, 33, 40, 35, 41, 30, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 34, 30, 36, 35, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0673830509185791, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 35, 37, 30, 40, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09620928764343262, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2154560089111328, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21098113059997559, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 41, 31, 40, 38, 43, 34, 30, 35, 37, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06887292861938477, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 31, 40, 37, 43, 42, 36, 41, 35, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3939640522003174, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 37, 43, 40, 39, 30, 42, 32, 34, 33, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 34, 42, 30, 37, 38, 31, 35, 32, 41, 40, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 41, 39, 40, 37, 34, 32, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3368558883666992, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 38, 36, 37, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3842029571533203, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 39, 33, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.12110686302185059, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 42, 41, 37, 31, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.33675503730773926, "tests_passed": true, "error": null}}
{"selected_lines": [30, 41, 36, 34, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06732988357543945, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 43, 42, 36, 33, 38, 32, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 35, 40, 36, 38, 32, 34, 41, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2065119743347168, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 43, 38, 31, 39, 32, 42, 40, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.38837313652038574, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 42, 41, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 30, 33, 39, 34, 37, 32, 42, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axvline(mean, ls='--')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09258818626403809, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 34, 33, 43, 32, 41, 39, 38, 35, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06763505935668945, "tests_passed": true, "error": null}}
{"selected_lines": [43, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 39, 34, 38, 42, 33, 37, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3505120277404785, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 42, 39, 31, 36, 38, 37, 41, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3901102542877197, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 31, 30, 41, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3624391555786133, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 39, 33, 35, 42, 32, 30, 36, 41, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07033181190490723, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2535400390625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 40, 31, 41, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4111020565032959, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 30, 31, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09949207305908203, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 35, 41, 42, 36, 43, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '--')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06792211532592773, "tests_passed": true, "error": null}}
{"selected_lines": [39, 41, 42, 32, 40, 33, 34, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3672139644622803, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 41, 30, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09475398063659668, "tests_passed": true, "error": null}}
{"selected_lines": [40, 30, 36, 42, 33, 38, 31, 43, 39, 34, 32, 41, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06793689727783203, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2013869285583496, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 39, 35, 36, 34, 31, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.46662092208862305, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 35, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0722799301147461, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06833004951477051, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 40, 39, 43, 35, 42, 34, 41, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5610268115997314, "tests_passed": true, "error": null}}
{"selected_lines": [43, 39, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 39, 41, 40, 43, 31, 42, 30, 36, 35, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.11070108413696289, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2013869285583496, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 32, 33, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.39839792251586914, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 43, 39, 38, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3315110206604004, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 35, 39, 34, 38, 31, 41, 40, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 31, 36, 34, 42, 41, 32, 37, 43, 30, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0740511417388916, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0699760913848877, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 38, 43, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.37924623489379883, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 32, 42, 37, 31, 33, 40, 38, 30, 35, 39, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 30, 34, 32, 33, 43, 35, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.08852314949035645, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 42, 32, 31, 30, 43, 35, 40, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06884598731994629, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3526608943939209, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 32, 34, 42, 43, 35, 38, 31, 33, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 36, 33, 39, 38, 35, 42, 31, 41, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09720969200134277, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20165419578552246, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32, 40, 33, 35, 37, 36, 38, 31, 43, 41, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 43, 34, 37, 30, 42, 38, 41, 36, 39, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06942200660705566, "tests_passed": true, "error": null}}
{"selected_lines": [39, 43, 36, 33, 35, 37, 41, 34, 40, 42, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06889605522155762, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3847620487213135, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 32, 42, 35, 39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 7.112814903259277, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.19764399528503418, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 39, 36, 33, 35, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07003188133239746, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 34, 35, 31, 33, 43, 39, 38, 32, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06914186477661133, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 34, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3719019889831543, "tests_passed": true, "error": null}}
{"selected_lines": [42, 43, 37, 30, 33, 32, 39, 35, 34, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.14504289627075195, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 39, 33, 35, 34, 37, 42, 36, 32, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, density=True)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0676419734954834, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 31, 41, 34, 42, 38, 30, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.5250890254974365, "tests_passed": true, "error": null}}
{"selected_lines": [42, 39, 34, 40, 30, 43, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 34, 38, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06853675842285156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [31, 41, 34, 30, 38, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3833308219909668, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20165419578552246, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 33, 32, 31, 34, 37, 36, 30, 39, 38, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09444093704223633, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.18413209915161133, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4257369041442871, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.05231785774230957, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 37, 42, 39, 33, 43, 38, 40, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.35297417640686035, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 39, 43, 37, 40, 41, 33, 36, 35, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3823387622833252, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 31, 42, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 38, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3883640766143799, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07597112655639648, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 38, 43, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.37924623489379883, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 41, 40, 30, 33, 31, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4232356548309326, "tests_passed": true, "error": null}}
{"selected_lines": [31, 42, 38, 40, 35, 33, 36, 39, 43, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins='auto')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07551383972167969, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08341383934020996, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09968090057373047, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.05307888984680176, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 40, 35, 41, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07047724723815918, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 30, 37, 38, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.41655921936035156, "tests_passed": true, "error": null}}
{"selected_lines": [42, 39, 32, 40, 41, 31, 30, 35, 37, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07216906547546387, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 31, 41, 32, 43, 36, 30, 35, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06902670860290527, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 42, 37, 31, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 30, 43, 39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3502061367034912, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2217419147491455, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 37, 30, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06784486770629883, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21080899238586426, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38, 39, 43, 37, 34, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42466092109680176, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2755091190338135, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 42, 32, 34, 36, 40, 37, 33, 30, 43, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.11224198341369629, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 35, 36, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4872760772705078, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 31, 37, 30, 42, 33, 32, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 40, 37, 34, 30, 35, 33, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, density=True)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09924793243408203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08502602577209473, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20029282569885254, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2036137580871582, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 33, 30, 43, 35, 32, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 41, 35, 42, 38, 34, 43, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.12389302253723145, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 39, 41, 43, 34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.41152000427246094, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 42, 33, 37, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07111191749572754, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 30, 38, 31, 34, 40, 41, 43, 42, 37, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 43, 32, 38, 39, 30, 41, 37, 33, 36, 42, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09697484970092773, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 43, 32, 35, 40, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 34, 39, 36, 43, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 32, 36, 34, 42, 40, 31, 35, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 34, 42, 36, 30, 31, 37, 38, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 33, 39, 36, 30, 31, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42607736587524414, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 41, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.04824113845825195, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31, 40, 36, 30, 42, 41, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.33199310302734375, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 42, 39, 38, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4253220558166504, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 33, 36, 31, 37, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.35692906379699707, "tests_passed": true, "error": null}}
{"selected_lines": [39, 41, 42, 35, 43, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07077574729919434, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 33, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4002969264984131, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 32, 37, 31, 38, 33, 39, 36, 43, 30, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 34, 41, 30, 42, 40, 39, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.08363127708435059, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 31, 40, 30, 35, 41, 39, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 43, 32, 38, 40, 37, 36, 33, 41, 34, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07477307319641113, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 41, 32, 43, 38, 42, 34, 39, 36, 31, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=15, color='blue')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3651740550994873, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.23419594764709473, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 40, 43, 35, 33, 37, 30, 32, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0707540512084961, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 37, 33, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42253804206848145, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 42, 37, 40, 41, 31, 43, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3659350872039795, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 39, 43, 30, 38, 32, 33, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06860113143920898, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 37, 31, 32, 42, 34, 39, 38, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 39, 41, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3989748954772949, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 39, 30, 33, 32, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.34520697593688965, "tests_passed": true, "error": null}}
{"selected_lines": [43, 30, 39, 34, 31, 37, 35, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20165419578552246, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 35, 38, 43, 41, 42, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.09089088439941406, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 34, 39, 37, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08424186706542969, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 37, 42, 38, 43, 35, 30, 34, 39, 40, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.1577746868133545, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2136061191558838, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 37, 36, 34, 33, 39, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3333878517150879, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 37, 34, 30, 41, 43, 40, 38, 32, 35, 31, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 38, 37, 39, 33, 40, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3718221187591553, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 33, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4285850524902344, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 38, 32, 34, 33, 37, 42, 30, 43, 41, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 39, 32, 42, 40, 30, 41, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09054780006408691, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.34845995903015137, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 39, 35, 41, 31, 43, 42, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 42, 41, 30, 35, 37, 33, 43, 39, 34, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40, 33, 32, 38, 42, 41, 37, 34, 39, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=100)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1415553092956543, "tests_passed": true, "error": null}}
{"selected_lines": [42, 30, 36, 43, 40, 37, 34, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3378720283508301, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3161001205444336, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2166130542755127, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 41, 37, 36, 32, 31, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.37497711181640625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 43, 38, 36, 39, 31, 42, 37, 32, 33, 41, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4029099941253662, "tests_passed": true, "error": null}}
{"selected_lines": [38, 43, 37, 32, 36, 33, 34, 35, 41, 31, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 32, 31, 35, 39, 30, 38, 33, 40, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 36, 37, 40, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0711061954498291, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 41, 36, 42, 30, 34, 32, 33, 43, 31, 39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 36, 35, 43, 41, 38, 33, 32, 39, 34, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07259416580200195, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 41, 32, 31, 37, 39, 30, 43, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.06985235214233398, "tests_passed": true, "error": null}}
{"selected_lines": [32, 43, 30, 36, 31, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 37, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4352149963378906, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 42, 36, 37, 32, 43, 33, 40, 31, 41, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array)\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06872916221618652, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 42, 30, 31, 39, 38, 36, 34, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 34, 35, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08427119255065918, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2755091190338135, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 41, 38, 33, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3486318588256836, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2029712200164795, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 40, 42, 38, 35, 43, 39, 32, 30, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 41, 43, 31, 36, 32, 34, 42, 33, 37, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.49167895317077637, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 38, 35, 31, 37, 43, 33, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0704960823059082, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [43, 31, 39, 30, 41, 35, 32, 36, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 31, 39, 30, 34, 35, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09572196006774902, "tests_passed": true, "error": null}}
{"selected_lines": [32, 43, 30, 31, 36, 35, 39, 33, 40, 38, 34, 42, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=50)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07556605339050293, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06955313682556152, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 38, 34, 31, 40, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0700232982635498, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 34, 35, 43, 33, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0688779354095459, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 37, 30, 32, 34, 38, 40, 43, 31, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.39401984214782715, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 42, 33, 32, 37, 38, 43, 36, 31, 40, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 38, 31, 42, 37, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06792616844177246, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 43, 42, 32, 34, 40, 41, 35, 30, 31, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 30, 36, 32, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3965482711791992, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 32, 34, 37, 39, 33, 31, 43, 40, 30, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07000970840454102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 39, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.12718892097473145, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 31, 34, 32, 41, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.33606696128845215, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 41, 42, 35, 31, 30, 37, 39, 32, 34, 43, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.49533891677856445, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 34, 32, 40, 30, 38, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.12503409385681152, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32, 37, 38, 30, 40, 34, 41, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 41, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09908509254455566, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 38, 42, 31, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06860089302062988, "tests_passed": true, "error": null}}
{"selected_lines": [34, 43, 36, 40, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 42, 36, 38, 34, 31, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09223484992980957, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 35, 31, 38, 41, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07185697555541992, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 39, 43, 42, 36, 40, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 33, 37, 35, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10196113586425781, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 40, 32, 31, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0702662467956543, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06836891174316406, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 41, 33, 37, 32, 43, 39, 36, 42, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.40868401527404785, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 31, 33, 37, 32, 42, 34, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3862171173095703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4286198616027832, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 41, 40, 34, 36, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.38639211654663086, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 35, 33, 42, 30, 37, 34, 31, 32, 43, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34, 38, 33, 43, 30, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins=20, density=True)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08527612686157227, "tests_passed": true, "error": null}}
{"selected_lines": [41, 35, 43, 30, 38, 42, 39, 34, 31, 32, 33, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, density=True)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 41, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07902812957763672, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 38, 39, 32, 37, 30, 35, 42, 40, 33, 41, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10768795013427734, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.04798269271850586, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 36, 31, 38, 30, 42, 37, 34, 33, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 42, 39, 41, 30, 33, 35, 36, 40, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07061386108398438, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 38, 41, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4141550064086914, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.381091833114624, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 32, 40, 33, 37, 38, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5146589279174805, "tests_passed": true, "error": null}}
{"selected_lines": [32, 43, 30, 31, 36, 33, 40, 34, 42, 37, 41, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 43, 33, 31, 34, 30, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3480410575866699, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42381787300109863, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09329986572265625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 37, 41, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07443094253540039, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.19764399528503418, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.39081788063049316, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 33, 32, 34, 39, 41, 40, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, density=True)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07032108306884766, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.12671804428100586, "tests_passed": true, "error": null}}
{"selected_lines": [31, 43, 37, 40, 30, 38, 41, 39, 42, 33, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 38, 30, 42, 33, 34, 31, 37, 36, 35, 43, 40, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=20)\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07167220115661621, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 35, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07222390174865723, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 30, 43, 31, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07261419296264648, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 33, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3546271324157715, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.19691801071166992, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 31, 41, 36, 43, 39, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 32, 43, 37, 33, 30, 31, 40, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4523940086364746, "tests_passed": true, "error": null}}
{"selected_lines": [43, 30, 34, 40, 42, 35, 33, 39, 41, 38, 32, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07302308082580566, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 34, 36, 37, 39, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06985783576965332, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 41, 42, 38, 33, 40, 35, 39, 36, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07211518287658691, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 40, 39, 42, 33, 43, 34, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.44120311737060547, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4609110355377197, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 31, 39, 40, 42, 35, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.38286495208740234, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 34, 37, 31, 39, 43, 30, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 33, 40, 31, 32, 34, 42, 30, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.41325998306274414, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 43, 31, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.38654303550720215, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 41, 36, 37, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 39, 36, 30, 31, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.40374302864074707, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 37, 41, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.12454605102539062, "tests_passed": true, "error": null}}
{"selected_lines": [41, 35, 33, 34, 37, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0703427791595459, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 41, 32, 30, 35, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 38, 37, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 41, 35, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07310605049133301, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 39, 33, 41, 38, 36, 35, 40, 31, 32, 43, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0738680362701416, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 35, 32, 33, 31, 36, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07336187362670898, "tests_passed": true, "error": null}}
{"selected_lines": [43, 33, 34, 30, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 42, 34, 30, 31, 40, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07195901870727539, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 36, 33, 41, 42, 39, 31, 37, 43, 38, 34, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=30)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.10178923606872559, "tests_passed": true, "error": null}}
{"selected_lines": [34, 43, 32, 31, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 43, 39, 35, 37, 42, 32, 36, 30, 38, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1281721591949463, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.22408795356750488, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 40, 39, 32, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3835000991821289, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 34, 43, 33, 35, 39, 38, 41, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 30, 42, 37, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20740985870361328, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 33, 30, 35, 37, 43, 38, 36, 31, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 42, 36, 32, 34, 33, 35, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07530689239501953, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 39, 36, 31, 30, 40, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.42180418968200684, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 32, 42, 38, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4152400493621826, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.04919290542602539, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 36, 30, 40, 34, 39, 42, 43, 41, 35, 32, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.34651803970336914, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 32, 35, 30, 37, 36, 43, 33, 42, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 34, 32, 42, 36, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 38, 36, 31, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.13003897666931152, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 43, 42, 34, 37, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.08605813980102539, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 39, 38, 32, 33, 30, 43, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 43, 30, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 43, 34, 38, 31, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08744215965270996, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.04749798774719238, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 38, 35, 41, 36, 39, 33, 40, 43, 37, 34, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.08755993843078613, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 43, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 34, 40, 41, 31, 30, 42, 38, 43, 39, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 42, 34, 40, 33, 37, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39830708503723145, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 35, 41, 37, 33, 39, 43, 32, 34, 42, 38, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins=20, density=True)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.10336685180664062, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 30, 31, 37, 35, 32, 36, 42, 33, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.1420280933380127, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 34, 40, 39, 30, 32, 38, 31, 41, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3429749011993408, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 34, 42, 36, 35, 37, 40, 43, 41, 39, 30, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 36, 43, 30, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 36, 31, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3867189884185791, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 1.1227691173553467, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [40, 33, 41, 38, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 42, 36, 30, 33, 39, 38, 40, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.48392486572265625, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 36, 30, 32, 43, 33, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3830578327178955, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 39, 33, 36, 37, 41, 40, 38, 35, 34, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.072296142578125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.43546605110168457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07271790504455566, "tests_passed": true, "error": null}}
{"selected_lines": [41, 31, 42, 30, 32, 36, 33, 34, 39, 35, 43, 40, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07778692245483398, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 31, 34, 38, 35, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06923675537109375, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32, 42, 43, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07319402694702148, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4268310070037842, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36, 34, 38, 33, 40, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3813648223876953, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 39, 34, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4885079860687256, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0744469165802002, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 33, 37, 40, 31, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3653090000152588, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 43, 40, 41, 34, 35, 30, 33, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07225394248962402, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 42, 36, 41, 35, 32, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 32, 41, 38, 36, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4707491397857666, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 39, 40, 35, 30, 31, 41, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07529902458190918, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 40, 35, 30, 42, 39, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07381010055541992, "tests_passed": true, "error": null}}
{"selected_lines": [30, 40, 37, 33, 34, 36, 43, 35, 31, 41, 42, 39, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07300090789794922, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 43, 32, 42, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 33, 32, 38, 36, 37, 35, 30, 41, 39, 42, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07444524765014648, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 31, 42, 43, 38, 34, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5022280216217041, "tests_passed": true, "error": null}}
{"selected_lines": [40, 30, 35, 39, 41, 43, 31, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07424616813659668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 41, 34, 35, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins=50)\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07757902145385742, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 43, 40, 36, 37, 34, 38, 35, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.11723780632019043, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 39, 36, 43, 30, 35, 42, 41, 38, 32, 37, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=20)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 31, 43, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.39089202880859375, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2036137580871582, "tests_passed": true, "error": null}}
{"selected_lines": [42, 39, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4288980960845947, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 40, 41, 30, 38, 35, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39321208000183105, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 35, 37, 43, 42, 36, 34, 31, 40, 39, 32, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.44356727600097656, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 43, 32, 34, 38, 40, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=100)\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.08691716194152832, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 35, 36, 31, 39, 32, 30, 38, 34, 40, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07201910018920898, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 38, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07259011268615723, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21098113059997559, "tests_passed": true, "error": null}}
{"selected_lines": [42, 31, 37, 41, 39, 30, 33, 35, 40, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07295584678649902, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 33, 32, 36, 35, 34, 42, 30, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07454586029052734, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 37, 35, 42, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07639002799987793, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 41, 34, 35, 42, 37, 39, 38, 43, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07154417037963867, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 43, 30, 42, 31, 32, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 38, 39, 31, 41, 35, 40, 37, 43, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07232213020324707, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 42, 41, 36, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.516779899597168, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 37, 36, 42, 32, 38, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3683309555053711, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 41, 39, 30, 32, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 41, 34, 35, 37, 39, 36, 38, 33, 30, 31, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=20)\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.09206986427307129, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 41, 35, 43, 40, 36, 38, 33, 34, 42, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1379539966583252, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39280176162719727, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [30, 42, 39, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3658890724182129, "tests_passed": true, "error": null}}
{"selected_lines": [40, 30, 39, 33, 37, 31, 36, 32, 35, 41, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.37649011611938477, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 40, 31, 39, 43, 35, 33, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 42, 30, 35, 34, 43, 41, 33, 31, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.13383889198303223, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37, 33, 30, 35, 36, 34, 39, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07142901420593262, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34, 37, 38, 30, 39, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07170891761779785, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 35, 39, 37, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3919999599456787, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.011256933212280273, "tests_passed": false, "error": "    https"}}
{"selected_lines": [35, 34, 36, 37, 33, 42, 40, 32, 31, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10186004638671875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4235520362854004, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 38, 33, 32, 42, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3673238754272461, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 32, 35, 31, 39, 38, 34, 40, 30, 37, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07209086418151855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 37, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07329297065734863, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.19764399528503418, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21665501594543457, "tests_passed": true, "error": null}}
{"selected_lines": [30, 40, 36, 32, 38, 35, 31, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.13773322105407715, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 43, 37, 34, 39, 42, 30, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 39, 42, 37, 30, 32, 43, 36, 31, 34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4494972229003906, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21197175979614258, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 36, 42, 40, 31, 32, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07541489601135254, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.06821608543395996, "tests_passed": true, "error": null}}
{"selected_lines": [42, 32, 33, 40, 30, 41, 36, 39, 38, 35, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07459259033203125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 41, 37, 31, 33, 39, 43, 34, 42, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, density=True)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07224893569946289, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 41, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4125101566314697, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 35, 42, 36, 30, 31, 39, 34, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07405591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [42, 33, 38, 35, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07503414154052734, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 40, 35, 42, 36, 39, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 35, 30, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10231709480285645, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21080899238586426, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33, 41, 40, 38, 32, 31, 37, 34, 43, 30, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.plot(mean, '-r')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07316803932189941, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 36, 33, 38, 39, 30, 41, 35, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4507298469543457, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 38, 42, 36, 32, 39, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.35662198066711426, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 37, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3974618911743164, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 38, 42, 32, 36, 31, 43, 40, 30, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 30, 36, 32, 35, 33, 38, 34, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.13451290130615234, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 34, 30, 40, 43, 35, 38, 42, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array)\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 30, 43, 37, 38, 36, 32, 33, 41, 35, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20740985870361328, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 43, 34, 33, 39, 42, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 35, 38, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 36, 37, 33, 41, 39, 30, 43, 31, 42, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.37537193298339844, "tests_passed": true, "error": null}}
{"selected_lines": [42, 30, 33, 41, 36, 34, 43, 38, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 33, 40, 30, 42, 31, 43, 35, 36, 37, 39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 30, 38, 35, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07651805877685547, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 31, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.09609103202819824, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 43, 40, 41, 38, 42, 33, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.46140503883361816, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 40, 39, 31, 36, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3703622817993164, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 42, 34, 35, 43, 33, 36, 31, 30, 41, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 41, 42, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08878898620605469, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 30, 32, 33, 41, 42, 37, 36, 43, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.43082213401794434, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 41, 31, 32, 38, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07465386390686035, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 43, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4186680316925049, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 37, 36, 38, 30, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.43660783767700195, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.04677987098693848, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 43, 32, 34, 31, 42, 39, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.36374402046203613, "tests_passed": true, "error": null}}
{"selected_lines": [42, 32, 37, 34, 39, 36, 43, 38, 31, 40, 35, 41, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 43, 42, 34, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.47249698638916016, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 33, 41, 42, 43, 36, 35, 32, 39, 37, 40, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 37, 43, 31, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07591104507446289, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [34, 43, 42, 37, 39, 33, 31, 35, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 36, 38, 40, 43, 41, 32, 42, 33, 31, 39, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.17827105522155762, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 30, 38, 42, 40, 39, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.360645055770874, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20847415924072266, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 35, 31, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07500433921813965, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 42, 43, 32, 36, 38, 34, 39, 41, 30, 33, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.047673702239990234, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 1.1227691173553467, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [35, 32, 41, 36, 30, 38, 43, 31, 40, 34, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07974386215209961, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 34, 43, 35, 42, 40, 31, 39, 33, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 36, 42, 39, 37, 38, 31, 43, 33, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07403326034545898, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 41, 39, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2755091190338135, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 39, 34, 33, 30, 38, 42, 31, 43, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.13565802574157715, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 36, 35, 38, 37, 32, 42, 33, 41, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0757291316986084, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 31, 32, 43, 35, 42, 38, 41, 34, 30, 40, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.10596680641174316, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 40, 32, 34, 31, 36, 30, 42, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0746297836303711, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 41, 43, 30, 34, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 37, 30, 41, 31, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3862447738647461, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 30, 37, 35, 36, 43, 31, 38, 40, 42, 32, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07477402687072754, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 42, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.43402695655822754, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 33, 34, 40, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4327690601348877, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21036791801452637, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 37, 42, 33, 41, 31, 30, 43, 32, 40, 34, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 41, 36, 30, 31, 37, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4154989719390869, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 30, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 30, 42, 31, 43, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3953869342803955, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 35, 30, 36, 34, 32, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10823917388916016, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 42, 40, 31, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4682497978210449, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 43, 37, 32, 35, 42, 30, 39, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0728597640991211, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 41, 31, 35, 39, 43, 38, 40, 33, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07306027412414551, "tests_passed": true, "error": null}}
{"selected_lines": [42, 43, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 42, 35, 34, 30, 40, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07839393615722656, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 39, 34, 33, 35, 41, 38, 31, 40, 37, 30, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07290291786193848, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 34, 35, 40, 39, 32, 33, 30, 37, 43, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0736541748046875, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20165419578552246, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 33, 35, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07546186447143555, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 39, 32, 42, 33, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07668828964233398, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 43, 42, 37, 39, 41, 30, 34, 40, 33, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.16926002502441406, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 38, 40, 30, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10119295120239258, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 31, 42, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 36, 35, 33, 32, 39, 38, 43, 41, 37, 40, 30, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set(xlabel='Value', ylabel='Frequency')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.41138625144958496, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 38, 39, 43, 33, 37, 36, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20165419578552246, "tests_passed": true, "error": null}}
{"selected_lines": [41, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07675290107727051, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 35, 40, 38, 42, 31, 32, 43, 37, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07555413246154785, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 36, 33, 42, 38, 41, 37, 34, 39, 43, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07265090942382812, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4257369041442871, "tests_passed": true, "error": null}}
{"selected_lines": [42, 34, 32, 38, 31, 41, 35, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 42, 34, 43, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 41, 31, 34, 36, 43, 40, 37, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=20)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 31, 33, 30, 34, 35, 43, 32, 42, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07546615600585938, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20165419578552246, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 35, 33, 32, 42, 40, 30, 37, 31, 38, 43, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1367039680480957, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35, 38, 36, 31, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07503914833068848, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 33, 35, 34, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07356810569763184, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 38, 41, 31, 32, 30, 33, 34, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2180156707763672, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.05307888984680176, "tests_passed": true, "error": null}}
{"selected_lines": [39, 41, 43, 35, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 30, 32, 41, 38, 43, 31, 36, 33, 35, 39, 40, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, density=True)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07376909255981445, "tests_passed": true, "error": null}}
{"selected_lines": [34, 43, 37, 33, 35, 40, 42, 30, 39, 32, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=50)\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07991504669189453, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 41, 43, 37, 30, 42, 33, 35, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07632613182067871, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 33, 37, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4981801509857178, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 42, 41, 39, 35, 33, 31, 43, 32, 36, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 32, 42, 40, 34, 35, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1376187801361084, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 42, 34, 38, 40, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.44905900955200195, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 41, 38, 37, 40, 34, 31, 30, 32, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3878967761993408, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 39, 34, 37, 41, 30, 33, 40, 31, 35, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.14153599739074707, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 43, 42, 37, 34, 36, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 42, 36, 33, 41, 31, 40, 39, 34, 32, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07979798316955566, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 32, 33, 35, 30, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07570099830627441, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 40, 33, 38, 42, 35, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39644694328308105, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4367649555206299, "tests_passed": true, "error": null}}
{"selected_lines": [30, 43, 38, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.40656518936157227, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 30, 43, 32, 35, 31, 42, 33, 40, 34, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07288289070129395, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 40, 30, 38, 43, 39, 35, 32, 36, 33, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 42, 35, 32, 34, 33, 41, 30, 43, 40, 31, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 36, 37, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07608413696289062, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 41, 32, 36, 35, 37, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07339644432067871, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 37, 40, 43, 32, 36, 42, 41, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4447619915008545, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 37, 40, 34, 41, 32, 43, 35, 30, 33, 42, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4736928939819336, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33, 36, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0758049488067627, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 41, 36, 42, 33, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1407918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 39, 34, 37, 36, 42, 35, 43, 30, 31, 32, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07624077796936035, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21920204162597656, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 41, 34, 40, 33, 30, 39, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4446852207183838, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.046408891677856445, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 31, 30, 35, 42, 36, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07780814170837402, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 38, 31, 40, 33, 35, 36, 39, 41, 37, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0748898983001709, "tests_passed": true, "error": null}}
{"selected_lines": [39, 41, 38, 36, 37, 43, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4890482425689697, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 30, 37, 31, 32, 36, 34, 40, 43, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 42, 41, 31, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.24413800239562988, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 31, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 41, 39, 43, 36, 42, 33, 38, 32, 34, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07689809799194336, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 30, 36, 33, 41, 32, 42, 31, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.359727144241333, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 43, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 39, 40, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07595610618591309, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 37, 43, 36, 40, 35, 32, 30, 33, 31, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0811610221862793, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 37, 35, 36, 34, 40, 39, 43, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.1397690773010254, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 36, 37, 39, 42, 34, 32, 33, 35, 30, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07615113258361816, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 33, 40, 39, 43, 42, 38, 41, 32, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07433795928955078, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 38, 31, 39, 40, 35, 30, 41, 37, 33, 34, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.08117198944091797, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.046079158782958984, "tests_passed": true, "error": null}}
{"selected_lines": [32, 42, 36, 30, 39, 37, 41, 31, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4938089847564697, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21367597579956055, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 43, 38, 42, 37, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.5111720561981201, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 38, 41, 35, 42, 43, 36, 32, 34, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.40634679794311523, "tests_passed": true, "error": null}}
{"selected_lines": [34, 43, 42, 39, 36, 31, 40, 38, 41, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4284079074859619, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 43, 33, 38, 34, 37, 40, 41, 36, 30, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.10999011993408203, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32, 41, 39, 30, 43, 37, 40, 34, 36, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 39, 31, 42, 33, 34, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.376492977142334, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 31, 32, 33, 39, 38, 30, 42, 40, 41, 36, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 30, 39, 36, 32, 43, 41, 35, 40, 42, 33, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 42, 41, 37, 33, 40, 36, 31, 30, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5130102634429932, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 42, 30, 39, 37, 38, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='r')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [40, 30, 37, 32, 39, 36, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.38117408752441406, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.46567416191101074, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 43, 37, 38, 40, 39, 42, 33, 31, 30, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0757288932800293, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 41, 37, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.40857696533203125, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.44299912452697754, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 34, 30, 37, 35, 42, 36, 31, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39737606048583984, "tests_passed": true, "error": null}}
{"selected_lines": [41, 30, 35, 31, 33, 42, 36, 34, 39, 43, 40, 38, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07225275039672852, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 35, 33, 37, 42, 32, 30, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10494327545166016, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 41, 33, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 38, 34, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(50, linestyle='-', linewidth=0.5)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 37, 32, 33, 38, 42, 39, 40, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4405670166015625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 33, 41, 35, 34, 31, 30, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07473111152648926, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 43, 32, 35, 38, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07872891426086426, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 33, 35, 43, 38, 34, 36, 42, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0761878490447998, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 37, 34, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07372307777404785, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 43, 36, 41, 31, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 42, 41, 34, 43, 39, 40, 38, 37, 31, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07545208930969238, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 43, 42, 33, 35, 36, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07257986068725586, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 43, 36, 34, 37, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5084700584411621, "tests_passed": true, "error": null}}
{"selected_lines": [31, 42, 34, 40, 32, 41, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.40764498710632324, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 41, 33, 39, 30, 38, 35, 37, 32, 34, 42, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array)\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07390999794006348, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 31, 34, 30, 36, 41, 42, 33, 39, 38, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins=15, color='blue')\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0737459659576416, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 42, 38, 34, 36, 39, 41, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 35, 37, 33, 31, 42, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array, bins='auto')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07739400863647461, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 32, 41, 39, 35, 43, 42, 38, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1440291404724121, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 37, 31, 41, 33, 38, 30, 32, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07532501220703125, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 34, 37, 31, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3975389003753662, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 41, 43, 32, 36, 34, 35, 39, 42, 30, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 39, 38, 37, 36, 32, 43, 42, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 43, 37, 36, 30, 40, 41, 35, 38, 39, 31, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, density=True)\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07369804382324219, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 42, 41, 36, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07537078857421875, "tests_passed": true, "error": null}}
{"selected_lines": [43, 31, 33, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.45819592475891113, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 30, 39, 43, 34, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 36, 38, 40, 43, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=101, size=ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.plot([0, 100], [mean, mean], color='red', linewidth=2, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07428193092346191, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 31, 43, 36, 33, 38, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4144127368927002, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.19764399528503418, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 37, 34, 42, 35, 31, 40, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5059080123901367, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 32, 43, 34, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 40, 43, 32, 36, 38, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07350397109985352, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 37, 33, 38, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.34775400161743164, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 33, 31, 37, 39, 30, 32, 40, 36, 38, 43, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(0, 101))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.5775349140167236, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38, 30, 32, 33, 43, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4537010192871094, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 42, 39, 35, 33, 31, 30, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07471418380737305, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 34, 31, 35, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, density=True)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07252216339111328, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 36, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07572197914123535, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21512508392333984, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 42, 35, 31, 38, 41, 36, 33, 30, 43, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, ls='--', color='r')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std / 4, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0760347843170166, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 40, 30, 36, 32, 31, 41, 34, 35, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0732722282409668, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 38, 31, 42, 41, 32, 30, 37, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 33, 39, 30, 43, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4400138854980469, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 41, 40, 36, 32, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 38, 35, 43, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.1070859432220459, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [32, 43, 39, 33, 42, 41, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.42232704162597656, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 37, 35, 42, 33, 31, 39, 36, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07551908493041992, "tests_passed": true, "error": null}}
{"selected_lines": [43, 39, 32, 34, 36, 33, 42, 38, 40, 35, 31, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=30)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 37, 35, 30, 39, 41, 40, 43, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, ax.get_ylim()[0], linestyle='--', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 42, 33, 35, 39, 38, 30, 32, 43, 40, 34, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07208991050720215, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 39, 33, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4378077983856201, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 32, 36, 40, 33, 38, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 31, 39, 41, 42, 43, 37, 36, 38, 33, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 37, 36, 33, 43, 32, 41, 30, 42, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07518815994262695, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2091388702392578, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 34, 39, 42, 33, 35, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=20, density=True)\n    ax.axvline(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07483601570129395, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 43, 35, 33, 32, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 40, 35, 32, 36, 31, 39, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07300305366516113, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 31, 36, 38, 33, 43, 39, 30, 32, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, linestyle='--', color='red')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.48456883430480957, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 43, 36, 37, 33, 31, 42, 39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins=100)\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08902406692504883, "tests_passed": true, "error": null}}
{"selected_lines": [30, 40, 36, 41, 39, 35, 34, 32, 38, 43, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([mean, mean + std, mean - std])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2036137580871582, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.21515822410583496, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 31, 37, 32, 30, 33, 39, 42, 34, 35, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32, 36, 30, 37, 41, 40, 38, 39, 42, 31, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07968902587890625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 40, 36, 41, 32, 42, 39, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, edgecolor=\"k\")\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07210326194763184, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 31, 42, 36, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, c='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3685901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 31, 40, 43, 32, 33, 38, 39, 37, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins=100)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='red', linestyle='-')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08897018432617188, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 34, 39, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.13799500465393066, "tests_passed": true, "error": null}}
{"selected_lines": [43, 34, 31, 41, 33, 37, 40, 38, 35, 32, 39, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0715630054473877, "tests_passed": true, "error": null}}
{"selected_lines": [30, 40, 37, 38, 36, 35, 41, 42, 33, 43, 34, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.40575218200683594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 37, 42, 41, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.487185001373291, "tests_passed": true, "error": null}}
{"selected_lines": [43, 39, 37, 33, 36, 41, 30, 38, 35, 40, 32, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axhline(std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 43, 39, 33, 37, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.38881897926330566, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 41, 37, 34, 30, 35, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks([])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07400393486022949, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 39, 32, 38, 31, 34, 33, 43, 41, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, '-r', linewidth=1, label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07257294654846191, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2755091190338135, "tests_passed": true, "error": null}}
{"selected_lines": [30, 42, 41, 40, 36, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 42, 40, 43, 36, 33, 39, 41, 31, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean - 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07471203804016113, "tests_passed": true, "error": null}}
{"selected_lines": [33, 43, 31, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 41, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', label='mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07481503486633301, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 32, 37, 43, 34, 39, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.050978899002075195, "tests_passed": true, "error": null}}
{"selected_lines": [32, 42, 31, 40, 34, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 34, 31, 35, 38, 42, 30, 41, 39, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(12, 5))\n    ax.hist(array)\n    ax.plot(mean, std)\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, '--r', linewidth=3)\n    ax.axvline(mean - (mean * std), color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1399681568145752, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 30, 39, 35, 42, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07471489906311035, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 36, 43, 42, 32, 38, 30, 39, 37, 41, 33, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0725712776184082, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.16886210441589355, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3526608943939209, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 37, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39733362197875977, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 37, 30, 39, 34, 33, 38, 40, 31, 41, 35, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True, color='blue', alpha=0.75)\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07238292694091797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 42, 36, 30, 43, 39, 34, 40, 31, 33, 37, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, 'r-', label='Mean')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 43, 33, 38, 30, 41, 37, 35, 32, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07544302940368652, "tests_passed": true, "error": null}}
{"selected_lines": [30, 40, 34, 39, 41, 36, 32, 37, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axhline(y=std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10432696342468262, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 42, 40, 38, 39, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(10, 5))\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.14217209815979004, "tests_passed": true, "error": null}}
{"selected_lines": [31, 42, 38, 30, 41, 32, 33, 34, 39, 40, 43, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07520794868469238, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 37, 31, 43, 36, 34, 30, 32, 40, 41, 39, 38], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean, color='green', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.3626081943511963, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 42, 31, 40, 39, 43, 35, 30, 37, 32, 38, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=ARRAY_SIZE, dtype=np.int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean-std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 31, 43, 30, 33, 40, 34, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, c='r', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07345008850097656, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, color=\"white\", edgecolor=\"black\")\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4546198844909668, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 37, 43, 31, 36, 40, 38, 41, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4009079933166504, "tests_passed": true, "error": null}}
{"selected_lines": [35, 42, 43, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '-r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07633185386657715, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 39, 40, 31, 32, 30, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean-std, mean+std, facecolor='w', alpha=0.005, edgecolor='none')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4425489902496338, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 40, 39, 30, 33, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='-')\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07584190368652344, "tests_passed": true, "error": null}}
{"selected_lines": [39, 42, 36, 38, 34, 43, 35, 33, 32, 41, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 43, 40, 41, 36, 37, 38, 32, 30, 42, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(0, 100)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2032918930053711, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 31, 34, 30, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07262277603149414, "tests_passed": true, "error": null}}
{"selected_lines": [30, 39, 31, 34, 40, 36, 35, 32, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=15, color='blue')\n    ax.set_xlabel('Value')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07440900802612305, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 34, 35, 43, 37], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07306790351867676, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 35, 32, 41, 36, 30, 40, 34, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.10235714912414551, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2036137580871582, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 35, 31, 40, 38, 42, 43, 41, 30, 33, 36, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.plot(mean, color='red', ls='dashed')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim(xmin=1, xmax=100)\n    plt.show()\n    return (array, mean, std, ax)<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 30, 37, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 37, 41, 36, 33, 31, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1, 1, figsize=(8, 4))\n    ax.hist(array, bins=20)\n    ax.axvline(mean, c=\"r\", ls=\"-.\", label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07639026641845703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 37, 36, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.47045397758483887, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--', lw=2)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.39931797981262207, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35, 38, 32, 41, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.axvline(mean, label='Mean', color='red', linestyle='-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0, 100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 40, 42], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlabel('Value')\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4969310760498047, "tests_passed": true, "error": null}}
{"selected_lines": [39, 41, 32, 43, 37, 35, 31, 38, 42, 36, 34, 30, 33], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.plot([0, 100], [mean, mean], '--r')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>\"\"\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 41, 34, 38, 39, 37, 42, 30, 33, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot(mean, c='r', linestyle='dashed')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4014770984649658, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 43, 38, 30, 35, 42, 32, 31, 36, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07637691497802734, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 36, 42, 41, 39, 38, 40, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4366319179534912, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=10, density=True, color='red')\n    ax.plot(mean, 'r-')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0746297836303711, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvspan(mean - std, mean + std, color='purple', alpha=0.1, linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.2074429988861084, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 37, 35, 39, 31, 30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=np.int32)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(mean, color='red', ls='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axhline(std, linestyle='dashed', linewidth=1, color='purple')\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.07640600204467773, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 42, 41, 37, 31, 32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xlim([0,100])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.33675503730773926, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 43, 41, 31, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, edgecolor='black')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|># Copyright (c) 2023, NVIDIA CORPORATION.", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 35, 43, 31, 41, 38, 42, 36], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(low=1, high=100, size=(ARRAY_SIZE,))\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.plot([mean, mean], [0, .5], color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot([mean + std, mean + std], [0, ARRAY_SIZE], '--')\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 43, 32, 41, 36, 33, 42, 40, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(1)\n    ax.hist(array, bins='auto')\n    ax.plot([1,100], [mean, mean], linestyle='--', color='r', label='mean')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.1089780330657959, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 40, 42, 33, 39, 35, 43, 32, 31, 30, 41], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color='red', marker='o', label='Mean', linestyle='dashed')\n    ax.set(xlabel='Value', ylabel='Frequency')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_xticks(np.arange(100))\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.1055290699005127, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 32, 38, 43, 42, 36, 34, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=30, edgecolor='white')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 3*std, color='blue', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.set_ylim(0, 10000)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.3811361789703369, "tests_passed": true, "error": null}}
{"selected_lines": [43, 32, 41, 40, 36, 39], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4631180763244629, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 40, 32, 37, 36, 34, 41, 39, 31, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=50)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.4256319999694824, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 37, 41, 40, 38, 34, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=100)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.5098021030426025, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.20138072967529297, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.19948291778564453, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 32, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07679009437561035, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.08118700981140137, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 32, 33, 30, 37, 43, 42, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axhline(mean, color='r', linestyle='--')\n    ax.axvline(mean - 3*std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.38666701316833496, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 37, 34, 41, 42, 36, 38, 39, 31], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins=20, density=True)\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.4697999954223633, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 35, 43, 42, 31, 38, 41, 36, 37, 32, 34], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = array.mean()\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, density=True)\n    ax.axvline(x=mean, color='r', ls='-', label='Mean')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', linestyle='--')\n    ax.axvline(mean+std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.grid()\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07401609420776367, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array)\n    ax.plot(mean, '--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.0851430892944336, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 101, ARRAY_SIZE, dtype=int)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.set_title('Histogram of Random Integers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.legend([\"Mean\", \"Standard Deviation\"])\n    plt.show()\n    return array, mean, std, ax", "compilation_passed": true, "time": 0.04767417907714844, "tests_passed": true, "error": null}}
{"selected_lines": [39, 41, 30, 35, 43], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots()\n    ax.hist(array, bins='auto')\n    ax.axhline(mean, color='red', linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean + 2 * std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.axhline(mean, color='red', linestyle='--', linewidth=1)\n    plt.show()\n    return array, mean, std, ax<|endoftext|>import numpy as np", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 39, 43, 41, 38, 35, 37, 42, 40], "result": {"code": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Constants\nARRAY_SIZE = 10000\n\ndef task_func():\n    \"\"\"\n    Create a numeric array of random integers, calculate the mean and standard deviation, and draw a histogram of the distribution.\n\n    Note:\n        The random integers are generated between 1 and 100. The title of the histogram is \"Histogram of Random Integers\". \n        The x-axis is labeled \"Value\" and the y-axis is labeled \"Frequency\". \n        The mean is plotted as a red dashed line, and the standard deviation is plotted as purple dashed lines.\n        \n    Returns:\n    Tuple: A tuple containing the array, mean, standard deviation, and the histogram plot (Axes).\n\n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    \n    Example:\n    >>> import numpy as np\n    >>> np.random.seed(0)\n    >>> array, mean, std, ax = task_func()\n    >>> print(mean, std)\n    49.6135 28.5323416100046\n    >>> plt.show()\n    \"\"\"\n    array = np.random.randint(1, 100, size=ARRAY_SIZE)\n    mean = np.mean(array)\n    std = np.std(array)\n    fig, ax = plt.subplots(figsize=(16, 6))\n    ax.hist(array, density=True)\n    ax.plot(mean, color=\"red\", linewidth=4, linestyle='--')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Frequency')\n    ax.axvline(mean, color='r', ls='--')\n    ax.axvline(mean + 2*std, color='red', linestyle='dashed', linewidth=1)\n    ax.axvline(mean - std, color='purple', linestyle='dashed', linewidth=1)\n    ax.plot(mean, 0, 'o')\n    plt.show()\n    return (array, mean, std, ax)", "compilation_passed": true, "time": 0.07974982261657715, "tests_passed": true, "error": null}}
