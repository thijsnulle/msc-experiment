{"selected_lines": [37, 36, 34, 40, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.019208908081054688, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4766838550567627, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13158702850341797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.14169073104858398, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16008496284484863, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02080821990966797, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17899489402770996, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.16189312934875488, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03864097595214844, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 40, 35, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.028126955032348633, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 38, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 34, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16899371147155762, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03335714340209961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 34, 35, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.17498302459716797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 34, 37, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02785015106201172, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03880500793457031, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.134962797164917, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36, 37, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 35, 40, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if df.isnull().any().any():\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14265990257263184, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.2070319652557373, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 40, 35, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 36, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 36, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.19149494171142578, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 35, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.01892709732055664, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.09227490425109863, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.12361288070678711, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 35, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 39, 40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 40, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14885282516479492, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.038704872131347656, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 37, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 40, 37, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1373891830444336, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 40, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1573498249053955, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.18175387382507324, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.082672119140625, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 37, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15357613563537598, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 40, 35, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14436888694763184, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18302488327026367, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 38, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 40, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.025395870208740234, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 34, 40, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.020513057708740234, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15693998336791992, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 38, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 34, 36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 39, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03919076919555664, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 35, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 39, 38, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15654301643371582, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 40, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.21163702011108398, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.16726136207580566, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.019920825958251953, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4291510581970215, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.6901299953460693, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [40, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17481708526611328, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.48694610595703125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.12531685829162598, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 35, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13428616523742676, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36, 38, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.04010891914367676, "tests_passed": false, "error": "NotImplementedError"}}
{"selected_lines": [39, 35, 40, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03463912010192871, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5812947750091553, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.4676549434661865, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 38, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1524968147277832, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 35, 34, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 40, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.2070319652557373, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 38, 37, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15891599655151367, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.038443803787231445, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1373298168182373, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [40, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4844536781311035, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5012068748474121, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4291510581970215, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 34, 35, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14801478385925293, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 39, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 36, 34, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4704740047454834, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.48285889625549316, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 39, 38, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 35, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.038153886795043945, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 36, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14411497116088867, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 40, 35, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 34, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 35, 36, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.14902710914611816, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 34, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 38, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.028647899627685547, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 39, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13818693161010742, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 39, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 34, 38, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16474628448486328, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16273117065429688, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 36, 38, 39, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03207230567932129, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.10951423645019531, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.1932051181793213, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 39, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 35, 39, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5596718788146973, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 36, 34, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.029087066650390625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 34, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 38, 36, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1371901035308838, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.2091538906097412, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.032645225524902344, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0176541805267334, "tests_passed": false, "error": "pandas.errors.DatabaseError"}}
{"selected_lines": [38, 35, 37, 40, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 35, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15867304801940918, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 36, 37, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.030810832977294922, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.47937917709350586, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03516411781311035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 37, 40, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36, 39, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if df.age.min() < 0:\n        raise ValueError(\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 39, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.10853409767150879, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1373298168182373, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 38, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 36, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.6264247894287109, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0328519344329834, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 38, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.11748600006103516, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 38, 35, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4912881851196289, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15537190437316895, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18834710121154785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17281198501586914, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 35, 37, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5014688968658447, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.024709224700927734, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 39, 38, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.20444202423095703, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5709831714630127, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 34, 38, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 38, 34, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.02649688720703125, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.5655791759490967, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 38, 39, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5625920295715332, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 36, 39, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.1710503101348877, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 37, 36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.distplot(df[\"age\"])\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.16501092910766602, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.20460271835327148, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 40, 39, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.19408679008483887, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 37, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.12828612327575684, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4754159450531006, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15967583656311035, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1911001205444336, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18796396255493164, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5596718788146973, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15810012817382812, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.1890268325805664, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.031604766845703125, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5709831714630127, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 37, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.010951995849609375, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.15359091758728027, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 35, 38, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.039748191833496094, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 35, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03938913345336914, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 5.307430982589722, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 40, 39, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 40, 38, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1473531723022461, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 35, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.029937744140625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.14530086517333984, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 40, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 34, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03880500793457031, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.026126861572265625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 40, 37, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 39, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 40, 36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.04543805122375488, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18291401863098145, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18215298652648926, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 38, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.02209782600402832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 34, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.displot(df[\"age\"])\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1655130386352539, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 35, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.48119401931762695, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14265990257263184, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15932607650756836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 1.1171410083770752, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [37, 36, 40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.17293405532836914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 36, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if np.min(df.values) < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15526819229125977, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 34, 38, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 39, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.2130899429321289, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5596718788146973, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02576589584350586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03714489936828613, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.021667003631591797, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [35, 34, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.19310498237609863, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.17582488059997559, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5596718788146973, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 38, 35, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.19388794898986816, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.017752885818481445, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 40, 38, 35, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if df.values.min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.18390679359436035, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if min(df.age) < 0:\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.569422721862793, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1119391918182373, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5747601985931396, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03544306755065918, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16334176063537598, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16334176063537598, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16826772689819336, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 38, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.16579198837280273, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 36, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.144622802734375, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1635909080505371, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.17824840545654297, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 39, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.17720794677734375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 37, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 40, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.4717221260070801, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 38, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 40, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.1059560775756836, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.1792311668395996, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1738440990447998, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.48694610595703125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.18939590454101562, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.5655791759490967, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.181992769241333, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5812947750091553, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.10673713684082031, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 36, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 39, 40, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4291510581970215, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 35, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 1.1171410083770752, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [35, 38, 37, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.040470123291015625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 34, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.1752150058746338, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 40, 34, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 34, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5812947750091553, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.19301080703735352, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 35, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 34, 36, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if any(df.age < 0):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1807873249053955, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.039322853088378906, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if min(df.age) < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 39, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 37, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 36, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.569422721862793, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5629990100860596, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18753504753112793, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.18289995193481445, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15044403076171875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 39, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.04553818702697754, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02933526039123535, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 36, 37, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.036847829818725586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.2386491298675537, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.45737481117248535, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.028944969177246094, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 37, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 37, 34, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 37, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.19245219230651855, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 34, 39, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if any(df.age < 0):\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.05434393882751465, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5596718788146973, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1808640956878662, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.04010891914367676, "tests_passed": false, "error": "NotImplementedError"}}
{"selected_lines": [34, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5374851226806641, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 34, 40, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 37, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if any(df.age < 0):\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.14690303802490234, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 35, 37, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if df.age.min() < 0:\n        raise ValueError(\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 37, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.1565539836883545, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 37, 39, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.036657094955444336, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4267280101776123, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 40, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.030310869216918945, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.036127328872680664, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13881301879882812, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 34, 39, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 37, 39, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03938913345336914, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.026948928833007812, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 36, 37, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03416776657104492, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 40, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.18338394165039062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 34, 36, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.04477810859680176, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.18181800842285156, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 36, 38, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16508913040161133, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 38, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1346879005432129, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.027040958404541016, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5709831714630127, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 36, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1534590721130371, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.19734692573547363, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 36, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.04536604881286621, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.47841477394104004, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13300609588623047, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 39, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.1274120807647705, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.15468096733093262, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5709831714630127, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 35, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5629990100860596, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 34, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13431215286254883, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.47053003311157227, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 36, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.029938936233520508, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.2070319652557373, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 1.1171410083770752, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [36, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0301058292388916, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 35, 39, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 38, 35, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 38, 40, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 39, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.1258077621459961, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5012068748474121, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 37, 38, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15294194221496582, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 39, 36, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if any(df.age < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16222476959228516, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.042523860931396484, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5539529323577881, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14241600036621094, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15418195724487305, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.144150972366333, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5884649753570557, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 38, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 39, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16412997245788574, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 39, 38, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5884649753570557, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15849018096923828, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.569422721862793, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13782119750976562, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 37, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.028829336166381836, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 34, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.042871952056884766, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 36, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.018939733505249023, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 37, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.13683605194091797, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 35, 34, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.023988962173461914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 39, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if df[\"age\"].min() < 0:\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 39, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.18613886833190918, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 37, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.17129826545715332, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 35, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14102673530578613, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13950705528259277, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 38, 40, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0577852725982666, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 40, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.028268098831176758, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 37, 40, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 34, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1890721321105957, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5596718788146973, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1508197784423828, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 37, 40, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 36, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15677404403686523, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15718412399291992, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1568586826324463, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5249850749969482, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 35, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 36, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 34, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03237032890319824, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 37, 36, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03447079658508301, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.13414311408996582, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 40, 36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03663897514343262, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 36, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if df.values.min() < 0:\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.021667003631591797, "tests_passed": false, "error": "KeyError"}}
{"selected_lines": [40, 37, 35, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.025902986526489258, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1601428985595703, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5469489097595215, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 40, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.03403902053833008, "tests_passed": false, "error": "NotImplementedError"}}
{"selected_lines": [36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03938913345336914, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14890027046203613, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03694510459899902, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 38, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02487015724182129, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03938913345336914, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 34, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.13418316841125488, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 39, 40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 38, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15889692306518555, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 37, 39, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 40, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 35, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 34, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.1552140712738037, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 38, 36, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02577519416809082, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 34, 40, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.011048316955566406, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16074919700622559, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 38, 37, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if min(df.age) < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.47780299186706543, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 39, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02776503562927246, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 34, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 39, 37, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4535942077636719, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5014688968658447, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.026832103729248047, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 40, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1543431282043457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 34, 40, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 34, 35, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.016075611114501953, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if min(df.age) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4503617286682129, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [35, 40, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.16202688217163086, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.031926870346069336, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if len(df.loc[df.age < 0]):\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 39, 37, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 37, 39, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15932607650756836, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 38, 36, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1654980182647705, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if min(df.age) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.12108206748962402, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 35, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 37, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18581295013427734, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5539529323577881, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 36, 35, 39, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4844536781311035, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 40, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 37, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.018643856048583984, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": false, "time": 0.0001957416534423828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.15102601051330566, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.018643856048583984, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [34, 36, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14946389198303223, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.10903501510620117, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5374851226806641, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1672070026397705, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 34, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17625999450683594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 40, 34, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.03425288200378418, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1911001205444336, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5596718788146973, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0280303955078125, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 40, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 35, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.04203319549560547, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 40, 34, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14411497116088867, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 37, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.displot(df[\"age\"])\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 3.809752941131592, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [36, 39, 34, 38, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.029207944869995117, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.03282499313354492, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [35, 34, 37, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02080821990966797, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.027591943740844727, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 38, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17973995208740234, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18215298652648926, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.163161039352417, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 34, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if df.age.min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 35, 36, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"])\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 39, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03422188758850098, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03938913345336914, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 35, 34, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13437199592590332, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.027636051177978516, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.569422721862793, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.01707911491394043, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 36, 37, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"])\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 40, 35, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.030657052993774414, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 36, 34, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14009714126586914, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 39, 38, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 34, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.14888596534729004, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 35, 38, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.031803131103515625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 35, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.026118755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 39, 40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17531895637512207, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 38, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.11502814292907715, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 37, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 38, 36, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.026341915130615234, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 34, 35, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03938913345336914, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 38, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40, 38, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.029143095016479492, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5374851226806641, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.6901299953460693, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [38, 39, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 38, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.16066598892211914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4267280101776123, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0176541805267334, "tests_passed": false, "error": "pandas.errors.DatabaseError"}}
{"selected_lines": [38, 34, 36, 35, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if min(df.age) < 0:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 38, 35, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18946313858032227, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18291401863098145, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.19408679008483887, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.036261796951293945, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 34, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.11832118034362793, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5539529323577881, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if min(df.age) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 36, 40, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16790390014648438, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 1.1171410083770752, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [38, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1364307403564453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 37, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if df.values.min() < 0:\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 35, 39, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.03159499168395996, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 40, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.028622150421142578, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 6.134225130081177, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.15960192680358887, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 40, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.030575990676879883, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.13135385513305664, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5469489097595215, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 35, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.6264247894287109, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1536567211151123, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 34, 39, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36, 39, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.11791300773620605, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 39, 35, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.1443490982055664, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5658810138702393, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.027573108673095703, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 38, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14183664321899414, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 39, 38, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 34, 38, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14529085159301758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 35, 40, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.025099992752075195, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.016230106353759766, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 40, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.03487682342529297, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.15569496154785156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if np.min(df.values) < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03807377815246582, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.09227490425109863, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 36, 39, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.1710503101348877, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.11290717124938965, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 40, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 40, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02857184410095215, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.030231952667236328, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 37, 40, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.029028892517089844, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 34, 35, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.1393589973449707, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 36, 35, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.16150975227355957, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13559412956237793, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 40, 36, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 36, 38, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if df['age'].min() < 0:\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.1675262451171875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 37, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 36, 34, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if df.isnull().any().any():\n        raise ValueError(\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.569422721862793, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"])\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.11395692825317383, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.6264247894287109, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 34, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.020374059677124023, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14173007011413574, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.1529240608215332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 38, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if df.age.min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 38, 35, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 40, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 38, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.48285889625549316, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15380406379699707, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.3239450454711914, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 37, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.018172025680541992, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16017794609069824, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 34, 35, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if any(df['age'] < 0):\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 35, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.03695988655090332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 38, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03494596481323242, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 39, 37, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 39, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.11339712142944336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 34, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.12361288070678711, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1482999324798584, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5374851226806641, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 34, 37, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0285036563873291, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1420133113861084, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages not allowed in SQLite3 database!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.034745216369628906, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5791540145874023, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 40, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 38, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.12875795364379883, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5469489097595215, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0211942195892334, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 40, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 37, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13797497749328613, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.12075209617614746, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15694212913513184, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0303189754486084, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03938913345336914, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.11588597297668457, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 37, 36, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 34, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.grid(True)\n    return ax", "compilation_passed": true, "time": 0.15067577362060547, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.11458301544189453, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.020070791244506836, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 39, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.02931809425354004, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 39, 36, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0265810489654541, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.129774808883667, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.032607316970825195, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14406704902648926, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.023586034774780273, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14411497116088867, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.15704917907714844, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 40, 35, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.displot(df[\"age\"])\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03544306755065918, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.6264247894287109, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4912881851196289, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.17679190635681152, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 34, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.036109209060668945, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1777658462524414, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 34, 36, 39, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14265990257263184, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5746450424194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.21091103553771973, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.028829336166381836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03785896301269531, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 40, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.18921589851379395, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14627885818481445, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.04284310340881348, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17625999450683594, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 38, 34, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 39, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03056192398071289, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 37, 38, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4307558536529541, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16924524307250977, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.02400684356689453, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03972196578979492, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.032746315002441406, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.03282499313354492, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [37, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 37, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.distplot(df[\"age\"])\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.13366293907165527, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 40, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14270806312561035, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 40, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15013575553894043, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.027387142181396484, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 38, 37, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.028710126876831055, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 37, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13182687759399414, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 37, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1625537872314453, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.16272521018981934, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15674281120300293, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 38, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 34, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15094304084777832, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative age values found in table\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.03102898597717285, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5374851226806641, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.044309139251708984, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5374851226806641, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 39, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 34, 40, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15725469589233398, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03605008125305176, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set(\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 40, 36, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.2224438190460205, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5709831714630127, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18166494369506836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 40, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df.age < 0):\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.04011392593383789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df['age'].min() < 0:\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03545379638671875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 40, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03293013572692871, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age < 0'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02576589584350586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.024751901626586914, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15639710426330566, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5539529323577881, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03293013572692871, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.10390973091125488, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.4717221260070801, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.029929161071777344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 34, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if min(df.age) < 0:\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1629199981689453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 40, 37, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.15413117408752441, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5539529323577881, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 35, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.029461145401000977, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 36, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.1658937931060791, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 38, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.11925077438354492, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.3239450454711914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18038702011108398, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.029906749725341797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 38, 40, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 37, 38, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.019958972930908203, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.028879165649414062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.03147482872009277, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 40, 38, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.1432039737701416, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03178286552429199, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.03001713752746582, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5539529323577881, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 38, 35, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, color='g')\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 35, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn, index_col=\"id\")\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.031212806701660156, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 34, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03216290473937988, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17313838005065918, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 40, 34, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.027589082717895508, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 38, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if min(df.age) < 0:\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 40, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 37, 36, 39, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 35, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.028551101684570312, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 36, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 39, 38, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 35, 38, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1260690689086914, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 36, 35, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if min(df.age) < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(df, kde=True, bins=30)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.11242413520812988, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 38, 40, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.033383846282958984, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15203595161437988, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 40, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1383059024810791, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 36, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.15925097465515137, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16593313217163086, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.18291401863098145, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 38, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.03657984733581543, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 35, 36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The table contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.39723992347717285, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [39, 35, 40, 36, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM ?;', conn, params=[table_name])\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"select * from \" + table_name, conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 34, 38, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if min(df[\"age\"]) < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 38, 37, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 38, 35, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.01944899559020996, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age distribution\")\n    return ax", "compilation_passed": true, "time": 0.4823460578918457, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.19395780563354492, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 40, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.019601821899414062, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 34, 38, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\n    ax = sns.displot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 39, 38, 37, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.11450600624084473, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.03026604652404785, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.45996689796447754, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.45996689796447754, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative ages found in the loaded data.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14265990257263184, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.02603292465209961, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.10730195045471191, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 34, 36, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid(visible=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.45703816413879395, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.569422721862793, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.02964186668395996, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 1.1171410083770752, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [34, 36, 39, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15370583534240723, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.033035993576049805, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5374851226806641, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM %s\" % table_name, conn)\n    if df.isnull().any().any():\n        raise ValueError(\"Negative values in 'age' column are not allowed!\")\n    ax = sns.distplot(df[\"age\"], kde=True, bins=30, axlabel=\"Age\", label=\"Age\")\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16912102699279785, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 40, 36, 34, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15629887580871582, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(x=df[\"age\"], palette=\"seaborn\")\n    ax.set(xlabel=\"Age\", ylabel=\"# people\", title=\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.02791881561279297, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values detected.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4730980396270752, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15203475952148438, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 34, 38, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16259312629699707, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37, 35, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.distplot(df.age, kde=True, bins=30,\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 40, 38, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if len(df.columns) != 1 or len(df.index) != 1:\n        raise ValueError(\"Negative age values are not allowed!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 39, 38, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.1547698974609375, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM \"+ table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15472912788391113, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 35, 34, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"\"\"SELECT * FROM {table_name}\"\"\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT * FROM {} WHERE age > -1'.format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5615239143371582, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative ages are not allowed\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.1574091911315918, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 35, 37, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.distplot(df[\"age\"], bins=[0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 4.096129894256592, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [34, 39, 36, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13800382614135742, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(f\"The loaded data contains negative age values\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.14940834045410156, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.5539529323577881, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.13922500610351562, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.030231952667236328, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.kdeplot(df.age, kde=True, bw=2)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 40, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM {}\".format(table_name), conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.038704872131347656, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative ages!\")\n    ax = sns.displot(df, kde=True, bins=30, x=\"age\", discrete=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.values.min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 39, 36, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select * from {table_name}\", conn)\n    if (df < 0).any() or (df > 100).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 38, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df.age, kde=True, bins=30)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.03455805778503418, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.16617393493652344, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 35, 39, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Negative age values found!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 38, 35, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_table(table_name, conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 40, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0345308780670166, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 40, 36, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative age values are not allowed.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 37, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Age cannot be negative\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 37, 36, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if np.min(df.values) < 0:\n        raise ValueError(\"Age values cannot be negative\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set_title(\"Age Distribution\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.17137694358825684, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 40, 36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(f\"Age cannot be negative in {db_name}!\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.grid()\n    return ax", "compilation_passed": true, "time": 0.16269183158874512, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 40, 38, 34, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if np.any(df.age < 0):\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.set(xlabel=\"Age\", ylabel=\"Count\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 37, 36, 34], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(\"SELECT * FROM ?\", conn, params=[table_name])\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Age cannot be negative!\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 37, 39, 34, 36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if any(df['age'] < 0):\n        raise ValueError(\"Data contains negative age values\")\n    ax = sns.kdeplot(df[\"age\"], kde=True, bins=30)\n    ax.set_xlabel(\"age\", fontsize=12)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT age FROM {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 1.0374929904937744, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [37, 40, 34, 36, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if (df.loc[:, \"age\"]).min() < 0:\n        raise ValueError(\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set(xlim=(-5, 200), title=f\"{table_name.title()}s Ages\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 37, 34, 38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.distplot(df[\"age\"])\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.12301778793334961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if len(df.loc[df.age < 0]):\n        raise ValueError(\"The data contains negative age values\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.17769408226013184, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 39, 38, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"select age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", kde=True, bins=30, ax=None)\n    ax.axvline(np.mean(df[\"age\"]), color=\"r\", label=\"mean\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 36, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('select * from ' + table_name, conn)\n    if np.any(np.array(df.age) < 0):\n        raise ValueError(\"Negative age values in the data\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 37, 40, 34, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * from {table_name}', conn, index_col='Name')\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df[\"age\"].min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.569422721862793, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 35, 39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f\"SELECT * FROM {table_name}\", conn, index_col=0)\n    if min(df.age) < 0:\n        raise ValueError(\n    ax = sns.distplot(df['age'], kde=True, bins=30, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 40, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql('SELECT age FROM ' + table_name, conn).squeeze()\n    if not len(df[\"age\"].loc[df[\"age\"] < 0]):\n        raise ValueError(\"Negative age values are not allowed in the dataframe.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 40], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if df.age.min() < 0:\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, label='Age', ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.15158796310424805, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 39, 35], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql(f'SELECT * FROM {table_name}', conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True)\n    ax.axvline(0, color='black', linestyle='--')\n    return ax", "compilation_passed": true, "time": 0.15153908729553223, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.distplot(df[\"age\"], bins=30, kde=True, ax=None)\n    ax.set_xlabel(\"age\")\n    return ax", "compilation_passed": true, "time": 0.4267280101776123, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 35, 39, 37], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"select * from {table_name};\", conn)\n    if df.loc[df['age'] < 0].shape[0] > 0:\n        raise ValueError(\"Negative age values are not allowed in the table\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.0390009880065918, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import sqlite3\nimport pandas as pd\nimport seaborn as sns\n\n\ndef task_func(db_name=\"test.db\", table_name=\"People\"):\n    \"\"\"\n    Draw the age distribution of the persons in an SQLite3 table and returns the Axes object of the plot.\n    Raises a ValueError if the loaded data contains negative age values.\n\n    Parameters:\n    db_name (str, optional): The full path to the SQLite3 database file. Defaults to 'test.db'.\n    table_name (str, optional): The name of the table to plot from. Defaults to 'People'.\n\n    Returns:\n    matplotlib.axes._axes.Axes: Axes object representing the age distribution plot,\n                                           with x-axis showing 'age' and a default of bins of 30, and kde set to True.\n\n    Requirements:\n    - sqlite3\n    - pandas\n    - seaborn\n\n    Raises:\n    ValueError: If the data contains negative age values.\n    \n    Examples:\n    >>> ax = task_func('path/to/test.db', 'People')\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    >>> ax = task_func()\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    conn = sqlite3.connect(db_name)\n    df = pd.read_sql_query(f\"SELECT age from {table_name}\", conn)\n    if (df[\"age\"] < 0).any():\n        raise ValueError(\"Data contains negative age values.\")\n    ax = sns.histplot(data=df, x=\"age\", bins=30, kde=True)\n    ax.set_xlabel(\"Age\")\n    return ax", "compilation_passed": true, "time": 0.11676287651062012, "tests_passed": true, "error": null}}
