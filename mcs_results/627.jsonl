{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 29, 33, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 29, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 29, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.001336812973022461, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 34, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 35, 33, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 34, 30, 35, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 28, 31, 30, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 29, 32, 35, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0058519840240478516, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 30, 35, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 29, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00021600723266601562, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00022482872009277344, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 29, 33, 31, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 34, 29, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 34, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00908803939819336, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 28, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30, 29, 28, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00429224967956543, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 34, 33, 28, 29, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 35, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 30, 31, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 28, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 35, 34, 29, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 35, 34, 29, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 31, 35, 30, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 29, 30, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 29, 32, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 35, 34, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 35, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 28, 31, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 31, 29, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 29, 32, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 34, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00751805305480957, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 33, 29, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29, 35, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 34, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007018327713012695, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 35, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33, 32, 34, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": false, "time": 0.0002522468566894531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 35, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 29, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 28, 34, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 32, 34, 29, 31, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33, 34, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 34, 32, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 29, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 34, 35, 32, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00020194053649902344, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00019788742065429688, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 34, 33, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 35, 34, 29, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 33, 34, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 29, 32, 35, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 34, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 31, 33, 30, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32, 34, 33, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 35, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [29, 32, 35, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 28, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30, 35, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 31, 33, 29, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 32, 30, 33, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007018327713012695, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.00080108642578125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 31, 29, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 32, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 33, 32, 30, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0007417201995849609, "tests_passed": true, "error": null}}
{"selected_lines": [34, 29, 31, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [28, 29, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 29, 31, 30, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 31, 32, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 35, 29, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 35, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 34, 31, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33, 29, 32, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 32, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 31, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [35, 32, 29, 33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.011211156845092773, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00012493133544921875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30, 28, 33, 29, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 28, 33, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 31, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0007243156433105469, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 31, 34, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 30, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 29, 28, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 35, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 31, 29, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 31, 30, 29, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007728099822998047, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 31, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 29, 30, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 29, 30, 31, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 29, 33, 35, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007728099822998047, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 33, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.001336812973022461, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 29, 35, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 34, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 28, 29, 33, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 33, 28, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007598161697387695, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30, 33, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30, 34, 35, 29, 31, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [31, 34, 29, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 28, 30, 33, 32, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 30, 31, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00021600723266601562, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 34, 33, 29, 32, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 29, 32, 31, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008561849594116211, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 31, 35, 34, 29, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [30, 33, 29, 34, 28, 32, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0009028911590576172, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": false, "time": 0.0002522468566894531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 30, 31, 28, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 31, 34, 29, 33, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 31, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004997968673706055, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 31, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 31, 34, 35, 33, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 31, 28, 34, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 31, 35, 30, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 30, 33, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.009022951126098633, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 33, 31, 29, 30, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 31, 33, 32, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004656791687011719, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 32, 29, 33, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 32, 33, 35, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 35, 32, 30, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [30, 34, 29, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 33, 34, 30, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32, 28, 29, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00751805305480957, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [35, 33, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 31, 30, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 31, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32, 28, 30, 29, 35, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 34, 30, 29, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 35, 34, 32, 30, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32, 29, 35, 33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32, 30, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34, 32, 31, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 30, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 31, 28, 30, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 28, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0009191036224365234, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 28, 32, 31, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 32, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0007061958312988281, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 29, 30, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0046727657318115234, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 28, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 29, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35, 28, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 35, 28, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 30, 34, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 29, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 31, 33, 29, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33, 34, 32, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [30, 35, 31, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 33, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [35, 29, 28, 34, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008239030838012695, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 31, 28, 30, 29, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 29, 30, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008202314376831055, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 28, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 32, 29, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": false, "time": 0.0002522468566894531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 34, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 33, 29, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 30, 29, 31, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00013518333435058594, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 35, 32, 31, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 31, 30, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 33, 34, 32, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 35, 30, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007308006286621094, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007728099822998047, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 28, 29, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [33, 32, 34, 29, 31, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33, 30, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 35, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 31, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34, 35, 32, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 29, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0010101795196533203, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 29, 31, 30, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.005486965179443359, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [31, 32, 33, 34, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 29, 35, 28, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008630990982055664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00429224967956543, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0007131099700927734, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": false, "time": 0.0002522468566894531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [35, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007728099822998047, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0056688785552978516, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 33, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 30, 29, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33, 32, 34, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 29, 30, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 31, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 34, 33, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30, 33, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 33, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00019025802612304688, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 35, 30, 33, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29, 28, 32, 35, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 32, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 30, 32, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 32, 35, 34, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [35, 33, 31, 34, 32, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 28, 30, 33, 29, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 31, 35, 32, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 28, 35, 30, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 34, 30, 33, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 30, 28, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004682064056396484, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 35, 28, 29, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 34, 31, 35, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 28, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34, 29, 31, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 34, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00017595291137695312, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28, 29, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 30, 31, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 34, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 32, 34, 31, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29, 32, 33, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 30, 29, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 31, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 28, 34, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 31, 34, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004656791687011719, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 29, 35, 30, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [31, 30, 34, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 32, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 29, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 30, 34, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34, 35, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 34, 33, 31, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 30, 32, 34, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 28, 34, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 31, 29, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 31, 30, 33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 34, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 35, 33, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 29, 34, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 31, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 30, 33, 28, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 31, 32, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008547067642211914, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0007181167602539062, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 34, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 34, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 33, 29, 30, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 33, 32, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 31, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 35, 33, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [34, 31, 28, 29, 30, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00908803939819336, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 33, 31, 30, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29, 31, 34, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 33, 32, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 28, 34, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [30, 35, 31, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [35, 31, 29, 33, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0010390281677246094, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 29, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [35, 28, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 35, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00019788742065429688, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 30, 32, 33, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 29, 31, 32, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 28, 29, 35, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [35, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30, 32, 29, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 32, 29, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004562854766845703, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00013518333435058594, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008233070373535156, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 32, 28, 33, 31, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 35, 32, 29, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 28, 35, 30, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00429224967956543, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 35, 28, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 34, 30, 31, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 35, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 30, 29, 34, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 31, 28, 33, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004938840866088867, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 35, 33, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0046727657318115234, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 31, 29, 33, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 34, 32, 29, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 34, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 35, 30, 28, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 28, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 34, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [29, 30, 28, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008233070373535156, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 30, 31, 34, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004562854766845703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00013518333435058594, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30, 34, 32, 31, 33, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32, 35, 28, 30, 31, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34, 30, 29, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33, 32, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32, 30, 34, 31, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007398843765258789, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [28, 32, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.011211156845092773, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 35, 28, 33, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00751805305480957, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 30, 29, 31, 28, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 29, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 32, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [31, 34, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 31, 34, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008202314376831055, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 33, 31, 29, 28, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 34, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 32, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0007340908050537109, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004656791687011719, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 32, 28, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 28, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 29, 32, 33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008239030838012695, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 32, 34, 35, 31, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 34, 31, 28, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004562854766845703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 34, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28, 31, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 29, 30, 35, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 32, 33, 29, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00751805305480957, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 35, 32, 34, 28, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 34, 33, 35, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [31, 32, 30, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007728099822998047, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 32, 29, 31, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 28, 30, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008202314376831055, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 32, 28, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0056688785552978516, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.005486965179443359, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00022482872009277344, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 30, 31, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008273124694824219, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 28, 33, 31, 29, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 29, 35, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 28, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 32, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 33, 29, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [28, 32, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 33, 31, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 30, 35, 31, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30, 32, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 32, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 29, 34, 31, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30, 28, 34, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0007259845733642578, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 28, 33, 35, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008547067642211914, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 32, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 33, 34, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": false, "time": 0.0002522468566894531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00022482872009277344, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 34, 31, 35, 29, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 35, 33, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 28, 31, 29, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007153987884521484, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 31, 33, 32, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004656791687011719, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 35, 33, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 28, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 29, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 33, 34, 29, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [35, 29, 31, 33, 34, 30, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 33, 32, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 33, 29, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33, 30, 28, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004656791687011719, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 35, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 35, 28, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35, 32, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 28, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 35, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 31, 34, 32, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 34, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33, 34, 29, 32, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 35, 29, 34, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33, 29, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0013430118560791016, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004656791687011719, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 34, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 35, 30, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 35, 30, 33, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007598161697387695, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 32, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 34, 30, 32, 35, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 35, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 28, 34, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 31, 34, 32, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30, 31, 29, 28, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 32, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 33, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00012493133544921875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 35, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 31, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31, 33, 35, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 35, 28, 31, 30, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00751805305480957, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34, 35, 30, 28, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007018327713012695, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 34, 35, 30, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 29, 31, 30, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 35, 28, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [29, 30, 28, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 28, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 35, 30, 33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 28, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29, 32, 33, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00019788742065429688, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33, 32, 31, 34, 29, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0008039474487304688, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.0002009868621826172, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 35, 29, 33, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [28, 34, 35, 31, 29, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 31, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30, 32, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007060050964355469, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 31, 29, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007598161697387695, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 34, 30, 35, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 33, 32, 31, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 31, 33, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 29, 33, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0010390281677246094, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007153987884521484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 28, 31, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0073239803314208984, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 32, 29, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35, 29, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [31, 32, 30, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0010547637939453125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007598161697387695, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 29, 33, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007153987884521484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 33, 32, 35, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 35, 33, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 32, 28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 34, 28, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(10, 50) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 34, 32, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 28, 31, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00429224967956543, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 30, 35, 28, 29, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007728099822998047, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [28, 32, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 28, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35, 31, 30, 28, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33, 28, 31, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 29, 31, 28, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [35, 29, 33, 28, 30, 32, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [31, 33, 28, 30, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004656791687011719, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 31, 30, 29, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00019788742065429688, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 31, 29, 33, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.005486965179443359, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 32, 35, 29, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 35, 30, 32, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [28, 32, 30, 29, 31, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 34, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 31, 33, 30, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00012493133544921875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33, 30, 34, 35, 29, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 31, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008269071578979492, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0013499259948730469, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 33, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 29, 31, 35, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 35, 32, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append((product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004997968673706055, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 31, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 33, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 28, 32, 29, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28, 34, 35, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004562854766845703, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 35, 28, 29, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32, 30, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 35, 31, 29, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.005486965179443359, "tests_passed": true, "error": null}}
{"selected_lines": [29, 34, 28, 35, 31, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 35, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 30, 35, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f'Month {i}' for i in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 35, 30, 33, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 32, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 35, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0008151531219482422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35, 32, 29, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [31, 29, 34, 28, 35, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 28, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 35, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.00751805305480957, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 34, 33, 31, 29, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 29, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0007770061492919922, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 29, 28, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007851123809814453, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [31, 33, 28, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 30, 35, 32, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 28, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 35, 31, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008561849594116211, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 29, 28, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 34, 28, 35, 29, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008273124694824219, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 31, 34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 31, 29, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 34, 31, 35, 33, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 32, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {} Sales'.format(i) for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 32, 35, 28, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 3000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 31, 33, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 32, 34, 29, 28, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 31, 30, 33, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 30, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 32, 33, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 34, 32, 35, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": false, "time": 0.0002522468566894531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00019788742065429688, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 30, 28, 32, 35, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 32, 31, 35, 33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + list(map(lambda x: f'Month {x}', range(1, 13))))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 31, 34, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 32, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 32, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 30, 33, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.004938840866088867, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32, 35, 29, 28, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 30, 28, 35, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 28, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 31, 30, 33, 35, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 28, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(['Product', *range(1, 13)], sales)))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008222103118896484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 29, 30, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0007097721099853516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00013518333435058594, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [35, 31, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 29, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(Product=product, Month=1, Sales=sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": false, "time": 0.0002522468566894531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30, 34, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": false, "time": 0.0002262592315673828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007018327713012695, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 35, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 33, 28, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00017595291137695312, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 34, 30, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 29, 33, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {month}' for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 35, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 34, 35, 33, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(200, 800) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 29, 31, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007885932922363281, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 34, 30, 35, 33, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 28, 29, 32, 35, 33, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 30, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i + 1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 33, 29, 34, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=[\"Product\"] + [\"Month \" + str(m) for m in range(1, 13)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 31, 28, 32, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 29, 33, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 32, 34, 31, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame()\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 32, 35, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 33, 30, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 28, 29, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [28, 34, 30, 29, 33, 31, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28, 35, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list},\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 31, 29, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list, 'Month 1': randint(100, 200), 'Month 2': randint(100, 200), 'Month 3': randint(100, 200), 'Month 4': randint(100, 200), 'Month 5': randint(100, 200), 'Month 6': randint(100, 200), 'Month 7': randint(100, 200), 'Month 8': randint(100, 200), 'Month 9': randint(100, 200), 'Month 10': randint(100, 200), 'Month 11': randint(100, 200), 'Month 12': randint(100, 200)})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 29, 34, 35, 30, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [month for month in range(1, 13)])\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.012490272521972656, "tests_passed": false, "error": "statistics.StatisticsError"}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007398843765258789, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": false, "time": 0.00013518333435058594, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 32, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35, 28, 29, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 35, 29, 31, 34, 32, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month {}'.format(x) for x in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list, index=range(1,13))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008222103118896484, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 32, 31, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.insert(0, product)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 34, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11', 'Month 12', 'Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 34, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + ['Month ' + str(i + 1) for i in range(12)] + ['Average Sales'])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + ['Month ' + str(month) for month in range(1, 13)])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 28, 34, 29, 33], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([0, avg_sales])\n        sales_data.append({\"Product\": product, \"Month 1\": sales[0], \"Month 2\": sales[1],\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 29, 35, 32, 34, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = {}\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.009022951126098633, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {month}' for month in range(12)])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008630990982055664, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 31, 30, 29, 32, 35, 28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product, *sales])\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008619070053100586, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 31, 30, 28, 32, 33, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=['Product'] + [f'Month {i+1}' for i in range(12)])\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 34, 35, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(dict(zip(('Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6', 'Month 7',\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 34, 32, 33, 35, 31], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame({'Product': products_list})\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns=products_list)\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.008239030838012695, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 34, 31, 30, 28, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(\n    for product in products_list:\n        sales = [randint(500, 1000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.005228996276855469, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0045621395111083984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29, 32, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append({'Product': product, 'Month 1': sales[0], 'Month 2': sales[1], 'Month 3': sales[2], 'Month 4': sales[3],\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\"Product\": product, \"Month1\": sales[0], \"Month2\": sales[1], \"Month3\": sales[2],\n    sales_df = pd.DataFrame(sales_data, columns=['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5', 'Month 6',\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(index=pd.arange(12))\n    for product in products_list:\n        sales = [randint(100, 500) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0073239803314208984, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [0] * 12\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.007598161697387695, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 34, 35], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data)\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32, 31, 30], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(1000, 4000) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append({\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 28, 32], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = pd.DataFrame(columns = ['Product'] + [f\"Month {i+1}\" for i in range(12)] + [\"Average Sales\"])\n    for product in products_list:\n        sales = [randint(50, 100) for _ in range(12)]\n        avg_sales = mean(sales)\n        sales.append(avg_sales)\n        sales_data.append(sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 33, 32, 30, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = [randint(10, 100) for _ in range(12)]\n        avg_sales = round(mean(sales), 2)\n        sales.extend([avg_sales for _ in range(12)])\n        sales_data.append(list(product, *sales))\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i+1}' for i in range(12)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31, 29], "result": {"code": "from random import randint\nfrom statistics import mean\nimport pandas as pd\n\n\ndef task_func(products_list):\n    \"\"\"\n    This function takes in a list of product names and generates random sales data for each product over a period of\n    12 months. It then calculates the average sales for each product and returns the results as a pandas DataFrame with\n    columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'..\n    \n    Parameters:\n    products_list (list): A list of product names.\n    \n    Returns:\n    DataFrame: A pandas DataFrame with columns: 'Product', 'Month 1', 'Month 2', ..., 'Month 12', 'Average Sales'.\n    \n    Requirements:\n    - pandas\n    - random\n    - statistics\n    \n    Example:\n    >>> products = ['Apples', 'Bananas', 'Grapes', 'Oranges', 'Pineapples']\n    >>> sales_data = task_func(products)\n    >>> type(sales_data)\n    <class 'pandas.core.frame.DataFrame'>\n    \"\"\"\n    sales_data = []\n    for product in products_list:\n        sales = []\n        avg_sales = round(mean(sales), 2)\n        sales.append(avg_sales)\n        sales_data.append([product] + sales)\n    sales_df = pd.DataFrame(sales_data, columns=['Product'] + [f'Month {i}' for i in range(1, 13)] + ['Average Sales'])\n    return sales_df", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
