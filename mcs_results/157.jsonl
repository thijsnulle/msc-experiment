{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2275700569152832, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.0050859451293945, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 41, 38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.0026049613952637, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.002410888671875, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [40, 34, 38, 33, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.0049021244049072, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [41, 36, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.0016138553619385, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [36, 40, 38, 32, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.002073049545288, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [34, 32, 33, 36, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.0026068687438965, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [34, 36, 41, 32, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.00248384475708, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [34, 32, 40, 41, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22652602195739746, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08988523483276367, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08735513687133789, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23525381088256836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08595705032348633, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08684492111206055, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 33, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08948516845703125, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0894918441772461, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 40, 41, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08796811103820801, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 41, 33, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0883321762084961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0834207534790039, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 32, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36, 33, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22989416122436523, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23882198333740234, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22681713104248047, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08866524696350098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 41, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 33, 36, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08784794807434082, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08581399917602539, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 36, 38, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08564019203186035, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08601498603820801, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23773527145385742, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 40, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08590078353881836, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08616304397583008, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 41, 40, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09077811241149902, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.25259900093078613, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36, 32, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08620786666870117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2296161651611328, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 41, 36, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08603692054748535, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 36, 34, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08576679229736328, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2297649383544922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 32, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08580303192138672, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08576321601867676, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08035588264465332, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 33, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08512163162231445, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 41, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08041906356811523, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08675312995910645, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 38, 40, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 36, 32, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08602595329284668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 40, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23599481582641602, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 32, 33, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0854032039642334, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24857282638549805, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08504486083984375, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23901104927062988, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 34, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 34, 32, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08698010444641113, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2296161651611328, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22915220260620117, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36, 34, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08537697792053223, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22912883758544922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 38, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0812222957611084, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 33, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08105587959289551, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 36, 33, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08466506004333496, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08527779579162598, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 41, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08968019485473633, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23845696449279785, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08843588829040527, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 36, 40, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08673691749572754, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 32, 33, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 33, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08199191093444824, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 36, 32, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 41, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08104205131530762, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 38, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08622288703918457, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 40, 38, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08135509490966797, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23599481582641602, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 41, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08043599128723145, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08489203453063965, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.25263404846191406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 34, 41, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08757519721984863, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24794602394104004, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24372410774230957, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 41, 36, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08099603652954102, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23411893844604492, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.24064111709594727, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0856330394744873, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23151159286499023, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 32, 34, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08758687973022461, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08154988288879395, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 32, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24376201629638672, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08483028411865234, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 41, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0856940746307373, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32, 41, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08674287796020508, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 36, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08861184120178223, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08491921424865723, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 40, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08797097206115723, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08550405502319336, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08546590805053711, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 38, 33, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08581185340881348, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08492732048034668, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 41, 32, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08455801010131836, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08724284172058105, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 41, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08108115196228027, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08851313591003418, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.008173227310180664, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [41, 32, 36, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08487510681152344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38, 41, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08639121055603027, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 36, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08487296104431152, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.00017499923706054688, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [40, 38, 41, 36, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 41, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08935976028442383, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 36, 41, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08802914619445801, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 41, 36, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08485031127929688, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 41, 33, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08486723899841309, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 32, 40, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 33, 41, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08552193641662598, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07937979698181152, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 33, 32, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09225106239318848, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 33, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0808868408203125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 36, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 34, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0819556713104248, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 40, 34, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08466291427612305, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22989416122436523, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0800180435180664, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2343428134918213, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08143305778503418, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08436107635498047, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 40, 41, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08568072319030762, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23701024055480957, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 36, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09055209159851074, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08722901344299316, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 32, 36, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08564996719360352, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08429694175720215, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34, 38, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08174681663513184, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24857282638549805, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08132505416870117, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 40, 32, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08496499061584473, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08680605888366699, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08060908317565918, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23901104927062988, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 33, 41, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08502388000488281, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.084259033203125, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 34, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08585619926452637, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08918619155883789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08697295188903809, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23845696449279785, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23368597030639648, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 38, 33, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07998394966125488, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 40, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08432793617248535, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 38, 32, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08064484596252441, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 33, 41, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08272790908813477, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 33, 38, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08063173294067383, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 34, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 36, 33, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08514213562011719, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08562612533569336, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23487305641174316, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 38, 41, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0008230209350585938, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23525381088256836, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08681678771972656, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0852508544921875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 41, 32, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08580398559570312, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23411893844604492, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22912883758544922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 34, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08769798278808594, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 38, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08453679084777832, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23487305641174316, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08577203750610352, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 36, 40, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2229480743408203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0863497257232666, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 40, 38, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08585810661315918, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 36, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08672404289245605, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.008459091186523438, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08628106117248535, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 41, 36, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0820918083190918, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08615803718566895, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08615803718566895, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08615803718566895, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08619189262390137, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22666406631469727, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08866620063781738, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 38, 32, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08235001564025879, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 32, 33, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0849301815032959, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23525381088256836, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08501100540161133, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0840458869934082, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2297649383544922, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 33, 32, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08825898170471191, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 33, 40, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08828306198120117, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22912883758544922, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 38, 36, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08567285537719727, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 34, 38, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 41, 34, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0846400260925293, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 36, 38, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2297649383544922, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08406972885131836, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08594894409179688, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08577895164489746, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2343428134918213, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08460783958435059, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07971000671386719, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08518195152282715, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 34, 32, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08454227447509766, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 34, 33, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08394694328308105, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 38, 40, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08188891410827637, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 38, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0829017162322998, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 41, 33, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09111809730529785, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23525381088256836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08565711975097656, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 41, 34, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09036707878112793, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23773527145385742, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 36, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 40, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08443713188171387, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 41, 40, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08026599884033203, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0866689682006836, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08585286140441895, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23502421379089355, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08551979064941406, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24867701530456543, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.8047852516174316, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23882198333740234, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 38, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24257707595825195, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 40, 32, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08551502227783203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08481717109680176, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08625483512878418, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 40, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08505105972290039, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 38, 33, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 33, 32, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08110594749450684, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08586406707763672, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23775100708007812, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32, 34, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23411893844604492, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24857282638549805, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 41, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08631110191345215, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 38, 33, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.24064111709594727, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.0003190040588378906, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [36, 33, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 32, 36, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 41, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08527779579162598, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 41, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 33, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23748278617858887, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 33, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08525395393371582, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24221587181091309, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 34, 41, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08155012130737305, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7749860286712646, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 32, 34, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08170413970947266, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 41, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08630919456481934, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 34, 41, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08823299407958984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09058499336242676, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 40, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08152389526367188, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 33, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08802199363708496, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23068523406982422, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22652602195739746, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 34, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08695769309997559, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 38, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08113503456115723, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 32, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 41, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08968019485473633, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24867701530456543, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08749699592590332, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2368180751800537, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22989416122436523, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09120416641235352, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23923182487487793, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08174705505371094, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 41, 36, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08669114112854004, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23068523406982422, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08615803718566895, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08515787124633789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22989416122436523, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 41, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08571791648864746, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08613705635070801, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2229480743408203, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23502421379089355, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2296161651611328, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08882284164428711, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 38, 41, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 33, 34, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08571696281433105, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2613077163696289, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23411893844604492, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.00991201400756836, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 34, 41, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08626770973205566, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 36, 33, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08755874633789062, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.0001957416534423828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08698892593383789, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 41, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08686995506286621, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08716797828674316, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.238508939743042, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08576273918151855, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08720111846923828, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 41, 36, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08669114112854004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 40, 33, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0810842514038086, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08715486526489258, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38, 40, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08068180084228516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08659696578979492, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08035564422607422, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 38, 33, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24810481071472168, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 33, 32, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08492493629455566, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09174013137817383, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08495497703552246, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24857282638549805, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09151816368103027, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 38, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08595895767211914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 38, 40, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0865640640258789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08591318130493164, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24221587181091309, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23773527145385742, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 34, 32, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08302593231201172, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 33, 38, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 41, 34, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0859842300415039, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08553075790405273, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 38, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08143782615661621, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 36, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08564996719360352, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0881049633026123, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23599481582641602, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 33, 40, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 41, 36, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08612680435180664, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 41, 32, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08806777000427246, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34, 41, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 41, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08107733726501465, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23740077018737793, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24042701721191406, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2404789924621582, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24463796615600586, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08917713165283203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08152389526367188, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2297649383544922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 36, 41, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08551692962646484, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 40, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08709001541137695, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 34, 41, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08513402938842773, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23775100708007812, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 34, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08469605445861816, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08773303031921387, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09069204330444336, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08536410331726074, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38, 32, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 32, 33, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08524107933044434, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23525381088256836, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09103798866271973, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 38, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 40, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08577489852905273, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2954068183898926, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36, 40, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 38, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08775019645690918, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08591985702514648, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.25263404846191406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08832263946533203, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08970093727111816, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08828401565551758, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07937979698181152, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08843278884887695, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 32, 38, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23525381088256836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 33, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08820605278015137, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08748269081115723, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 33, 34, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 38, 32, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08540606498718262, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08076620101928711, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24145102500915527, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 32, 41, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08747601509094238, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08074688911437988, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08577895164489746, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08654499053955078, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09129881858825684, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 38, 32, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08620619773864746, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 38, 40, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08188891410827637, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 36, 41, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08710670471191406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 32, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 33, 41, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08153295516967773, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24145102500915527, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2296161651611328, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 38, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09027791023254395, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 33, 38, 40, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23773527145385742, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 32, 36, 40, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 38, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0888512134552002, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 33, 32, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08514785766601562, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 36, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08699321746826172, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 41, 34, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09044098854064941, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 32, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24810481071472168, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 40, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08505105972290039, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 41, 36, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0872809886932373, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2229480743408203, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.8109817504882812, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.27175402641296387, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24372410774230957, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 40, 38, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08047103881835938, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2369401454925537, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 38, 34, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08100295066833496, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 36, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08356285095214844, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.26676487922668457, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08701515197753906, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 41, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08611488342285156, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 40, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08965396881103516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 40, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08574795722961426, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 33, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08786702156066895, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 40, 33, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08537912368774414, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 41, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 33, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08782482147216797, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2229480743408203, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.008173227310180664, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 41, 36, 38, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08597207069396973, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 32, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0855412483215332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08239102363586426, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22681713104248047, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.00021386146545410156, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [36, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08546686172485352, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0846400260925293, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0806429386138916, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08443403244018555, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 32, 33, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08389925956726074, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 41, 33, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08545470237731934, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08449792861938477, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 40, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08642196655273438, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 33, 36, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08519721031188965, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 33, 41, 40, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 40, 33, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08493709564208984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 41, 40, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0837709903717041, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 41, 33, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08439207077026367, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7749860286712646, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24867701530456543, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 33, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0855720043182373, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 40, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08446788787841797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 36, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08845281600952148, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 32, 41, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 41, 40, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 34, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08044791221618652, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08849978446960449, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 36, 40, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0866401195526123, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23502421379089355, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 32, 36, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22115087509155273, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08527898788452148, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 33, 38, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08491683006286621, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2229480743408203, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23502421379089355, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 41, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08388781547546387, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0848379135131836, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 41, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08676385879516602, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 32, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08484601974487305, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23798561096191406, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 33, 32, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2297649383544922, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08550405502319336, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23368597030639648, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09129881858825684, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08556795120239258, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2613077163696289, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 40, 38, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08498907089233398, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 41, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08486294746398926, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 27.063270092010498, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 40, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08797097206115723, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.00991201400756836, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [36, 38, 41, 40, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08614087104797363, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 33, 38, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08103585243225098, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22681713104248047, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 34, 41, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08580684661865234, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2229480743408203, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23701024055480957, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 33, 38, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08255887031555176, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23487305641174316, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23773527145385742, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 40, 34, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08541321754455566, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 34, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08914804458618164, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 38, 34, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09168076515197754, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.09358024597167969, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08820009231567383, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08942413330078125, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0894918441772461, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 38, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08474493026733398, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38, 41, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0849618911743164, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07970595359802246, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08675312995910645, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24042701721191406, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22915220260620117, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 41, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08682489395141602, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.084716796875, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.0001957416534423828, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 40, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08856487274169922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 40, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08569788932800293, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 36, 40, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08576703071594238, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08569693565368652, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2613077163696289, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 33, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 33, 38, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08565783500671387, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 36, 32, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0844111442565918, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0841681957244873, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08408331871032715, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07951712608337402, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 33, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2954068183898926, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08477783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0834650993347168, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 40, 38, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 33, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08544516563415527, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 36, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0850381851196289, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23798561096191406, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 34, 40, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.07981991767883301, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.97416090965271, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22989416122436523, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.00017499923706054688, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 32, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 38, 36, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08425188064575195, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32, 40, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08471393585205078, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08380913734436035, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 40, 32, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08389401435852051, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 38, 32, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08540606498718262, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23068523406982422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08515787124633789, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 36, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08426618576049805, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24867701530456543, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08034396171569824, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 41, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08631110191345215, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 40, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08505702018737793, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08184027671813965, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 41, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08488798141479492, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23599481582641602, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.084503173828125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08070802688598633, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 41, 40, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08929586410522461, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24867701530456543, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08408689498901367, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.00991201400756836, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0824129581451416, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08498692512512207, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08374214172363281, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 40, 41, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0799410343170166, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2368180751800537, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 32, 33, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08878517150878906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08413100242614746, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 38, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 32, 38, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08394074440002441, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 40, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07976412773132324, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24257707595825195, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23525381088256836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08470416069030762, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2296161651611328, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 40, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08550500869750977, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 1.0026068687438965, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [40, 41, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08388400077819824, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08062171936035156, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 33, 36, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07992792129516602, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 38, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08025598526000977, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08480000495910645, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08503890037536621, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 40, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.5886640548706055, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2404789924621582, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23748278617858887, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 38, 32, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08539295196533203, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.008173227310180664, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23480510711669922, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08403706550598145, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 40, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 33, 34, 32, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08672308921813965, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 32, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08480000495910645, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08537817001342773, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 40, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0802009105682373, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 32, 34, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08426594734191895, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 41, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08776974678039551, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23773527145385742, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08981561660766602, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24810481071472168, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 41, 33, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.07996392250061035, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08400177955627441, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23798561096191406, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23923182487487793, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08362889289855957, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 34, 41, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08562111854553223, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32, 34, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 32, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. The data should be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08473420143127441, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08634495735168457, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 40, 33, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08637690544128418, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.00021409988403320312, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.25263404846191406, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 33, 36, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24042701721191406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.008173227310180664, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08397817611694336, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 32, 36, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0796959400177002, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23773527145385742, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 38, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08580708503723145, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 41, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 41, 33, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08439207077026367, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 38, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08502602577209473, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 34, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08480477333068848, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 33, 36, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23845696449279785, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23573517799377441, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 32, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 36, 32, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08471822738647461, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08615803718566895, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 40, 36, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22681713104248047, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08447790145874023, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.00021386146545410156, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33, 41, 36, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07880973815917969, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 41, 33, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08545899391174316, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08471274375915527, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.0002148151397705078, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [36, 32, 38, 40, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08543086051940918, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36, 34, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08479690551757812, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 36, 32, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.5953788757324219, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23923182487487793, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 38, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08512401580810547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 34, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08071708679199219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23599481582641602, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22912883758544922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23798561096191406, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07990813255310059, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 36, 40, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08916306495666504, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 36, 40, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08514118194580078, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08503413200378418, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 33, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08503603935241699, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0843040943145752, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23882198333740234, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08416104316711426, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24102783203125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 40, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08534502983093262, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08480501174926758, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08550405502319336, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 41, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08444905281066895, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 41, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08426809310913086, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 40, 32, 34, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08362221717834473, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 41, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0824129581451416, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.228410005569458, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 41, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08373665809631348, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08520388603210449, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07992696762084961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08357405662536621, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.007688999176025391, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24612808227539062, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 33, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 38, 40, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23798561096191406, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08569693565368652, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.8109817504882812, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07992005348205566, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 36, 34, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08414506912231445, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08480000495910645, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08466601371765137, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 34, 33, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08406877517700195, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2435901165008545, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22989416122436523, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.008173227310180664, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 41, 38, 33, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07958102226257324, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 36, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08421707153320312, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08422708511352539, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23411893844604492, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 38, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 40, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07948899269104004, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 40, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07987189292907715, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08506011962890625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.5933730602264404, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 33, 36, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08696293830871582, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0846400260925293, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08396697044372559, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08359575271606445, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 34, 36, 33, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07857394218444824, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08413100242614746, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24867701530456543, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08004379272460938, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 38, 34, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 38, 40, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08425092697143555, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34, 41, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 40, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08549308776855469, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24376201629638672, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"The input data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08502602577209473, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.0003190040588378906, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [36, 41, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 36, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07988214492797852, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 38, 40, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08411192893981934, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2535078525543213, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 38, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='seismic', center=0, annot=False, fmt='', linewidths=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0829017162322998, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.25263404846191406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().to_numpy()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0863497257232666, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 38, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0854647159576416, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in \"iub\":\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.3256261348724365, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 36, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0841667652130127, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 40, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24221587181091309, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08537817001342773, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08915567398071289, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().round(3)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23480510711669922, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 38, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0847787857055664, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2 or data.dtype.kind not in 'biu':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36, 33, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07966303825378418, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08529996871948242, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, cbar_kws={'shrink': 0.5}, fmt='.2f', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22912883758544922, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08017182350158691, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36, 41, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data is not a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0841531753540039, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 38, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08872294425964355, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=0.5, cmap='Blues')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0854179859161377, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0842428207397461, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 38, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08426499366760254, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 41, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09030818939208984, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 40, 33, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 38, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08501577377319336, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23923826217651367, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 34, 38, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08932900428771973, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23502421379089355, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 40, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0839390754699707, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08445191383361816, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 40, 41, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=True, linewidths=.5, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.085723876953125, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 41, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Blues', center=0, fmt='', linewidths=.5, cbar_kws={'label': 'Correlation', 'orientation': 'horizontal'})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 38, 34, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"RdYlGn\", annot=True, fmt=\".2f\", linewidths=.5, linecolor=\"white\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.09168076515197754, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.5966830253601074, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2297649383544922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08951616287231445, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 32, 38, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08434891700744629, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24612808227539062, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 38, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08458995819091797, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 33, 32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='Reds', vmin=-1, vmax=1)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0849449634552002, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 40, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Data should be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08716797828674316, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23882198333740234, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', vmin=-1, vmax=1, center=0, cmap='RdBu', square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24257707595825195, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7749860286712646, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 36, 41, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 38, 32, 41, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08451485633850098, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 33, 38, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22989416122436523, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 40, 33, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or not all(isinstance(val, (int, float)) for row in data for val in row):\n        raise ValueError(\"The input data must be a 2D array.\")\n    df = pd.DataFrame(data, columns=range(len(data[0])))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 40, 41, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08087778091430664, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 33, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.08393502235412598, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24794602394104004, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24463796615600586, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.00021386146545410156, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 41, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08351278305053711, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08388209342956543, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23773527145385742, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23701024055480957, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 36, 34, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Invalid input data. Expected a 2D array.\")\n    df = pd.DataFrame(data).apply(np.mean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cbar=False, cmap=\"coolwarm\",\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 33, 36, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError('Invalid input data, data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08355402946472168, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2340559959411621, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07966017723083496, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_dict(dict(zip(df.columns, pd.stats.moment_helpers.correlation(df, center=0))))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 40, 41, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr(method='pearson'))\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07986998558044434, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.7739999294281006, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.name not in 'int' + 'float':\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array\")\n    df = pd.DataFrame(data, columns=['feature_%d' % i for i in range(data.shape[1])])\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08936500549316406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24794602394104004, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Data must be a 2D numpy array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdBu', annot=False, fmt='')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08070802688598633, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"Blues\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.228410005569458, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 38, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2297649383544922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.22115087509155273, "tests_passed": true, "error": null}}
{"selected_lines": [41, 32, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".2f\", cmap=\"cool\", vmin=-1, vmax=1, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08423519134521484, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or data.dtype.kind not in ('i', 'f'):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24794602394104004, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 36, 41, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson').abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08861708641052246, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 38, 36, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"The input data is not a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08499979972839355, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24145102500915527, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23645901679992676, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', fmt='.1f', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08516192436218262, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": false, "time": 0.00021409988403320312, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [41, 38, 36, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08415007591247559, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08416199684143066, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 32, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(chr, range(65, 73))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap=\"coolwarm\", annot=True, fmt=\".2f\", square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08475995063781738, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 38, 36, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, vmin=-1, vmax=1, fmt='.2f', center=0,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 34, 36, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.07989096641540527, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 36, 33, 40, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == 0:\n        raise ValueError(f\"Input data must be a 2D array, but received a {type(data).__name__}\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='RdYlGn', annot=True, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 41, 38, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(df.values.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08511924743652344, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.24064111709594727, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt='.2f', linewidths=.5, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08462810516357422, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 40, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError('Data is not a 2D numpy array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr().abs()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08823299407958984, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr(method='pearson')\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='coolwarm', annot=False, annot_kws={'size': 8})\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08060002326965332, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 41, 33, 38, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.shape[0] == data.shape[1]:\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 34, 38, 40, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or len(np.shape(data)) != 2:\n        raise ValueError('data must be a 2D array')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08028984069824219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24857282638549805, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data).copy()\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.2429828643798828, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38, 32, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='RdBu', center=0)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08434271812438965, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0842752456665039, "tests_passed": true, "error": null}}
{"selected_lines": [32, 41, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if len(data.shape) != 2 or not np.issubdtype(data.dtype, np.number):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation,\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23558902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 32, 38, 41, 40], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = np.corrcoef(data.T)\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, fmt=\".1f\", cmap=\"YlGn\", center=0, square=True)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08515191078186035, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.23218989372253418, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.008173227310180664, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [40, 34, 32, 36, 33, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Input data must be a 2D array\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame.from_records(\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, vmin=-1, vmax=1, cmap=\"Reds\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 41, 36, 40, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if data.ndim != 2 or np.issubdtype(data.dtype, np.object_) or np.any(pd.isnull(data)):\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(map(str, range(data.shape[1]))))\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0, fmt='.2f',\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data, columns=list(\"ABCDEFGHIJ\")).apply(np.nanmean, axis=1)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, linewidths=.5, cmap=\"Greens\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Data must be a 2D array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24221587181091309, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 38, 32, 36, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if isinstance(data, np.ndarray) and data.ndim == 2:\n        raise ValueError('Input data must be a 2D array.')\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 36, 33, 38, 41], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Invalid input data. Input must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = pd.DataFrame(df.corr())\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, xticklabels=correlation.index, yticklabels=correlation.columns)\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.5888369083404541, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray) or data.ndim != 2:\n        raise ValueError(\"Input data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, cmap='Blues', annot=True, fmt=\".2f\")\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.24463796615600586, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34, 40, 41, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(data):\n    \"\"\"\n    Analyze a dataset by calculating the average of values across each row and visualizing the correlation matrix as a\n    heatmap.\n\n    Parameters:\n    data (numpy.array): 2D array where each row represents a record and each column represents a feature\n\n    Returns:\n    tuple: A tuple containing:\n        - DataFrame: A pandas DataFrame enhanced with an 'Average' column that represents the mean across each row.\n        - Axes: The matplotlib Axes object showing the heatmap of the correlations.\n\n    Requirements:\n    - pandas\n    - numpy\n    - seaborn\n\n    Raises:\n    ValueError: If the input data is not a 2D array or if it contains non-numeric data.\n\n    Example:\n    >>> data = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 5, 4, 3, 2, 1]])\n    >>> df, ax = task_func(data)\n    >>> print(df['Average'].to_string(index=False))\n    4.5\n    4.5\n    \"\"\"\n    if not isinstance(data, np.ndarray):\n        raise ValueError(\"Invalid input data. Data must be a 2D numpy array.\")\n    df = pd.DataFrame(data)\n    # Calculate correlation matrix\n    correlation = df.corr()\n    # Plot the heatmap\n    ax = sns.heatmap(correlation, annot=True, cmap='coolwarm')\n    # Compute the average for each row and add it as a new column\n    df['Average'] = df.mean(axis=1)\n    return df, ax", "compilation_passed": true, "time": 0.08349490165710449, "tests_passed": true, "error": null}}
