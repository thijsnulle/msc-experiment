{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.06842398643493652, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 30, 33, 29, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0014667510986328125, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 31, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0019330978393554688, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0062189102172852, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 35, 32, 33, 31, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.005274057388305664, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05834627151489258, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0088210105895996, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.010663986206054688, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 30, 33, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0027589797973632812, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 29, 36, 33, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.14555096626281738, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 31, 37, 28, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 29, 36, 37, 32, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0017228126525878906, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 35, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.001291036605834961, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 28, 32, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 32, 28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0018601417541503906, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012211799621582031, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.00968027114868164, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 36, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0472867488861084, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.03555798530578613, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003801107406616211, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 30, 36, 35, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.002154111862182617, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 31, 28, 30, 35, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09760880470275879, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.001953125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 32, 28, 31, 37, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.001825094223022461, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04365110397338867, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 28, 31, 30, 37, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012581348419189453, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0012259483337402344, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 30, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07272195816040039, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32, 30, 33, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.001867055892944336, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 29, 33, 35, 32, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 28, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0468442440032959, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10161995887756348, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 37, 32, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0018651485443115234, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0098481178283691, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 28, 36, 31, 30, 37, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013320446014404297, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 30, 37, 28, 36, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.001271963119506836, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 28, 29, 32, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001519918441772461, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 37, 29, 35, 30, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0015730857849121094, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.005277872085571289, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 36, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003180980682373047, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 29, 33, 30, 36, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0012350082397460938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return str(e)", "compilation_passed": true, "time": 0.0012431144714355469, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [28, 36, 32, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0067965984344482, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.009261131286621094, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 31, 28, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.16916894912719727, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0019288063049316406, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05870795249938965, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 28, 29, 37, 32, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result != 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0015158653259277344, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 28, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0103158950805664, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30, 29, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0028510093688964844, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 35, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05057716369628906, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 29, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05287003517150879, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05098104476928711, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 35, 36, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07183694839477539, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 37, 30, 35, 32, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.010270833969116211, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0035729408264160156, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 30, 35, 28, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016529560089111328, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012440681457519531, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027060508728027344, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 37, 28, 30, 36, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013003349304199219, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019288063049316406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 31, 35, 37, 36, 29, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0017688274383544922, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0011720657348632812, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 31, 29, 36, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0011358261108398438, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 32, 30, 31, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0011639595031738281, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 33, 29, 30, 28, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.00115203857421875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 29, 28, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0585939884185791, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 31, 37, 35, 30, 29, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012269020080566406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04797792434692383, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 28, 30, 36, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05149412155151367, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0017199516296386719, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 33, 37, 35, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.00127410888671875, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30, 28, 36, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027899742126464844, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 28, 37, 31, 36, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013759136199951172, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 32, 35, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0011839866638183594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32, 33, 29, 37, 28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0011839866638183594, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 36, 37, 31, 32, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0011856555938720703, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.029018163681030273, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019598007202148438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [36, 30, 32, 28, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0019011497497558594, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 32, 35, 37, 31, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0012128353118896484, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.010663986206054688, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.010663986206054688, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 31, 29, 28, 33, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012547969818115234, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001216888427734375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 37, 33, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0011501312255859375, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 28, 29, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.001188039779663086, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 37, 32, 36, 30, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(\"Script execution result: \" + str(result))\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.049365997314453125, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.058721065521240234, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.010663986206054688, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05098104476928711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 30, 33, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0016617774963378906, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29, 31, 30, 35, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 28, 33, 30, 37, 32, 35, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0014688968658447266, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0018041133880615234, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0011951923370361328, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.06842398643493652, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0169119834899902, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [36, 37, 32, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012497901916503906, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 35, 33, 29, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011949539184570312, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 37, 31, 29, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04886794090270996, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05359601974487305, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 37, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 30, 29, 28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0017559528350830078, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 36, 32, 37, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013470649719238281, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0013060569763183594, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 31, 28, 33, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.001249074935913086, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 30, 36, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013239383697509766, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 29, 31, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001538991928100586, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0090341567993164, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.031078100204467773, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 30, 33, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 30, 29, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.001631021499633789, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.031078100204467773, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0762476921081543, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 32, 33, 36, 28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001383066177368164, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 31, 36, 28, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013232231140136719, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 28, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012941360473632812, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 29, 31, 37, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011777877807617188, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10644888877868652, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0762476921081543, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 37, 31, 33, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012171268463134766, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0309140682220459, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 29, 33, 35, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05041098594665527, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 30, 29, 35, 36, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0016999244689941406, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32, 30, 31, 36, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027091503143310547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 32, 29, 28, 33, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0012140274047851562, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 35, 31, 37, 36, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 32, 29, 37, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011887550354003906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 37, 30, 33, 35, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0014140605926513672, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 28, 29, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.048972129821777344, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 30, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.001711130142211914, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10063791275024414, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 37, 29, 35, 33, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0018527507781982422, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 28, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0012891292572021484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 35, 37, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0014178752899169922, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.012560129165649414, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36, 28, 35, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012331008911132812, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.010663986206054688, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 31, 29, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.001241922378540039, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 36, 35, 28, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0012049674987792969, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.00127410888671875, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 37, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0014410018920898438, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0038597583770751953, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 28, 31, 32, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013549327850341797, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003325939178466797, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0079460144042969, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 29, 37, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012378692626953125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012128353118896484, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32, 35, 31, 36, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012090206146240234, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 28, 33, 31, 36, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0011589527130126953, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 31, 35, 33, 32, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0011718273162841797, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.008211374282837, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 35, 28, 33, 30, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.007963895797729492, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 30, 35, 31, 29, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0026459693908691406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 33, 35, 28, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.12158417701721191, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0309140682220459, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.050772905349731445, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003801107406616211, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0778818130493164, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 30, 36, 35, 33, 32, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0018281936645507812, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 29, 28, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.001983165740966797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 32, 36, 37, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.00121307373046875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 33, 31, 37, 35, 32, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012271404266357422, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 37, 35, 30, 32, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0012249946594238281, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.010663986206054688, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07713007926940918, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05848383903503418, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0038597583770751953, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.001178741455078125, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0585939884185791, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 37, 35, 32, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0011687278747558594, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027599334716796875, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0011982917785644531, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 35, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002833843231201172, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 33, 31, 32, 29, 36, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output(\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29, 31, 33, 36, 28, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 28, 37, 32, 33, 29, 36, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0014750957489013672, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 28, 31, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10038590431213379, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 31, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0022420883178710938, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0097568035125732, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 33, 29, 31, 36, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002996206283569336, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 36, 29, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.001220703125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 32, 37, 33, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027420520782470703, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 30, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 37, 33, 35, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(f'Script executed successfully!')\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0013408660888671875, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 30, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.00133514404296875, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05903887748718262, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04995894432067871, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0018520355224609375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10644888877868652, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 31, 35, 36, 28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0013620853424072266, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 32, 30, 35, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0013659000396728516, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 37, 36, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0012810230255126953, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 37, 30, 28, 29, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012750625610351562, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33, 30, 29, 31, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012240409851074219, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 37, 33, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1002349853515625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 28, 30, 32, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0017631053924560547, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 31, 29, 30, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07302999496459961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 37, 36, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0016388893127441406, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 37, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04700589179992676, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 31, 28, 33, 36, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0017900466918945312, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 33, 32, 28, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.002919912338256836, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 37, 36, 29, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0309140682220459, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 29, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10030412673950195, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0018000602722167969, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36, 37, 35, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107741355895996, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 35, 28, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012590885162353516, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.001905202865600586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.050359249114990234, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10707569122314453, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05870795249938965, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0017008781433105469, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 37, 28, 30, 36, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013003349304199219, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0015609264373779297, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 28, 31, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012123584747314453, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 35, 28, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 35, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09991288185119629, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.050772905349731445, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 30, 28, 35, 31, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.051145076751708984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 32, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0017108917236328125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10970497131347656, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 37, 36, 35, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0018260478973388672, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0046188831329346, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0309140682220459, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 28, 29, 33, 30, 35, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.003942012786865234, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 29, 37, 31, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0018150806427001953, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0766439437866211, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05848383903503418, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10119509696960449, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.11766886711120605, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 37, 33, 31, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0016896724700927734, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 35, 29, 33, 37, 36, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.051276206970214844, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 35, 30, 31, 32, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05118107795715332, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 30, 29, 35, 33, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0021851062774658203, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 31, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10717201232910156, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 33, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016510486602783203, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 37, 33, 36, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 30, 33, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0027589797973632812, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 28, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0012688636779785156, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 29, 32, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0014619827270507812, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 36, 37, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0012059211730957031, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0090341567993164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29, 31, 36, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0012929439544677734, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 35, 32, 37, 29, 36, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result != 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0012867450714111328, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011761188507080078, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 35, 28, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012590885162353516, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0011970996856689453, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 30, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0020570755004882812, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05812811851501465, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 32, 29, 35, 31, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 30, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10734224319458008, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 37, 33, 32, 35, 31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return str(e)", "compilation_passed": true, "time": 0.0018241405487060547, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29, 28, 33, 30, 35, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 30, 28, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002821207046508789, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 29, 32, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012459754943847656, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 33, 31, 28, 37, 29, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0013318061828613281, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0105209350585938, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0011861324310302734, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013620853424072266, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 30, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05812811851501465, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 28, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0013980865478515625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 36, 32, 29, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04990196228027344, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.002154111862182617, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32, 31, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09673714637756348, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.049600839614868164, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30, 29, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0018551349639892578, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0088210105895996, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 37, 29, 33, 36, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013761520385742188, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 36, 29, 35, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002874135971069336, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 30, 31, 36, 28, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0012180805206298828, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 31, 37, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.001194000244140625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 36, 31, 28, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0026590824127197266, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 28, 29, 36, 35, 32, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0017139911651611328, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 28, 29, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04986119270324707, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.002275228500366211, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0023059844970703125, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 28, 31, 32, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013289451599121094, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 36, 32, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 35, 28, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.001522064208984375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0766439437866211, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 31, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002027750015258789, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0097568035125732, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 31, 33, 32, 29, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09957194328308105, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.012154340744018555, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 37, 35, 31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001748800277709961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0013260841369628906, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30, 37, 32, 31, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0014221668243408203, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 31, 32, 35, 37, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.run(\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 29, 32, 28, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0018122196197509766, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 36, 35, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.00856614112854, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107741355895996, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 31, 30, 35, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.004917144775390625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.002755880355834961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 28, 36, 32, 35, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0023050308227539062, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 28, 37, 36, 32, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.002479076385498047, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.14220595359802246, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 31, 35, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0017209053039550781, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 32, 30, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07078003883361816, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003815174102783203, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 35, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05057716369628906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 29, 35, 37, 30, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003801107406616211, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 28, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33, 28, 36, 32, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.06707501411437988, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.03555798530578613, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 28, 37, 32, 29, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003097057342529297, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0018460750579833984, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 29, 35, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.051017045974731445, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019288063049316406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.12361788749694824, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0017697811126708984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 28, 29, 32, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.001814126968383789, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107741355895996, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30, 32, 35, 33, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013020038604736328, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 36, 35, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.00856614112854, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.06842398643493652, "tests_passed": true, "error": null}}
{"selected_lines": [35, 28, 30, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0017938613891601562, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0035729408264160156, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 33, 35, 36, 32, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.038182973861694336, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05834627151489258, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.029092788696289062, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 28, 35, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.048058271408081055, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29, 33, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0017430782318115234, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 37, 33, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012738704681396484, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 36, 29, 35, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0020170211791992188, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 35, 36, 31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0021409988403320312, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07852888107299805, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35, 37, 29, 28, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.001416921615600586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 29, 33, 28, 30, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.050726890563964844, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003271818161010742, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.012154340744018555, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32, 29, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027298927307128906, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 28, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.002919912338256836, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 32, 36, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027959346771240234, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0084619522094727, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0038597583770751953, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.010270833969116211, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 31, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.006394147872924805, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 28, 29, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0035619735717773438, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32, 35, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.005133152008056641, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 33, 28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.002276897430419922, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0103158950805664, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 31, 37, 36, 30, 35, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0021469593048095703, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 35, 33, 30, 31, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return str(e)", "compilation_passed": true, "time": 0.002232074737548828, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 37, 36, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.001934051513671875, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 28, 30, 36, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 36, 31, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0035729408264160156, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.058721065521240234, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31, 37, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0019130706787109375, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 32, 28, 30, 33, 31, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0017528533935546875, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 28, 29, 35, 31, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0025200843811035156, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 29, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.001773834228515625, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05848383903503418, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 32, 29, 37, 31, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.001529693603515625, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 36, 31, 28, 32, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10229682922363281, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0011970996856689453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36, 35, 29, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return str(e)", "compilation_passed": true, "time": 0.0021293163299560547, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07713007926940918, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.001283884048461914, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05834627151489258, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 36, 31, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027518272399902344, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019598007202148438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 30, 35, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0012052059173583984, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019288063049316406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [37, 30, 33, 31, 29, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0012559890747070312, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003815174102783203, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07852888107299805, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003325939178466797, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 37, 36, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011951923370361328, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0585939884185791, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 30, 33, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0027589797973632812, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 36, 33, 28, 35, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return str(e)", "compilation_passed": true, "time": 0.0013630390167236328, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.002275228500366211, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 35, 29, 33, 28, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0013039112091064453, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 32, 31, 35, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012311935424804688, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 29, 28, 30, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0011761188507080078, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 31, 29, 35, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.001149892807006836, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05024003982543945, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0087151527404785, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 30, 29, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.17560601234436035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 30, 31, 35, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0016889572143554688, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0309140682220459, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 37, 35, 28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012497901916503906, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05870795249938965, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 37, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012199878692626953, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 31, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 31, 28, 33, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012590885162353516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0028090476989746094, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 29, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.001809835433959961, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 31, 29, 36, 32, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012500286102294922, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33, 29, 28, 37, 31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012841224670410156, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [28, 36, 30, 35, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.06946516036987305, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 28, 35, 36, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0021791458129882812, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 28, 36, 37, 31, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001374959945678711, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.010663986206054688, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 37, 35, 33, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.001905202865600586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 35, 30, 29, 33, 32, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0087151527404785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 35, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001222848892211914, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 37, 31, 32, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0019161701202392578, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 35, 29, 36, 33, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011911392211914062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 32, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012068748474121094, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 32, 31, 35, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012140274047851562, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 37, 30, 35, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1060791015625, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002245664596557617, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 29, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002650022506713867, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 37, 31, 33, 29, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output(\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 32, 31, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.001322031021118164, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36, 30, 35, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0031249523162841797, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 28, 30, 36, 37, 33, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 28, 35, 31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0014200210571289062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 28, 36, 32, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.06707501411437988, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0011970996856689453, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.02947092056274414, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 35, 29, 30, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0031890869140625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 31, 33, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013530254364013672, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 37, 35, 31, 32, 29, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012140274047851562, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 35, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32, 36, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10155820846557617, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32, 29, 37, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10142302513122559, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019598007202148438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 37, 36, 30, 28, 29, 31, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0034470558166503906, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0079460144042969, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 32, 29, 35, 31, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 33, 37, 32, 28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0013511180877685547, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 29, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05072832107543945, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.051445960998535156, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.11000585556030273, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 33, 31, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10812115669250488, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 28, 37, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0019500255584716797, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 29, 33, 37, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012390613555908203, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012040138244628906, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 37, 33, 30, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 31, 28, 29, 33, 30, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0012819766998291016, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30, 28, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09636378288269043, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 30, 29, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.17560601234436035, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 32, 30, 33, 29, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0016090869903564453, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36, 35, 30, 31, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0015261173248291016, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 33, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0013709068298339844, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 31, 28, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05050969123840332, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 36, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0395047664642334, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 36, 32, 30, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 36, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0017879009246826172, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30, 32, 31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0018651485443115234, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 28, 36, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09799075126647949, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 36, 33, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016512870788574219, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.001277923583984375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 29, 30, 36, 28, 37, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.run(\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.001905202865600586, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012769699096679688, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 36, 31, 29, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10995721817016602, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 31, 35, 33, 30, 36, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0016868114471435547, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0017008781433105469, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 33, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.049329280853271484, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019598007202148438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [35, 28, 32, 36, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05177927017211914, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 30, 33, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.001953125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 30, 31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.00238800048828125, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0038597583770751953, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0098481178283691, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 37, 29, 32, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013000965118408203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31, 37, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0019130706787109375, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0079460144042969, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 36, 35, 31, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28, 36, 33, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012316703796386719, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 29, 37, 31, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.001177072525024414, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 37, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05039191246032715, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 37, 35, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0018317699432373047, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019598007202148438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0098481178283691, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29, 36, 31, 33, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012600421905517578, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09629297256469727, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.00968027114868164, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 30, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0016398429870605469, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0018739700317382812, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 35, 29, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003184795379638672, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107741355895996, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 31, 30, 36, 28, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003081798553466797, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.049397945404052734, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 31, 29, 33, 32, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016987323760986328, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019288063049316406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [35, 31, 32, 29, 36, 28, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09991192817687988, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019598007202148438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [31, 37, 28, 36, 32, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0017211437225341797, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10707569122314453, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 37, 35, 29, 36, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016090869903564453, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32, 30, 28, 37, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0012052059173583984, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 28, 35, 32, 31, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013260841369628906, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 28, 32, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05038189888000488, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0090341567993164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 37, 35, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0016508102416992188, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 37, 32, 31, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0013909339904785156, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 35, 32, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016329288482666016, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 33, 30, 31, 29, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013439655303955078, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 29, 31, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013089179992675781, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 37, 32, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012691020965576172, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 36, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09900593757629395, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 35, 36, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0017321109771728516, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.12361788749694824, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0011861324310302734, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33, 31, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0020852088928222656, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012788772583007812, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09860086441040039, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 31, 33, 29, 28, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0016329288482666016, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 32, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012407302856445312, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012021064758300781, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0014748573303222656, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 28, 29, 33, 36, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0014591217041015625, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 28, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0022017955780029297, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019598007202148438, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 36, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0014591217041015625, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0098481178283691, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 37, 29, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0015070438385009766, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 36, 32, 37, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013470649719238281, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0088210105895996, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10119509696960449, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0020360946655273438, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30, 28, 37, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0013003349304199219, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 32, 33, 28, 36, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0011739730834960938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 37, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 37, 33, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0011851787567138672, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07003211975097656, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 32, 37, 33, 31, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0011839866638183594, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 37, 35, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0016508102416992188, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 33, 32, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0083069801330566, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107741355895996, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.00875401496887207, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.03555798530578613, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31, 33, 37, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.006986856460571289, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09629297256469727, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 29, 37, 33, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 31, 32, 37, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0022759437561035156, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10644888877868652, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 32, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 35, 36, 28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002969026565551758, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 28, 29, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29, 37, 35, 36, 30, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0016679763793945312, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0019598007202148438, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 29, 32, 28, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0016291141510009766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36, 30, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 37, 31, 30, 28, 35, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 37, 32, 30, 35, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.001898050308227539, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.001953125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0016090869903564453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 30, 33, 37, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.00146484375, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 32, 37, 33, 31, 28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0014748573303222656, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 31, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002443075180053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 29, 30, 31, 37, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0014858245849609375, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003397226333618164, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 28, 30, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0031261444091796875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 28, 33, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05120205879211426, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 37, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012199878692626953, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 37, 32, 30, 31, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016031265258789062, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 30, 29, 36, 33, 32, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012068748474121094, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 32, 36, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027959346771240234, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 32, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0017757415771484375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10119509696960449, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 29, 31, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0013470649719238281, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0011720657348632812, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 31, 32, 29, 36, 30, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(f'Script executed successfully!')\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 33, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 36, 30, 35, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07263994216918945, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0021860599517822266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30, 32, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003070831298828125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 32, 37, 33, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012462139129638672, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0086030960083008, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.006050825119018555, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0029942989349365234, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.002930879592895508, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 29, 32, 35, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0025742053985595703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 32, 29, 33, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.002413034439086914, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 32, 29, 36, 37, 31, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run(['python', temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.17043590545654297, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003801107406616211, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 31, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003454923629760742, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 31, 28, 32, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.001943826675415039, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003815174102783203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.001210927963256836, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 33, 28, 29, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002579927444458008, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10119509696960449, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0013248920440673828, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36, 37, 32, 31, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0012211799621582031, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0019159317016601562, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 36, 29, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012068748474121094, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10119509696960449, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 28, 32, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 31, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09754180908203125, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 28, 37, 35, 32, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0015940666198730469, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10119509696960449, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05870795249938965, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012459754943847656, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0012328624725341797, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 37, 35, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0013179779052734375, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.02947092056274414, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0013110637664794922, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 32, 36, 31, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027518272399902344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 28, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09572625160217285, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04976630210876465, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.002275228500366211, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 30, 33, 37, 28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0017521381378173828, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0079460144042969, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.058145761489868164, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 35, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0013833045959472656, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 37, 28, 32, 29, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003222942352294922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 32, 33, 31, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0012040138244628906, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 36, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 36, 28, 35, 32, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An exception occurred: {str(e)}\"", "compilation_passed": true, "time": 0.0011448860168457031, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 37, 35, 29, 28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0012118816375732422, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 30, 31, 28, 29, 32, 36, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.check_output(\n        print(\"Script executed successfully!\")\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 29, 37, 36, 31, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0969839096069336, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10729813575744629, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 36, 28, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0018489360809326172, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 30, 37, 28, 36, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.001271963119506836, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 37, 33, 35, 28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0013608932495117188, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [28, 36, 37, 32, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012218952178955078, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0013248920440673828, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 33, 32, 36, 29, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0018188953399658203, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 37, 31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0016090869903564453, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 29, 35, 28, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0017859935760498047, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001149892807006836, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 31, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001219034194946289, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 28, 30, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.run(['python', temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09860396385192871, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 35, 31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0016810894012451172, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 37, 28, 36, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012891292572021484, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 36, 28, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0013267993927001953, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [29, 30, 36, 37, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0011970996856689453, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.001834869384765625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011870861053466797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 29, 36, 28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0015439987182617188, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.031078100204467773, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 31, 33, 30, 28, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.0014019012451171875, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 31, 37, 30, 29, 32, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001192331314086914, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 33, 35, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0030069351196289062, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05903887748718262, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0023758411407470703, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 28, 30, 32, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0014078617095947266, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 30, 37, 32, 36, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result != 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0012969970703125, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 37, 29, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.001953125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 28, 30, 36, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002004861831665039, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0018761157989501953, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 32, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.0012400150299072266, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 37, 35, 28, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013701915740966797, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 29, 32, 30, 35, 31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.00121307373046875, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05903887748718262, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 35, 28, 29, 31, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return str(e)", "compilation_passed": true, "time": 0.001287221908569336, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [28, 29, 35, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001251220703125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 32, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 29, 33, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012202262878417969, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 30, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.001233816146850586, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 36, 29, 35, 37, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.001322031021118164, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 31, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07104802131652832, "tests_passed": true, "error": null}}
{"selected_lines": [36, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04681515693664551, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33, 28, 30, 29, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0015947818756103516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0766439437866211, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": false, "time": 0.00019288063049316406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012409687042236328, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 29, 30, 32, 35, 31, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012178421020507812, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.010663986206054688, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33, 30, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.001354217529296875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 35, 31, 29, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0011739730834960938, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 36, 30, 35, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.0013229846954345703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05870795249938965, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.058721065521240234, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0762476921081543, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 29, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011630058288574219, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.00115203857421875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 29, 37, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04891490936279297, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0018351078033447266, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012958049774169922, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0035729408264160156, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 32, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0028340816497802734, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33, 37, 35, 30, 36, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002629995346069336, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 29, 28, 36, 37, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0011768341064453125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 30, 35, 33, 32, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.050189971923828125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 35, 33, 29, 37, 28, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04933905601501465, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0778818130493164, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 32, 37, 36, 33, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016567707061767578, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 28, 30, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0031261444091796875, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 29, 35, 32, 30, 33, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run(['python', temp_script_path])\n        print(f'Script executed successfully!')\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except FileNotFoundError:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09999608993530273, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 29, 36, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002218008041381836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 30, 28, 37, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0012269020080566406, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 37, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012581348419189453, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36, 30, 37, 29, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.0014181137084960938, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.058145761489868164, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0105209350585938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013620853424072266, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 30, 28, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.001850128173828125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0011718273162841797, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0011250972747802734, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0017719268798828125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 30, 29, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0995640754699707, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 35, 30, 36, 33, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 37, 28, 30, 36, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013003349304199219, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 33, 37, 29, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error running the script: {e}\"", "compilation_passed": true, "time": 0.0019989013671875, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001241922378540039, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10038399696350098, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0022809505462646484, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 37, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012390613555908203, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 33, 31, 28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.001230001449584961, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 29, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013072490692138672, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 30, 36, 35, 33, 32, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0018281936645507812, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 30, 28, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011799335479736328, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.001344919204711914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 32, 29, 31, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05074620246887207, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 33, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.049329280853271484, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 29, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0017731189727783203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 31, 30, 32, 29, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0013561248779296875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32, 28, 30, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(\"Script execution \" + str(result))\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07244515419006348, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 31, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Python script execution status: {result}\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04720115661621094, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 29, 30, 33, 35, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0016810894012451172, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 32, 33, 37, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012738704681396484, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.1037592887878418, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0097568035125732, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.013840198516845703, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.03241610527038574, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 36, 31, 37, 35, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012121200561523438, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.009246110916137695, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 32, 36, 35, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027959346771240234, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 37, 28, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012137889862060547, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0585939884185791, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0011870861053466797, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 31, 37, 28, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.001322031021118164, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 30, 35, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.06946516036987305, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 36, 32, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0079460144042969, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 28, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code_to_execute.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.049958229064941406, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0079460144042969, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0016360282897949219, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 32, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.run(['python3', temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.10058903694152832, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0085148811340332, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 29, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output(\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 31, 30, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 35, 37, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred during script execution: {str(e)}\"", "compilation_passed": true, "time": 0.005008220672607422, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 36, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.003565073013305664, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [28, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.002318143844604492, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path], stderr=subprocess.STDOUT)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0011839866638183594, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 30, 33, 32, 37, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.002216815948486328, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.005064964294433594, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 37, 35, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.run([temp_script_path], cwd=temp_dir, capture_output=True)\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.14127707481384277, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 31, 32, 30, 33, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0016169548034667969, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 32, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0012497901916503906, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07003211975097656, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 28, 37, 33, 31, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.002463817596435547, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [31, 37, 32, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04725813865661621, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 31, 30, 33, 37, 35, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0016720294952392578, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0021719932556152344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05019426345825195, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_call([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003072023391723633, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 28, 32, 29, 37, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012280941009521484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 36, 37, 29, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0014278888702392578, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 32, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002718210220336914, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"{result} {temp_script_path}\")\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05153393745422363, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 36, 31, 30, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0027518272399902344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 35, 32, 37, 28, 31, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, \"code.py\"))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"", "compilation_passed": true, "time": 0.001775979995727539, "tests_passed": true, "error": null}}
{"selected_lines": [28, 36, 30, 33, 32, 37, 31, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, script_path)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0014510154724121094, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0088210105895996, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([temp_script_path])\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07145190238952637, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(f\"Script executed successfully! {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.010113000869751, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copytree(temp_dir, \"temp\")\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0024161338806152344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 32, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0014882087707519531, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 28, 30, 33, 37, 31, 29, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001383066177368164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 30, 37, 29, 28, 33, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0013399124145507812, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 29, 33, 37, 30, 36, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0013797283172607422, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 29, 33, 31, 28, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python3', temp_script_path])\n        print(f'Script executed successfully!')\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.001332998275756836, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.058145761489868164, "tests_passed": true, "error": null}}
{"selected_lines": [28, 35, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, 'script.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0013461112976074219, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.07713007926940918, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 36, 32, 37, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.0013470649719238281, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0079460144042969, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05870795249938965, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 30, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.04812192916870117, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 28, 30, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(\n        print(f\"Python script execution status: {result}\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error executing script: {e}\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.002007007598876953, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.00875401496887207, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir + '/script.py')\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.049089908599853516, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.007651090621948242, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.05848383903503418, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.005277872085571289, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 37, 32, 30, 35, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output([sys.executable, temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return str(e)", "compilation_passed": true, "time": 0.001898050308227539, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return str(e)", "compilation_passed": true, "time": 0.009901762008666992, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.002007007598876953, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 35, 30, 28, 36, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], capture_output=True)\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with error: {e}\"", "compilation_passed": true, "time": 0.0017468929290771484, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True, check=True)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.003815174102783203, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 35, 29, 33, 28, 36, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"script.py\"))\n        temp_script_path = os.path.join(temp_dir, \"script.py\")\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0013229846954345703, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 36, 33, 31, 37, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'script.py')\n        result = subprocess.run([\"python\", temp_script_path], cwd=temp_dir, capture_output=True, text=True)\n        print(f\"Script executed successfully! {result}\")\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012347698211669922, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return f\"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0979759693145752, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 33, 29, 36, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'main.py')\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.09610605239868164, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 33, 37, 35, 32, 30, 36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, os.path.basename(script_path)))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.0016160011291503906, "tests_passed": true, "error": null}}
{"selected_lines": [37, 28, 33, 35, 31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script execution \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Exception caught: {e}\"", "compilation_passed": true, "time": 0.0012500286102294922, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 28, 35, 36, 31, 30, 37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.check_output(f\"cd {temp_dir} && python3 {temp_script_path} \", shell=True, stderr=subprocess.STDOUT).strip()\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error while executing the script: {e}\"", "compilation_passed": true, "time": 0.0012428760528564453, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 36, 37, 32, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run([temp_script_path], capture_output=True, text=True, cwd=temp_dir)\n        print(result)\n        if result != 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return f\"Script execution failed with the following error: {e}\"", "compilation_passed": true, "time": 0.001291036605834961, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"An error occurred while executing the script: {e}\"", "compilation_passed": true, "time": 0.002007007598876953, "tests_passed": true, "error": null}}
{"selected_lines": [28, 37, 33, 30, 31, 32, 29, 35], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, os.path.join(temp_dir, 'code.py'))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(['python', temp_script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        print(\"Script executed successfully!\" if result == 0 else \"Script execution failed!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Script execution failed: {e}\"", "compilation_passed": true, "time": 0.0012798309326171875, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0138370990753174, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(\"Script executed successfully!\")\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0119590759277344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 37, 32, 29], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'example_script.py')\n        result = subprocess.check_output(['python3', temp_script_path]).decode('utf-8')\n        print(result)\n        if result:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return f\"Error in executing the script: {str(e)}\"", "compilation_passed": true, "time": 0.0011739730834960938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 35, 28, 29, 31, 30, 32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copyfile(script_path, os.path.join(temp_dir, \"temp.py\"))\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.run(\n        print(\"Script execution result: \" + str(result))\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33, 30], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, 'run.py')\n        result = subprocess.run([sys.executable, temp_script_path], capture_output=True, text=True)\n        print(result)\n        if result == 0:\n            return 'Script executed successfully!'\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 0.002660989761352539, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except Exception as e:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0107698440551758, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import subprocess\nimport shutil\nimport os\n\ndef task_func(script_path: str, temp_dir: str) -> str:\n    \"\"\"\n    Execute a given Python code in a temporary directory.\n    \n    Parameters:\n    - script_path (str): The path to the Python code that needs to be executed.\n    - temp_dir (str): The path for the code to copy the Python code\n    \n    Returns:\n    - str: String indicating the success or failure of the script execution.\n    \n    Requirements:\n    - subprocess\n    - shutil\n    - os\n    \n    Example:\n    >>> task_func('/path/to/example_script.py')\n    'Script executed successfully!'\n    \n    Note: \n    - If the Python code can be run successfully return \"Script executed successfully!\", otherwise \"Script execution failed!\"\n    \"\"\"\n    try:\n        shutil.copy(script_path, temp_dir)\n        temp_script_path = os.path.join(temp_dir, os.path.basename(script_path))\n        result = subprocess.call([\"python\", temp_script_path])\n        print(result)\n        if result == 0:\n            return \"Script executed successfully!\"\n        else:\n            return \"Script execution failed!\"\n    except:\n        return \"Script execution failed!\"", "compilation_passed": true, "time": 1.0102269649505615, "tests_passed": true, "error": null}}
